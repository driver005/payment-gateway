basePath: /api
definitions:
  account.Account:
    properties:
      business_profile:
        $ref: '#/definitions/account.AccountBusinessProfile'
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  account.AccountBusinessProfile:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      mcc:
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      name:
        type: string
      object:
        type: string
      product_description:
        type: string
      support_address:
        format: uuid
        type: string
      support_email:
        type: string
      support_phone:
        type: string
      support_url:
        type: string
      updated_at:
        type: string
      url:
        type: string
    type: object
  address.Address:
    properties:
      address_1:
        description: Address line 1
        type: string
      address_2:
        description: Address line 2
        type: string
      city:
        description: City
        type: string
      company:
        description: Company name
        type: string
      country:
        allOf:
        - $ref: '#/definitions/country.Country'
        description: A country object. Available if the relation `country` is expanded.
      country_code:
        description: The 2 character ISO code of the country in lower case
        type: string
      created_at:
        type: string
      first_name:
        description: First name
        type: string
      id:
        type: string
      last_name:
        description: Last name
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      phone:
        description: Phone Number
        type: string
      postal_code:
        description: Postal Code
        type: string
      province:
        description: Province
        type: string
      updated_at:
        type: string
    type: object
  address.BillingDetails:
    properties:
      address:
        format: uuid
        type: string
      created_at:
        type: string
      email:
        description: Email address.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      name:
        description: Full name.
        type: string
      object:
        type: string
      phone:
        description: Billing phone number (including extension).
        type: string
      updated_at:
        type: string
    type: object
  address.Shipping:
    properties:
      address:
        format: uuid
        type: string
      carrier:
        description: The delivery service that shipped a physical product, such as
          Fedex, UPS, USPS, etc.
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      name:
        description: Recipient name.
        type: string
      object:
        type: string
      phone:
        description: Recipient phone (including extension).
        type: string
      tracking_number:
        description: The tracking number for a physical product, obtained from the
          delivery service. If multiple tracking numbers were generated for this purchase,
          please separate them with commas.
        type: string
      updated_at:
        type: string
    type: object
  attempt.Bind.request:
    properties:
      attach_to_self:
        type: boolean
      created_at:
        type: string
      customer:
        $ref: '#/definitions/uuid.NullUUID'
      flow_directions:
        items:
          type: string
        type: array
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      payment_method:
        $ref: '#/definitions/uuid.NullUUID'
      payment_method_details:
        $ref: '#/definitions/details.PaymentMethodDetails'
      setup_error:
        $ref: '#/definitions/errors.ApiErrors'
      setup_intent:
        $ref: '#/definitions/uuid.NullUUID'
      status:
        $ref: '#/definitions/attempt.Status'
      updated_at:
        type: string
      usage:
        $ref: '#/definitions/attempt.Usage'
    type: object
  attempt.SetupAttempt:
    properties:
      attach_to_self:
        type: boolean
      created_at:
        type: string
      customer:
        $ref: '#/definitions/customer.Customer'
      flow_directions:
        items:
          type: string
        type: array
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      payment_method:
        $ref: '#/definitions/method.PaymentMethod'
      payment_method_details:
        $ref: '#/definitions/details.PaymentMethodDetails'
      setup_error:
        $ref: '#/definitions/errors.ApiErrors'
      setup_intent:
        $ref: '#/definitions/setupIntent.SetupIntent'
      status:
        $ref: '#/definitions/attempt.Status'
      updated_at:
        type: string
      usage:
        $ref: '#/definitions/attempt.Usage'
    type: object
  attempt.Status:
    enum:
    - requires_confirmation
    - requires_action
    - processing
    - succeeded
    - failed
    - abandoned
    type: string
    x-enum-varnames:
    - StatusRequiresConfirmation
    - StatusRequiresAction
    - StatusProcessing
    - StatusSucceeded
    - StatusFailed
    - StatusAbandoned
  attempt.Usage:
    enum:
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - UsageOffSession
    - UsageOnSession
  balance.Balance:
    properties:
      available:
        description: Funds that are available to be transferred or paid out, whether
          automatically by Stripe or explicitly via the [Transfers API](https://stripe.com/docs/api#transfers)
          or [Payouts API](https://stripe.com/docs/api#payouts). The available balance
          for each currency and payment type can be found in the `source_types` property.
        items:
          format: uuid
          type: string
        type: array
      connect_reserved:
        description: Funds held due to negative balances on connected Custom accounts.
          The connect reserve balance for each currency and payment type can be found
          in the `source_types` property.
        items:
          format: uuid
          type: string
        type: array
      created_at:
        type: string
      id:
        type: string
      instant_available:
        description: Funds that can be paid out using Instant Payouts.
        items:
          format: uuid
          type: string
        type: array
      issuing:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      pending:
        description: Funds that are not yet available in the balance, due to the 7-day
          rolling pay cycle. The pending balance for each currency, and for each payment
          type, can be found in the `source_types` property.
        items:
          format: uuid
          type: string
        type: array
      updated_at:
        type: string
    type: object
  balance.BalanceTransaction:
    properties:
      amount:
        description: Gross amount of the transaction, in %s.
        type: integer
      available_on:
        description: The date the transaction's net funds will become available in
          the Stripe balance.
        type: integer
      created_at:
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      exchange_rate:
        description: The exchange rate used, if applicable, for this transaction.
          Specifically, if money was converted from currency A to currency B, then
          the `amount` in currency A, times `exchange_rate`, would be the `amount`
          in currency B. For example, suppose you charged a customer 10.00 EUR. Then
          the PaymentIntent's `amount` would be `1000` and `currency` would be `eur`.
          Suppose this was converted into 12.34 USD in your Stripe account. Then the
          BalanceTransaction's `amount` would be `1234`, `currency` would be `usd`,
          and `exchange_rate` would be `1.234`.
        type: number
      fee:
        description: Fees (in %s) paid for this transaction.
        type: integer
      fee_details:
        description: Detailed breakdown of fees (in %s) paid for this transaction.
        items:
          format: uuid
          type: string
        type: array
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      net:
        description: Net amount of the transaction, in %s.
        type: integer
      object:
        type: string
      reporting_category:
        description: '[Learn more](https://stripe.com/docs/reports/reporting-categories)
          about how reporting categories can help you understand balance transactions
          from an accounting perspective.'
        type: string
      source:
        type: string
      status:
        allOf:
        - $ref: '#/definitions/balance.Status'
        description: If the transaction's net funds are available in the Stripe balance
          yet. Either `available` or `pending`.
      type:
        allOf:
        - $ref: '#/definitions/balance.Type'
        description: 'Transaction type: `adjustment`, `advance`, `advance_funding`,
          `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`,
          `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`,
          `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`,
          `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`,
          `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`,
          `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`,
          `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types)
          about balance transaction types and what they represent. If you are looking
          to classify transactions for accounting purposes, you might want to consider
          `reporting_category` instead.'
      updated_at:
        type: string
    type: object
  balance.Status:
    enum:
    - available
    - pending
    type: string
    x-enum-varnames:
    - StatusAvailable
    - StatusPending
  balance.Type:
    enum:
    - adjustment
    - advance
    - advance_funding
    - anticipation_repayment
    - application_fee
    - application_fee_refund
    - charge
    - connect_collection_transfer
    - contribution
    - issuing_authorization_hold
    - issuing_authorization_release
    - issuing_dispute
    - issuing_transaction
    - payment
    - payment_failure_refund
    - payment_refund
    - payout
    - payout_cancel
    - payout_failure
    - refund
    - refund_failure
    - reserve_transaction
    - reserved_funds
    - reporting_category
    - stripe_fee
    - stripe_fx_fee
    - tax_fee
    - topup
    - topup_reversal
    - transfer
    - transfer_cancel
    - transfer_failure
    - transfer_refund
    type: string
    x-enum-varnames:
    - TypeAdjustment
    - TypeAdvance
    - TypeAdvanceFunding
    - TypeAnticipationRepayment
    - TypeApplicationFee
    - TypeApplicationFeeRefund
    - TypeCharge
    - TypeConnectCollectionTransfer
    - TypeContribution
    - TypeIssuingAuthorizationHold
    - TypeIssuingAuthorizationRelease
    - TypeIssuingDispute
    - TypeIssuingTransaction
    - TypePayment
    - TypePaymentFailureRefund
    - TypePaymentRefund
    - TypePayout
    - TypePayoutCancel
    - TypePayoutFailure
    - TypeRefund
    - TypeRefundFailure
    - TypeReserveTransaction
    - TypeReservedFunds
    - TypeReportingCategory
    - TypeStripeFee
    - TypeStripeFxFee
    - TypeTaxFee
    - TypeTopup
    - TypeTopupReversal
    - TypeTransfer
    - TypeTransferCancel
    - TypeTransferFailure
    - TypeTransferRefund
  bank.AccountHolderType:
    enum:
    - individual
    - company
    type: string
    x-enum-varnames:
    - AccountHolderTypeIndividual
    - AccountHolderTypeCompany
  bank.AccountType:
    enum:
    - checking
    - savings
    - futsu
    - toza
    type: string
    x-enum-varnames:
    - AccountTypeChecking
    - AccountTypeSavings
    - AccountTypeFutsu
    - AccountTypeToza
  bank.BankAccount:
    properties:
      account:
        $ref: '#/definitions/account.Account'
      account_holder_name:
        type: string
      account_holder_type:
        $ref: '#/definitions/bank.AccountHolderType'
      account_id:
        $ref: '#/definitions/uuid.NullUUID'
      account_type:
        $ref: '#/definitions/bank.AccountType'
      available_payout_methods:
        items:
          type: string
        type: array
      bank_name:
        type: string
      country:
        type: string
      created_at:
        type: string
      currency:
        type: string
      customer:
        $ref: '#/definitions/customer.Customer'
      customer_id:
        $ref: '#/definitions/uuid.NullUUID'
      default_for_currency:
        type: boolean
      fingerprint:
        type: string
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      routing_number:
        type: string
      status:
        $ref: '#/definitions/bank.Status'
      updated_at:
        type: string
    type: object
  bank.Bind.request:
    properties:
      account:
        $ref: '#/definitions/uuid.NullUUID'
      account_holder_name:
        type: string
      account_holder_type:
        $ref: '#/definitions/bank.AccountHolderType'
      account_id:
        $ref: '#/definitions/uuid.NullUUID'
      account_type:
        $ref: '#/definitions/bank.AccountType'
      available_payout_methods:
        items:
          type: string
        type: array
      bank_name:
        type: string
      country:
        type: string
      created_at:
        type: string
      currency:
        type: string
      customer:
        $ref: '#/definitions/uuid.NullUUID'
      customer_id:
        $ref: '#/definitions/uuid.NullUUID'
      default_for_currency:
        type: boolean
      fingerprint:
        type: string
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      routing_number:
        type: string
      status:
        $ref: '#/definitions/bank.Status'
      updated_at:
        type: string
    type: object
  bank.Status:
    enum:
    - new
    - validated
    - verified
    - verification_failed
    - errored
    type: string
    x-enum-varnames:
    - StatusNew
    - StatusValidated
    - StatusVerified
    - StatusVerificationFailed
    - StatusErrored
  card.AddressLine1Check:
    enum:
    - pass
    - fail
    - unavailable
    - unchecked
    type: string
    x-enum-varnames:
    - AddressLine1CheckPass
    - AddressLine1CheckFail
    - AddressLine1CheckUnavailable
    - AddressLine1CheckUnchecked
  card.AddressZipCheck:
    enum:
    - pass
    - fail
    - unavailable
    - unchecked
    type: string
    x-enum-varnames:
    - AddressZipCheckPass
    - AddressZipCheckFail
    - AddressZipCheckUnavailable
    - AddressZipCheckUnchecked
  card.Bind.request:
    properties:
      account:
        $ref: '#/definitions/uuid.NullUUID'
      address_city:
        type: string
      address_country:
        type: string
      address_line1:
        type: string
      address_line1_check:
        $ref: '#/definitions/card.AddressLine1Check'
      address_line2:
        type: string
      address_state:
        type: string
      address_zip:
        type: string
      address_zip_check:
        $ref: '#/definitions/card.AddressZipCheck'
      available_payout_methods:
        items:
          type: string
        type: array
      brand:
        $ref: '#/definitions/card.Brand'
      country:
        type: string
      created_at:
        type: string
      currency:
        type: string
      customer:
        $ref: '#/definitions/uuid.NullUUID'
      cvc_check:
        $ref: '#/definitions/card.CvcCheck'
      default_for_currency:
        type: boolean
      dynamic_last4:
        type: string
      exp_month:
        type: integer
      exp_year:
        type: integer
      fingerprint:
        type: string
      funding:
        $ref: '#/definitions/card.Funding'
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      name:
        type: string
      object:
        type: string
      status:
        type: string
      tokenization_method:
        $ref: '#/definitions/card.TokenizationMethod'
      updated_at:
        type: string
    type: object
  card.Brand:
    enum:
    - American Express
    - Diners Club
    - Discover
    - JCB
    - MasterCard
    - UnionPay
    - Visa
    - Unknown
    type: string
    x-enum-varnames:
    - BrandAmericanExpress
    - BrandDinersClub
    - BrandDiscover
    - BrandJCB
    - BrandMasterCard
    - BrandUnionPay
    - BrandVisa
    - BrandUnknown
  card.CvcCheck:
    enum:
    - pass
    - fail
    - unavailable
    - unchecked
    type: string
    x-enum-varnames:
    - CvcCheckPass
    - CvcCheckFail
    - CvcCheckUnavailable
    - CvcCheckUnchecked
  card.Funding:
    enum:
    - credit
    - debit
    - prepaid
    - unknown
    type: string
    x-enum-varnames:
    - FundingCredit
    - FundingDebit
    - FundingPrepaid
    - FundingUnknown
  card.TokenizationMethod:
    enum:
    - android_pay
    - apple_pay
    - masterpass
    - visa_checkout
    - unknown
    type: string
    x-enum-varnames:
    - TokenizationMethodAndroidPay
    - TokenizationMethodApplePay
    - TokenizationMethodMasterpass
    - TokenizationMethodVisaCheckout
    - TokenizationMethodUnknown
  cash.CashBalance:
    properties:
      available:
        allOf:
        - $ref: '#/definitions/core.JSONB'
        description: A hash of all cash balances available to this customer. You cannot
          delete a customer with any cash balances, even if the balance is 0. Amounts
          are represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
      created_at:
        type: string
      customer:
        description: The ID of the customer whose cash balance this object represents.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setting_reconciliation_mode:
        description: The configuration for how funds that land in the customer cash
          balance are reconciled.
        type: string
      setting_using_merchant_default:
        description: A flag to indicate if reconciliation mode returned is the user's
          default or is specific to this customer cash balance
        type: boolean
      updated_at:
        type: string
    type: object
  charge.Bind.request:
    properties:
      amount:
        type: integer
      amount_captured:
        type: integer
      amount_refunded:
        type: integer
      balance_transaction:
        $ref: '#/definitions/uuid.NullUUID'
      billing_details:
        $ref: '#/definitions/address.BillingDetails'
      calculated_statement_descriptor:
        type: string
      captured:
        type: boolean
      created_at:
        type: string
      currency:
        type: string
      customer:
        $ref: '#/definitions/uuid.NullUUID'
      description:
        type: string
      disputed:
        type: boolean
      failure_balance_transaction:
        $ref: '#/definitions/uuid.NullUUID'
      failure_code:
        type: string
      failure_message:
        type: string
      fraud_details:
        $ref: '#/definitions/charge.ChargeFraudDetails'
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      outcome:
        $ref: '#/definitions/charge.ChargeOutcome'
      paid:
        type: boolean
      payment_method:
        $ref: '#/definitions/uuid.NullUUID'
      payment_method_details:
        $ref: '#/definitions/details.PaymentMethodDetails'
      radar_options:
        $ref: '#/definitions/radar.RadarOptions'
      receipt_email:
        type: string
      receipt_number:
        type: string
      receipt_url:
        type: string
      refunded:
        type: boolean
      review:
        $ref: '#/definitions/uuid.NullUUID'
      shipping:
        $ref: '#/definitions/address.Shipping'
      statement_descriptor:
        type: string
      statement_descriptor_suffix:
        type: string
      status:
        $ref: '#/definitions/charge.Status'
      updated_at:
        type: string
    type: object
  charge.Charge:
    properties:
      amount:
        type: integer
      amount_captured:
        type: integer
      amount_refunded:
        type: integer
      balance_transaction:
        $ref: '#/definitions/balance.BalanceTransaction'
      billing_details:
        $ref: '#/definitions/address.BillingDetails'
      calculated_statement_descriptor:
        type: string
      captured:
        type: boolean
      created_at:
        type: string
      currency:
        type: string
      customer:
        $ref: '#/definitions/customer.Customer'
      description:
        type: string
      disputed:
        type: boolean
      failure_balance_transaction:
        $ref: '#/definitions/balance.BalanceTransaction'
      failure_code:
        type: string
      failure_message:
        type: string
      fraud_details:
        $ref: '#/definitions/charge.ChargeFraudDetails'
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      outcome:
        $ref: '#/definitions/charge.ChargeOutcome'
      paid:
        type: boolean
      payment_method:
        $ref: '#/definitions/method.PaymentMethod'
      payment_method_details:
        $ref: '#/definitions/details.PaymentMethodDetails'
      radar_options:
        $ref: '#/definitions/radar.RadarOptions'
      receipt_email:
        type: string
      receipt_number:
        type: string
      receipt_url:
        type: string
      refunded:
        type: boolean
      review:
        $ref: '#/definitions/review.Review'
      shipping:
        $ref: '#/definitions/address.Shipping'
      statement_descriptor:
        type: string
      statement_descriptor_suffix:
        type: string
      status:
        $ref: '#/definitions/charge.Status'
      updated_at:
        type: string
    type: object
  charge.ChargeFraudDetails:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      stripe_report:
        description: Assessments from Stripe. If set, the value is `fraudulent`.
        type: string
      updated_at:
        type: string
      user_report:
        description: Assessments reported by you. If set, possible values of are `safe`
          and `fraudulent`.
        type: string
    type: object
  charge.ChargeOutcome:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      network_status:
        allOf:
        - $ref: '#/definitions/charge.NetworkStatus'
        description: Possible values are `approved_by_network`, `declined_by_network`,
          `not_sent_to_network`, and `reversed_after_approval`. The value `reversed_after_approval`
          indicates the payment was [blocked by Stripe](https://stripe.com/docs/declines#blocked-payments)
          after bank authorization, and may temporarily appear as \"pending\" on a
          cardholder's statement.
      object:
        type: string
      reason:
        allOf:
        - $ref: '#/definitions/charge.Reason'
        description: An enumerated value providing a more detailed explanation of
          the outcome's `type`. Charges blocked by Radar's default block rule have
          the value `highest_risk_level`. Charges placed in review by Radar's default
          review rule have the value `elevated_risk_level`. Charges authorized, blocked,
          or placed in review by custom rules have the value `rule`. See [understanding
          declines](https://stripe.com/docs/declines) for more details.
      risk_level:
        allOf:
        - $ref: '#/definitions/charge.RiskLevel'
        description: Stripe Radar's evaluation of the riskiness of the payment. Possible
          values for evaluated payments are `normal`, `elevated`, `highest`. For non-card
          payments, and card-based payments predating the public assignment of risk
          levels, this field will have the value `not_assessed`. In the event of an
          error in the evaluation, this field will have the value `unknown`. This
          field is only available with Radar.
      risk_score:
        description: Stripe Radar's evaluation of the riskiness of the payment. Possible
          values for evaluated payments are between 0 and 100. For non-card payments,
          card-based payments predating the public assignment of risk scores, or in
          the event of an error during evaluation, this field will not be present.
          This field is only available with Radar for Fraud Teams.
        type: integer
      rule:
        $ref: '#/definitions/rule.Rule'
      seller_message:
        description: A human-readable description of the outcome type and reason,
          designed for you (the recipient of the payment), not your customer.
        type: string
      type:
        allOf:
        - $ref: '#/definitions/charge.Type'
        description: Possible values are `authorized`, `manual_review`, `issuer_declined`,
          `blocked`, and `invalid`. See [understanding declines](https://stripe.com/docs/declines)
          and [Radar reviews](https://stripe.com/docs/radar/reviews) for details.
      updated_at:
        type: string
    type: object
  charge.NetworkStatus:
    enum:
    - approved_by_network
    - declined_by_network
    - not_sent_to_network
    - reversed_after_approval
    type: string
    x-enum-varnames:
    - NetworkStatusApprovedByNetwork
    - NetworkStatusDeclinedByNetwork
    - NetworkStatusNotSentToNetwork
    - NetworkStatusReversedAfterApproval
  charge.Reason:
    enum:
    - highest_risk_level
    - elevated_risk_level
    type: string
    x-enum-varnames:
    - ReasonHighestRiskLevel
    - ReasonElevatedRiskLevel
  charge.RiskLevel:
    enum:
    - normal
    - elevated
    - highest
    - not_assessed
    - unknown
    type: string
    x-enum-varnames:
    - RiskLevelNormal
    - RiskLevelElevated
    - RiskLevelHighest
    - RiskLevelNotAssessed
    - RiskLevelUnknown
  charge.Status:
    enum:
    - succeeded
    - pending
    - failed
    type: string
    x-enum-varnames:
    - StatusSucceeded
    - StatusPending
    - StatusFailed
  charge.Type:
    enum:
    - authorized
    - manual_review
    - issuer_declined
    - blocked
    - invalid
    type: string
    x-enum-varnames:
    - TypeAuthorized
    - TypeManualReview
    - TypeIssuerDeclined
    - TypeBlocked
    - TypeInvalid
  checkout.BillingAddressCollection:
    enum:
    - auto
    - required
    type: string
    x-enum-varnames:
    - BillingAddressCollectionAuto
    - BillingAddressCollectionRequired
  checkout.CheckoutSession:
    properties:
      after_expiration:
        $ref: '#/definitions/page.PaymentPagesCheckoutSessionAfterExpiration'
      allow_promotion_codes:
        type: boolean
      amount_subtotal:
        type: integer
      amount_total:
        type: integer
      automatic_tax:
        type: boolean
      billing_address_collection:
        $ref: '#/definitions/checkout.BillingAddressCollection'
      cancel_url:
        type: string
      client_reference_id:
        type: string
      consent:
        $ref: '#/definitions/page.PaymentPagesCheckoutSessionConsent'
      consent_collection:
        $ref: '#/definitions/page.PaymentPagesCheckoutSessionConsentCollection'
      created_at:
        type: string
      currency:
        type: string
      custom_text:
        $ref: '#/definitions/page.PaymentPagesCheckoutSessionCustomText'
      customer:
        $ref: '#/definitions/customer.Customer'
      customer_creation:
        $ref: '#/definitions/checkout.CustomerCreation'
      customer_details:
        $ref: '#/definitions/page.PaymentPagesCheckoutSessionCustomerDetails'
      customer_email:
        type: string
      expires_at:
        type: integer
      id:
        type: string
      invoice:
        $ref: '#/definitions/invoice.Invoice'
      invoice_creation:
        $ref: '#/definitions/page.PaymentPagesCheckoutSessionInvoiceCreation'
      line_items:
        items:
          format: uuid
          type: string
        type: array
      livemode:
        type: boolean
      locale:
        $ref: '#/definitions/checkout.Locale'
      metadata:
        $ref: '#/definitions/core.JSONB'
      mode:
        $ref: '#/definitions/checkout.Mode'
      object:
        type: string
      payment_intent:
        $ref: '#/definitions/intent.PaymentIntent'
      payment_link:
        $ref: '#/definitions/link.PaymentLink'
      payment_method_collection:
        $ref: '#/definitions/checkout.PaymentMethodCollection'
      payment_method_options:
        $ref: '#/definitions/options.CheckoutSessionPaymentMethodOptions'
      payment_method_types:
        items:
          type: string
        type: array
      payment_status:
        $ref: '#/definitions/checkout.PaymentStatus'
      phone_number_collection:
        type: boolean
      recovered_from:
        type: string
      setup_intent:
        $ref: '#/definitions/setupIntent.SetupIntent'
      shipping_address_collection:
        $ref: '#/definitions/page.PaymentPagesCheckoutSessionShippingAddressCollection'
      shipping_cost:
        $ref: '#/definitions/page.PaymentPagesCheckoutSessionShippingCost'
      shipping_details:
        $ref: '#/definitions/address.Shipping'
      shipping_options:
        items:
          format: uuid
          type: string
        type: array
      status:
        $ref: '#/definitions/checkout.Status'
      submit_type:
        $ref: '#/definitions/checkout.SubmitType'
      subscription:
        $ref: '#/definitions/subscription.Subscription'
      success_url:
        type: string
      tax_id_collection:
        type: boolean
      total_details:
        $ref: '#/definitions/page.PaymentPagesCheckoutSessionTotalDetails'
      updated_at:
        type: string
      url:
        type: string
    type: object
  checkout.CustomerCreation:
    enum:
    - if_required
    - always
    type: string
    x-enum-varnames:
    - CustomerCreationIfRequired
    - CustomerCreationAlways
  checkout.Locale:
    enum:
    - auto
    - bg
    - cs
    - da
    - de
    - el
    - en
    - en-GB
    - es
    - es-419
    - et
    - fi
    - fil
    - fr
    - fr-CA
    - hr
    - hu
    - id
    - it
    - ja
    - ko
    - lt
    - lv
    - ms
    - mt
    - nb
    - nl
    - pl
    - pt
    - pt-BR
    - ro
    - ru
    - sk
    - sl
    - sv
    - th
    - tr
    - vi
    - zh
    - zh-HK
    - zh-TW
    type: string
    x-enum-varnames:
    - Localeauto
    - Localebg
    - Localecs
    - Localeda
    - Localede
    - Localeel
    - Localeen
    - Localeen_GB
    - Localees
    - Localees_419
    - Localeet
    - Localefi
    - Localefil
    - Localefr
    - Localefr_CA
    - Localehr
    - Localehu
    - Localeid
    - Localeit
    - Localeja
    - Localeko
    - Localelt
    - Localelv
    - Localems
    - Localemt
    - Localenb
    - Localenl
    - Localepl
    - Localept
    - Localept_BR
    - Localero
    - Localeru
    - Localesk
    - Localesl
    - Localesv
    - Localeth
    - Localetr
    - Localevi
    - Localezh
    - Localezh_HK
    - Localezh_TW
  checkout.Mode:
    enum:
    - payment
    - setup
    - subscription
    type: string
    x-enum-varnames:
    - ModePayment
    - ModeSetup
    - ModeSubscription
  checkout.PaymentMethodCollection:
    enum:
    - always
    - if_required
    type: string
    x-enum-varnames:
    - PaymentMethodCollectionAlways
    - PaymentMethodCollectionIfRequired
  checkout.PaymentStatus:
    enum:
    - paid
    - unpaid
    - no_payment_required
    type: string
    x-enum-varnames:
    - PaymentStatusPaid
    - PaymentStatusUnpaid
    - PaymentStatusNoPaymentRequired
  checkout.Status:
    enum:
    - open
    - complete
    - expired
    type: string
    x-enum-varnames:
    - StatusOpen
    - StatusComplete
    - StatusExpired
  checkout.SubmitType:
    enum:
    - auto
    - pay
    - book
    - donate
    type: string
    x-enum-varnames:
    - SubmitTypeAuto
    - SubmitTypePay
    - SubmitTypeBook
    - SubmitTypeDonate
  core.JSONB:
    additionalProperties: true
    type: object
  country.Country:
    properties:
      created_at:
        type: string
      display_name:
        description: The country name appropriate for display.
        type: string
      id:
        type: string
      iso_2:
        description: The 2 character ISO code of the country in lower case
        type: string
      iso_3:
        description: The 2 character ISO code of the country in lower case
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      name:
        description: The normalized country name in upper case.
        type: string
      num_code:
        description: The numerical ISO code for the country.
        type: string
      object:
        type: string
      updated_at:
        type: string
    type: object
  coupon.Bind.request:
    properties:
      amount_off:
        type: integer
      applies_to:
        items:
          type: string
        type: array
      created_at:
        type: string
      currency:
        type: string
      duration:
        $ref: '#/definitions/coupon.Duration'
      duration_in_months:
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      max_redemptions:
        type: integer
      metadata:
        $ref: '#/definitions/core.JSONB'
      name:
        type: string
      object:
        type: string
      percent_off:
        type: number
      redeem_by:
        type: integer
      times_redeemed:
        type: integer
      updated_at:
        type: string
      valid:
        type: boolean
    type: object
  coupon.Coupon:
    properties:
      amount_off:
        type: integer
      applies_to:
        items:
          type: string
        type: array
      created_at:
        type: string
      currency:
        type: string
      duration:
        $ref: '#/definitions/coupon.Duration'
      duration_in_months:
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      max_redemptions:
        type: integer
      metadata:
        $ref: '#/definitions/core.JSONB'
      name:
        type: string
      object:
        type: string
      percent_off:
        type: number
      redeem_by:
        type: integer
      times_redeemed:
        type: integer
      updated_at:
        type: string
      valid:
        type: boolean
    type: object
  coupon.Duration:
    enum:
    - once
    - repeating
    - forever
    type: string
    x-enum-varnames:
    - DurationOnce
    - DurationRepeating
    - DurationForever
  credit.Bind.request:
    properties:
      amount:
        description: The integer amount in %s representing the total amount of the
          credit note, including tax.
        type: integer
      created_at:
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        $ref: '#/definitions/uuid.NullUUID'
      customer_balance_transaction:
        $ref: '#/definitions/uuid.NullUUID'
      discount_amount:
        description: The integer amount in %s representing the total amount of discount
          that was credited.
        type: integer
      id:
        type: string
      invoice:
        $ref: '#/definitions/uuid.NullUUID'
      lines:
        description: The aggregate amounts calculated per discount for all line items.
        items:
          format: uuid
          type: string
        type: array
      livemode:
        type: boolean
      memo:
        description: Customer-facing text that appears on the credit note PDF.
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      number:
        description: A unique number that identifies this particular credit note and
          appears on the PDF of the credit note and its associated invoice.
        type: string
      object:
        type: string
      out_of_band_amount:
        description: Amount that was credited outside of Stripe.
        type: integer
      pdf:
        description: The link to download the PDF of the credit note.
        type: string
      reason:
        allOf:
        - $ref: '#/definitions/credit.Reason'
        description: Reason for issuing this credit note, one of `duplicate`, `fraudulent`,
          `order_change`, or `product_unsatisfactory`
      refund:
        $ref: '#/definitions/uuid.NullUUID'
      status:
        allOf:
        - $ref: '#/definitions/credit.Status'
        description: Status of this credit note, one of `issued` or `void`. Learn
          more about [voiding credit notes](https://stripe.com/docs/billing/invoices/credit-notes#voiding).
      subtotal:
        description: The integer amount in %s representing the amount of the credit
          note, excluding exclusive tax and invoice level discounts.
        type: integer
      subtotal_excluding_tax:
        description: The integer amount in %s representing the amount of the credit
          note, excluding all tax and invoice level discounts.
        type: integer
      tax_amounts:
        description: The aggregate amounts calculated per tax rate for all line items.
        items:
          format: uuid
          type: string
        type: array
      total:
        description: The integer amount in %s representing the total amount of the
          credit note, including tax and all discount.
        type: integer
      total_excluding_tax:
        description: The integer amount in %s representing the total amount of the
          credit note, excluding tax, but including discounts.
        type: integer
      type:
        allOf:
        - $ref: '#/definitions/credit.Type'
        description: Type of this credit note, one of `pre_payment` or `post_payment`.
          A `pre_payment` credit note means it was issued when the invoice was open.
          A `post_payment` credit note means it was issued when the invoice was paid.
      updated_at:
        type: string
      voided_at:
        description: The time that the credit note was voided.
        type: string
    type: object
  credit.CreditNote:
    properties:
      amount:
        description: The integer amount in %s representing the total amount of the
          credit note, including tax.
        type: integer
      created_at:
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        $ref: '#/definitions/customer.Customer'
      customer_balance_transaction:
        $ref: '#/definitions/balance.BalanceTransaction'
      discount_amount:
        description: The integer amount in %s representing the total amount of discount
          that was credited.
        type: integer
      id:
        type: string
      invoice:
        $ref: '#/definitions/invoice.Invoice'
      lines:
        description: The aggregate amounts calculated per discount for all line items.
        items:
          format: uuid
          type: string
        type: array
      livemode:
        type: boolean
      memo:
        description: Customer-facing text that appears on the credit note PDF.
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      number:
        description: A unique number that identifies this particular credit note and
          appears on the PDF of the credit note and its associated invoice.
        type: string
      object:
        type: string
      out_of_band_amount:
        description: Amount that was credited outside of Stripe.
        type: integer
      pdf:
        description: The link to download the PDF of the credit note.
        type: string
      reason:
        allOf:
        - $ref: '#/definitions/credit.Reason'
        description: Reason for issuing this credit note, one of `duplicate`, `fraudulent`,
          `order_change`, or `product_unsatisfactory`
      refund:
        $ref: '#/definitions/refund.Refund'
      status:
        allOf:
        - $ref: '#/definitions/credit.Status'
        description: Status of this credit note, one of `issued` or `void`. Learn
          more about [voiding credit notes](https://stripe.com/docs/billing/invoices/credit-notes#voiding).
      subtotal:
        description: The integer amount in %s representing the amount of the credit
          note, excluding exclusive tax and invoice level discounts.
        type: integer
      subtotal_excluding_tax:
        description: The integer amount in %s representing the amount of the credit
          note, excluding all tax and invoice level discounts.
        type: integer
      tax_amounts:
        description: The aggregate amounts calculated per tax rate for all line items.
        items:
          format: uuid
          type: string
        type: array
      total:
        description: The integer amount in %s representing the total amount of the
          credit note, including tax and all discount.
        type: integer
      total_excluding_tax:
        description: The integer amount in %s representing the total amount of the
          credit note, excluding tax, but including discounts.
        type: integer
      type:
        allOf:
        - $ref: '#/definitions/credit.Type'
        description: Type of this credit note, one of `pre_payment` or `post_payment`.
          A `pre_payment` credit note means it was issued when the invoice was open.
          A `post_payment` credit note means it was issued when the invoice was paid.
      updated_at:
        type: string
      voided_at:
        description: The time that the credit note was voided.
        type: string
    type: object
  credit.Reason:
    enum:
    - duplicate
    - fraudulent
    - order_change
    type: string
    x-enum-varnames:
    - ReasonDuplicate
    - ReasonFraudulent
    - ReasonOrderChange
  credit.Status:
    enum:
    - issued
    - void
    type: string
    x-enum-varnames:
    - StatusIssued
    - StatusVoid
  credit.Type:
    enum:
    - pre_payment
    - post_payment
    type: string
    x-enum-varnames:
    - TypePrePayment
    - TypePostPayment
  customer.Customer:
    properties:
      address:
        $ref: '#/definitions/address.Address'
      balance:
        type: integer
      created_at:
        type: string
      currency:
        description: CashBalance          *CashBalance                     `json:"cash_balance,omitempty"`
        type: string
      delinquent:
        type: boolean
      description:
        type: string
      email:
        description: Discount             *Discount                        `json:"discount,omitempty"`
        type: string
      id:
        type: string
      invoice_credit_balance:
        $ref: '#/definitions/core.JSONB'
      invoice_prefix:
        type: string
      invoice_settings:
        $ref: '#/definitions/settings.InvoiceSettingCustomerSetting'
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      name:
        type: string
      next_invoice_sequence:
        type: integer
      object:
        type: string
      phone:
        type: string
      preferred_locales:
        items:
          type: string
        type: array
      shipping:
        $ref: '#/definitions/address.Shipping'
      tax:
        allOf:
        - $ref: '#/definitions/customer.CustomerTax'
        description: |-
          Sources              *ApmsSourcesSourceList                  `json:"sources,omitempty"`
          Subscriptions        *SubscriptionList                       `json:"subscriptions,omitempty"`
      tax_exempt:
        $ref: '#/definitions/customer.TaxExempt'
      updated_at:
        type: string
    type: object
  customer.CustomerTax:
    properties:
      automatic_tax:
        description: Surfaces if automatic tax computation is possible given the current
          customer location information.
        type: string
      country:
        description: The customer's country as identified by Stripe Tax.
        type: string
      created_at:
        type: string
      id:
        type: string
      ip_address:
        description: A recent IP address of the customer used for tax reporting and
          tax location inference.
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      source:
        description: The data source used to infer the customer's location.
        type: string
      state:
        description: The customer's state, county, province, or region as identified
          by Stripe Tax.
        type: string
      updated_at:
        type: string
    type: object
  customer.TaxExempt:
    enum:
    - none
    - exempt
    - reverse
    type: string
    x-enum-varnames:
    - TaxExemptNone
    - TaxExemptExempt
    - TaxExemptReverse
  details.PaymentMethodDetails:
    properties:
      ach_credit_transfer:
        $ref: '#/definitions/details.PaymentMethodDetailsAchCreditTransfer'
      ach_debit:
        $ref: '#/definitions/details.PaymentMethodDetailsAchDebit'
      acss_debit:
        $ref: '#/definitions/details.PaymentMethodDetailsAcssDebit'
      affirm:
        $ref: '#/definitions/details.PaymentMethodDetailsAffirm'
      afterpay_clearpay:
        $ref: '#/definitions/details.PaymentMethodDetailsAfterpayClearpay'
      alipay:
        $ref: '#/definitions/details.PaymentMethodDetailsAlipay'
      au_becs_debit:
        $ref: '#/definitions/details.PaymentMethodDetailsAuBecsDebit'
      bacs_debit:
        $ref: '#/definitions/details.PaymentMethodDetailsBacsDebit'
      bancontact:
        $ref: '#/definitions/details.PaymentMethodDetailsBancontact'
      blik:
        $ref: '#/definitions/details.PaymentMethodDetailsBlik'
      boleto:
        $ref: '#/definitions/details.PaymentMethodDetailsBoleto'
      card:
        $ref: '#/definitions/details.PaymentMethodDetailsCard'
      card_present:
        $ref: '#/definitions/details.PaymentMethodDetailsCardPresent'
      created_at:
        type: string
      customer_balance:
        $ref: '#/definitions/details.PaymentMethodDetailsCustomerBalance'
      eps:
        $ref: '#/definitions/details.PaymentMethodDetailsEps'
      fpx:
        $ref: '#/definitions/details.PaymentMethodDetailsFpx'
      giropay:
        $ref: '#/definitions/details.PaymentMethodDetailsGiropay'
      grabpay:
        $ref: '#/definitions/details.PaymentMethodDetailsGrabpay'
      id:
        type: string
      ideal:
        $ref: '#/definitions/details.PaymentMethodDetailsIdeal'
      interac_present:
        $ref: '#/definitions/details.PaymentMethodDetailsInteracPresent'
      klarna:
        $ref: '#/definitions/details.PaymentMethodDetailsKlarna'
      konbini:
        $ref: '#/definitions/details.PaymentMethodDetailsKonbini'
      link:
        $ref: '#/definitions/details.PaymentMethodDetailsLink'
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      multibanco:
        $ref: '#/definitions/details.PaymentMethodDetailsMultibanco'
      object:
        type: string
      oxxo:
        $ref: '#/definitions/details.PaymentMethodDetailsOxxo'
      p24:
        $ref: '#/definitions/details.PaymentMethodDetailsP24'
      paynow:
        $ref: '#/definitions/details.PaymentMethodDetailsPaynow'
      pix:
        $ref: '#/definitions/details.PaymentMethodDetailsPix'
      promptpay:
        $ref: '#/definitions/details.PaymentMethodDetailsPromptpay'
      sepa_debit:
        $ref: '#/definitions/details.PaymentMethodDetailsSepaDebit'
      sofort:
        $ref: '#/definitions/details.PaymentMethodDetailsSofort'
      stripe_account:
        $ref: '#/definitions/details.PaymentMethodDetailsStripeAccount'
      updated_at:
        type: string
      us_bank_account:
        $ref: '#/definitions/details.PaymentMethodDetailsUsBankAccount'
      wechat:
        $ref: '#/definitions/details.PaymentMethodDetailsWechat'
      wechat_pay:
        $ref: '#/definitions/details.PaymentMethodDetailsWechatPay'
    type: object
  details.PaymentMethodDetailsAchCreditTransfer:
    properties:
      account_number:
        description: Account number to transfer funds to.
        type: string
      bank_name:
        description: Name of the bank associated with the routing number.
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      routing_number:
        description: Routing transit number for the bank account to transfer funds
          to.
        type: string
      swift_code:
        description: SWIFT code of the bank associated with the routing number.
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsAchDebit:
    properties:
      account_holder_type:
        description: Type of entity that holds the account. This can be either `individual`
          or `company`.
        type: string
      bank_name:
        description: Name of the bank associated with the bank account.
        type: string
      country:
        description: Two-letter ISO code representing the country the bank account
          is located in.
        type: string
      created_at:
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      id:
        type: string
      last4:
        description: Last four digits of the bank account number.
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      routing_number:
        description: Routing transit number of the bank account.
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsAcssDebit:
    properties:
      bank_name:
        description: Name of the bank associated with the bank account.
        type: string
      created_at:
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      id:
        type: string
      institution_number:
        description: Institution number of the bank account
        type: string
      last4:
        description: Last four digits of the bank account number.
        type: string
      livemode:
        type: boolean
      mandate:
        description: ID of the mandate used to make this payment.
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      transit_number:
        description: Transit number of the bank account.
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsAffirm:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsAfterpayClearpay:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      reference:
        description: Order identifier shown to the merchant in Afterpay’s online portal.
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsAlipay:
    properties:
      buyer_id:
        description: Uniquely identifies this particular Alipay account. You can use
          this attribute to check whether two Alipay accounts are the same.
        type: string
      created_at:
        type: string
      fingerprint:
        description: Uniquely identifies this particular Alipay account. You can use
          this attribute to check whether two Alipay accounts are the same.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      transaction_id:
        description: Transaction ID of this particular Alipay transaction.
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsAuBecsDebit:
    properties:
      bsb_number:
        description: Bank-State-Branch number of the bank account.
        type: string
      created_at:
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      id:
        type: string
      last4:
        description: Last four digits of the bank account number.
        type: string
      livemode:
        type: boolean
      mandate:
        description: ID of the mandate used to make this payment.
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsBacsDebit:
    properties:
      created_at:
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      id:
        type: string
      last4:
        description: Last four digits of the bank account number.
        type: string
      livemode:
        type: boolean
      mandate:
        description: ID of the mandate used to make this payment.
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      sort_code:
        description: Sort code of the bank account. (e.g., `10-20-30`)
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsBancontact:
    properties:
      bank_code:
        description: Bank code of bank associated with the bank account.
        type: string
      bank_name:
        description: Name of the bank associated with the bank account.
        type: string
      bic:
        description: Bank Identifier Code of the bank associated with the bank account.
        type: string
      created_at:
        type: string
      iban_last4:
        description: Last four characters of the IBAN.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      preferred_language:
        description: Preferred language of the Bancontact authorization page that
          the customer is redirected to. Can be one of `en`, `de`, `fr`, or `nl`
        type: string
      updated_at:
        type: string
      verified_name:
        description: Owner's verified full name. Values are verified or provided by
          Bancontact directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
        type: string
    type: object
  details.PaymentMethodDetailsBlik:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsBoleto:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      tax_id:
        description: The tax ID of the customer (CPF for individuals consumers or
          CNPJ for businesses consumers)
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsCard:
    properties:
      address_line1_check:
        description: If a address line1 was provided, results of the check, one of
          `pass`, `fail`, `unavailable`, or `unchecked`.
        type: string
      address_postal_code_check:
        description: If a address postal code was provided, results of the check,
          one of `pass`, `fail`, `unavailable`, or `unchecked`.
        type: string
      brand:
        description: Card brand. Can be `amex`, `diners`, `discover`, `jcb`, `mastercard`,
          `unionpay`, `visa`, or `unknown`.
        type: string
      country:
        description: Two-letter ISO code representing the country of the card. You
          could use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: string
      created_at:
        type: string
      cvc_check:
        description: If a CVC was provided, results of the check, one of `pass`, `fail`,
          `unavailable`, or `unchecked`.
        type: string
      exp_month:
        description: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        description: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        description: Uniquely identifies this particular card number. You can use
          this attribute to check whether two customers who’ve signed up with you
          are using the same card number, for example. For payment methods that tokenize
          card information (Apple Pay, Google Pay), the tokenized number might be
          provided instead of the underlying card number.  *Starting May 1, 2021,
          card fingerprint in India for Connect will change to allow two fingerprints
          for the same card --- one for India and one for the rest of the world.*
        type: string
      funding:
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      last4:
        description: The last four digits of the card.
        type: string
      livemode:
        type: boolean
      mandate:
        description: ID of the mandate used to make this payment or created by it.
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      network:
        description: Identifies which network this charge was processed on. Can be
          `amex`, `cartes_bancaires`, `diners`, `discover`, `interac`, `jcb`, `mastercard`,
          `unionpay`, `visa`, or `unknown`.
        type: string
      object:
        type: string
      three_d_secure:
        format: uuid
        type: string
      updated_at:
        type: string
      wallet:
        format: uuid
        type: string
    type: object
  details.PaymentMethodDetailsCardPresent:
    properties:
      amount_authorized:
        description: The authorized amount
        type: integer
      brand:
        description: Card brand. Can be `amex`, `diners`, `discover`, `jcb`, `mastercard`,
          `unionpay`, `visa`, or `unknown`.
        type: string
      capture_before:
        description: When using manual capture, a future timestamp after which the
          charge will be automatically refunded if uncaptured.
        type: integer
      cardholder_name:
        description: The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813)
          format. May include alphanumeric characters, special characters and first/last
          name separator (`/`). In some cases, the cardholder name may not be available
          depending on how the issuer has configured the card. Cardholder name is
          typically not available on swipe or contactless payments, such as those
          made with Apple Pay and Google Pay.
        type: string
      country:
        description: Two-letter ISO code representing the country of the card. You
          could use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: string
      created_at:
        type: string
      emv_auth_data:
        description: Authorization response cryptogram.
        type: string
      exp_month:
        description: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        description: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        description: Uniquely identifies this particular card number. You can use
          this attribute to check whether two customers who’ve signed up with you
          are using the same card number, for example. For payment methods that tokenize
          card information (Apple Pay, Google Pay), the tokenized number might be
          provided instead of the underlying card number.  *Starting May 1, 2021,
          card fingerprint in India for Connect will change to allow two fingerprints
          for the same card --- one for India and one for the rest of the world.*
        type: string
      funding:
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: string
      generated_card:
        description: ID of a card PaymentMethod generated from the card_present PaymentMethod
          that may be attached to a Customer for future transactions. Only present
          if it was possible to generate a card PaymentMethod.
        type: string
      id:
        type: string
      incremental_authorization_supported:
        description: Whether this [PaymentIntent](https://stripe.com/docs/api/payment_intents)
          is eligible for incremental authorizations. Request support using [request_incremental_authorization_support](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-payment_method_options-card_present-request_incremental_authorization_support).
        type: boolean
      last4:
        description: The last four digits of the card.
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      network:
        description: Identifies which network this charge was processed on. Can be
          `amex`, `cartes_bancaires`, `diners`, `discover`, `interac`, `jcb`, `mastercard`,
          `unionpay`, `visa`, or `unknown`.
        type: string
      object:
        type: string
      overcapture_supported:
        description: Defines whether the authorized amount can be over-captured or
          not
        type: boolean
      read_method:
        description: How card details were read in this transaction.
        type: string
      receipt:
        format: uuid
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsCustomerBalance:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsEps:
    properties:
      bank:
        description: The customer's bank. Should be one of `arzte_und_apotheker_bank`,
          `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`, `bankhaus_schelhammer_und_schattera_ag`,
          `bawag_psk_ag`, `bks_bank_ag`, `brull_kallmus_bank_ag`, `btv_vier_lander_bank`,
          `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`, `easybank_ag`,
          `erste_bank_und_sparkassen`, `hypo_alpeadriabank_international_ag`, `hypo_noe_lb_fur_niederosterreich_u_wien`,
          `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`, `hypo_vorarlberg_bank_ag`,
          `hypo_bank_burgenland_aktiengesellschaft`, `marchfelder_bank`, `oberbank_ag`,
          `raiffeisen_bankengruppe_osterreich`, `schoellerbank_ag`, `sparda_bank_wien`,
          `volksbank_gruppe`, `volkskreditbank_ag`, or `vr_bank_braunau`.
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
      verified_name:
        description: Owner's verified full name. Values are verified or provided by
          EPS directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated. EPS rarely provides this information so the
          attribute is usually empty.
        type: string
    type: object
  details.PaymentMethodDetailsFpx:
    properties:
      bank:
        description: The customer's bank. Can be one of `affin_bank`, `agrobank`,
          `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`,
          `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`, `public_bank`,
          `rhb`, `standard_chartered`, `uob`, `deutsche_bank`, `maybank2e`, `pb_enterprise`,
          or `bank_of_china`.
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      transaction_id:
        description: Unique transaction id generated by FPX for every request from
          the merchant
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsGiropay:
    properties:
      bank_code:
        description: Bank code of bank associated with the bank account.
        type: string
      bank_name:
        description: Name of the bank associated with the bank account.
        type: string
      bic:
        description: Bank Identifier Code of the bank associated with the bank account.
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
      verified_name:
        description: Owner's verified full name. Values are verified or provided by
          Giropay directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated. Giropay rarely provides this information
          so the attribute is usually empty.
        type: string
    type: object
  details.PaymentMethodDetailsGrabpay:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      transaction_id:
        description: Unique transaction id generated by GrabPay
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsIdeal:
    properties:
      bank:
        description: The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`,
          `handelsbanken`, `ing`, `knab`, `moneyou`, `rabobank`, `regiobank`, `revolut`,
          `sns_bank`, `triodos_bank`, or `van_lanschot`.
        type: string
      bic:
        description: The Bank Identifier Code of the customer's bank.
        type: string
      created_at:
        type: string
      iban_last4:
        description: Last four characters of the IBAN.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
      verified_name:
        description: Owner's verified full name. Values are verified or provided by
          iDEAL directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
        type: string
    type: object
  details.PaymentMethodDetailsInteracPresent:
    properties:
      brand:
        description: Card brand. Can be `interac`, `mastercard` or `visa`.
        type: string
      cardholder_name:
        description: The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813)
          format. May include alphanumeric characters, special characters and first/last
          name separator (`/`). In some cases, the cardholder name may not be available
          depending on how the issuer has configured the card. Cardholder name is
          typically not available on swipe or contactless payments, such as those
          made with Apple Pay and Google Pay.
        type: string
      country:
        description: Two-letter ISO code representing the country of the card. You
          could use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: string
      created_at:
        type: string
      emv_auth_data:
        description: Authorization response cryptogram.
        type: string
      exp_month:
        description: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        description: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        description: Uniquely identifies this particular card number. You can use
          this attribute to check whether two customers who’ve signed up with you
          are using the same card number, for example. For payment methods that tokenize
          card information (Apple Pay, Google Pay), the tokenized number might be
          provided instead of the underlying card number.  *Starting May 1, 2021,
          card fingerprint in India for Connect will change to allow two fingerprints
          for the same card --- one for India and one for the rest of the world.*
        type: string
      funding:
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: string
      generated_card:
        description: ID of a card PaymentMethod generated from the card_present PaymentMethod
          that may be attached to a Customer for future transactions. Only present
          if it was possible to generate a card PaymentMethod.
        type: string
      id:
        type: string
      last4:
        description: The last four digits of the card.
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      network:
        description: Identifies which network this charge was processed on. Can be
          `amex`, `cartes_bancaires`, `diners`, `discover`, `interac`, `jcb`, `mastercard`,
          `unionpay`, `visa`, or `unknown`.
        type: string
      object:
        type: string
      preferred_locales:
        description: EMV tag 5F2D. Preferred languages specified by the integrated
          circuit chip.
        items:
          type: string
        type: array
      read_method:
        description: How card details were read in this transaction.
        type: string
      receipt:
        format: uuid
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsKlarna:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      payment_method_category:
        description: The Klarna payment method used for this transaction. Can be one
          of `pay_later`, `pay_now`, `pay_with_financing`, or `pay_in_installments`
        type: string
      preferred_locale:
        description: Preferred language of the Klarna authorization page that the
          customer is redirected to. Can be one of `de-AT`, `en-AT`, `nl-BE`, `fr-BE`,
          `en-BE`, `de-DE`, `en-DE`, `da-DK`, `en-DK`, `es-ES`, `en-ES`, `fi-FI`,
          `sv-FI`, `en-FI`, `en-GB`, `en-IE`, `it-IT`, `en-IT`, `nl-NL`, `en-NL`,
          `nb-NO`, `en-NO`, `sv-SE`, `en-SE`, `en-US`, `es-US`, `fr-FR`, `en-FR`,
          `en-AU`, `en-NZ`, `en-CA`, `fr-CA`, `pl-PL`, `en-PL`, `pt-PT`, `en-PT`,
          `de-CH`, `fr-CH`, `it-CH`, or `en-CH`
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsKonbini:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      store_chain:
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsLink:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsMultibanco:
    properties:
      created_at:
        type: string
      entity:
        description: Entity number associated with this Multibanco payment.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      reference:
        description: Reference number associated with this Multibanco payment.
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsOxxo:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      number:
        description: OXXO reference number
        type: string
      object:
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsP24:
    properties:
      bank:
        description: The customer's bank. Can be one of `ing`, `citi_handlowy`, `tmobile_usbugi_bankowe`,
          `plus_bank`, `etransfer_pocztowy24`, `banki_spbdzielcze`, `bank_nowy_bfg_sa`,
          `getin_bank`, `blik`, `noble_pay`, `ideabank`, `envelobank`, `santander_przelew24`,
          `nest_przelew`, `mbank_mtransfer`, `inteligo`, `pbac_z_ipko`, `bnp_paribas`,
          `credit_agricole`, `toyota_bank`, `bank_pekao_sa`, `volkswagen_bank`, `bank_millennium`,
          `alior_bank`, or `boz`.
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      reference:
        description: Unique reference for this Przelewy24 payment.
        type: string
      updated_at:
        type: string
      verified_name:
        description: Owner's verified full name. Values are verified or provided by
          Przelewy24 directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated. Przelewy24 rarely provides this information
          so the attribute is usually empty.
        type: string
    type: object
  details.PaymentMethodDetailsPaynow:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      reference:
        description: Reference number associated with this PayNow payment
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsPix:
    properties:
      bank_transaction_id:
        description: Unique transaction id generated by BCB
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsPromptpay:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      reference:
        description: Bill reference generated by PromptPay
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsSepaDebit:
    properties:
      bank_code:
        description: Bank code of bank associated with the bank account.
        type: string
      branch_code:
        description: Branch code of bank associated with the bank account.
        type: string
      country:
        description: Two-letter ISO code representing the country the bank account
          is located in.
        type: string
      created_at:
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      id:
        type: string
      last4:
        description: Last four characters of the IBAN.
        type: string
      livemode:
        type: boolean
      mandate:
        description: ID of the mandate used to make this payment.
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsSofort:
    properties:
      bank_code:
        description: Bank code of bank associated with the bank account.
        type: string
      bank_name:
        description: Name of the bank associated with the bank account.
        type: string
      bic:
        description: Bank Identifier Code of the bank associated with the bank account.
        type: string
      country:
        description: Two-letter ISO code representing the country the bank account
          is located in.
        type: string
      created_at:
        type: string
      iban_last4:
        description: Last four characters of the IBAN.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      preferred_language:
        description: Preferred language of the SOFORT authorization page that the
          customer is redirected to. Can be one of `de`, `en`, `es`, `fr`, `it`, `nl`,
          or `pl`
        type: string
      updated_at:
        type: string
      verified_name:
        description: Owner's verified full name. Values are verified or provided by
          SOFORT directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
        type: string
    type: object
  details.PaymentMethodDetailsStripeAccount:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsUsBankAccount:
    properties:
      account_holder_type:
        description: 'Account holder type: individual or company.'
        type: string
      account_type:
        description: 'Account type: checkings or savings. Defaults to checking if
          omitted.'
        type: string
      bank_name:
        description: Name of the bank associated with the bank account.
        type: string
      created_at:
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      id:
        type: string
      last4:
        description: Last four digits of the bank account number.
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      routing_number:
        description: Routing number of the bank account.
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsWechat:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  details.PaymentMethodDetailsWechatPay:
    properties:
      created_at:
        type: string
      fingerprint:
        description: Uniquely identifies this particular WeChat Pay account. You can
          use this attribute to check whether two WeChat accounts are the same.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      transaction_id:
        description: Transaction ID of this particular WeChat Pay transaction.
        type: string
      updated_at:
        type: string
    type: object
  discount.Bind.request:
    properties:
      amount:
        type: integer
      checkout_session:
        type: string
      coupon:
        $ref: '#/definitions/uuid.NullUUID'
      created_at:
        type: string
      customer:
        $ref: '#/definitions/uuid.NullUUID'
      end:
        type: integer
      id:
        type: string
      invoice:
        type: string
      invoice_item:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      promotion_code:
        $ref: '#/definitions/uuid.NullUUID'
      start:
        type: integer
      subscription:
        type: string
      updated_at:
        type: string
    type: object
  discount.Discount:
    properties:
      amount:
        type: integer
      checkout_session:
        type: string
      coupon:
        $ref: '#/definitions/coupon.Coupon'
      created_at:
        type: string
      customer:
        $ref: '#/definitions/customer.Customer'
      end:
        type: integer
      id:
        type: string
      invoice:
        type: string
      invoice_item:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      promotion_code:
        $ref: '#/definitions/promotion.PromotionCode'
      start:
        type: integer
      subscription:
        type: string
      updated_at:
        type: string
    type: object
  dispute.Bind.request:
    properties:
      amount:
        description: Disputed amount. Usually the amount of the charge, but can differ
          (usually because of currency fluctuation or because only part of the order
          is disputed).
        type: integer
      balance_transactions:
        description: List of zero, one, or two balance transactions that show funds
          withdrawn and reinstated to your Stripe account as a result of this dispute.
        items:
          format: uuid
          type: string
        type: array
      charge:
        $ref: '#/definitions/uuid.NullUUID'
      created_at:
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      evidence:
        $ref: '#/definitions/dispute.DisputeEvidence'
      evidence_details:
        $ref: '#/definitions/dispute.DisputeEvidenceDetails'
      id:
        type: string
      is_charge_refundable:
        description: If true, it is still possible to refund the disputed payment.
          Once the payment has been fully refunded, no further funds will be withdrawn
          from your Stripe account as a result of this dispute.
        type: boolean
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      payment_intent:
        $ref: '#/definitions/uuid.NullUUID'
      reason:
        allOf:
        - $ref: '#/definitions/dispute.Reason'
        description: Reason given by cardholder for dispute. Possible values are `bank_cannot_process`,
          `check_returned`, `credit_not_processed`, `customer_initiated`, `debit_not_authorized`,
          `duplicate`, `fraudulent`, `general`, `incorrect_account_details`, `insufficient_funds`,
          `product_not_received`, `product_unacceptable`, `subscription_canceled`,
          or `unrecognized`. Read more about [dispute reasons](https://stripe.com/docs/disputes/categories).
      status:
        allOf:
        - $ref: '#/definitions/dispute.Status'
        description: Current status of dispute. Possible values are `warning_needs_response`,
          `warning_under_review`, `warning_closed`, `needs_response`, `under_review`,
          `charge_refunded`, `won`, or `lost`.
      updated_at:
        type: string
    type: object
  dispute.Dispute:
    properties:
      amount:
        description: Disputed amount. Usually the amount of the charge, but can differ
          (usually because of currency fluctuation or because only part of the order
          is disputed).
        type: integer
      balance_transactions:
        description: List of zero, one, or two balance transactions that show funds
          withdrawn and reinstated to your Stripe account as a result of this dispute.
        items:
          format: uuid
          type: string
        type: array
      charge:
        $ref: '#/definitions/charge.Charge'
      created_at:
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      evidence:
        $ref: '#/definitions/dispute.DisputeEvidence'
      evidence_details:
        $ref: '#/definitions/dispute.DisputeEvidenceDetails'
      id:
        type: string
      is_charge_refundable:
        description: If true, it is still possible to refund the disputed payment.
          Once the payment has been fully refunded, no further funds will be withdrawn
          from your Stripe account as a result of this dispute.
        type: boolean
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      payment_intent:
        $ref: '#/definitions/intent.PaymentIntent'
      reason:
        allOf:
        - $ref: '#/definitions/dispute.Reason'
        description: Reason given by cardholder for dispute. Possible values are `bank_cannot_process`,
          `check_returned`, `credit_not_processed`, `customer_initiated`, `debit_not_authorized`,
          `duplicate`, `fraudulent`, `general`, `incorrect_account_details`, `insufficient_funds`,
          `product_not_received`, `product_unacceptable`, `subscription_canceled`,
          or `unrecognized`. Read more about [dispute reasons](https://stripe.com/docs/disputes/categories).
      status:
        allOf:
        - $ref: '#/definitions/dispute.Status'
        description: Current status of dispute. Possible values are `warning_needs_response`,
          `warning_under_review`, `warning_closed`, `needs_response`, `under_review`,
          `charge_refunded`, `won`, or `lost`.
      updated_at:
        type: string
    type: object
  dispute.DisputeEvidence:
    properties:
      access_activity_log:
        description: Any server or activity logs showing proof that the customer accessed
          or downloaded the purchased digital product. This information should include
          IP addresses, corresponding timestamps, and any detailed recorded activity.
        type: string
      billing_address:
        description: The billing address provided by the customer.
        type: string
      cancellation_policy:
        $ref: '#/definitions/file.File'
      cancellation_policy_disclosure:
        description: An explanation of how and when the customer was shown your refund
          policy prior to purchase.
        type: string
      cancellation_rebuttal:
        description: A justification for why the customer's subscription was not canceled.
        type: string
      created_at:
        type: string
      customer_communication:
        $ref: '#/definitions/file.File'
      customer_email_address:
        description: The email address of the customer.
        type: string
      customer_name:
        description: The name of the customer.
        type: string
      customer_purchase_ip:
        description: The IP address that the customer used when making the purchase.
        type: string
      customer_signature:
        $ref: '#/definitions/file.File'
      duplicate_charge_documentation:
        $ref: '#/definitions/file.File'
      duplicate_charge_explanation:
        description: An explanation of the difference between the disputed charge
          versus the prior charge that appears to be a duplicate.
        type: string
      duplicate_charge_id:
        description: The Stripe ID for the prior charge which appears to be a duplicate
          of the disputed charge.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      product_description:
        description: A description of the product or service that was sold.
        type: string
      receipt:
        $ref: '#/definitions/file.File'
      refund_policy:
        $ref: '#/definitions/file.File'
      refund_policy_disclosure:
        description: Documentation demonstrating that the customer was shown your
          refund policy prior to purchase.
        type: string
      refund_refusal_explanation:
        description: A justification for why the customer is not entitled to a refund.
        type: string
      service_date:
        description: The date on which the customer received or began receiving the
          purchased service, in a clear human-readable format.
        type: string
      service_documentation:
        $ref: '#/definitions/file.File'
      shipping_address:
        description: The address to which a physical product was shipped. You should
          try to include as complete address information as possible.
        type: string
      shipping_carrier:
        description: The delivery service that shipped a physical product, such as
          Fedex, UPS, USPS, etc. If multiple carriers were used for this purchase,
          please separate them with commas.
        type: string
      shipping_date:
        description: The date on which a physical product began its route to the shipping
          address, in a clear human-readable format.
        type: string
      shipping_documentation:
        $ref: '#/definitions/file.File'
      shipping_tracking_number:
        description: The tracking number for a physical product, obtained from the
          delivery service. If multiple tracking numbers were generated for this purchase,
          please separate them with commas.
        type: string
      uncategorized_file:
        $ref: '#/definitions/file.File'
      uncategorized_text:
        description: Any additional evidence or statements.
        type: string
      updated_at:
        type: string
    type: object
  dispute.DisputeEvidenceDetails:
    properties:
      created_at:
        type: string
      due_by:
        description: Date by which evidence must be submitted in order to successfully
          challenge dispute. Will be null if the customer's bank or credit card company
          doesn't allow a response for this particular dispute.
        type: integer
      has_evidence:
        description: Whether evidence has been staged for this dispute.
        type: boolean
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      past_due:
        description: Whether the last evidence submission was submitted past the due
          date. Defaults to `false` if no evidence submissions have occurred. If `true`,
          then delivery of the latest evidence is *not* guaranteed.
        type: boolean
      submission_count:
        description: The number of times evidence has been submitted. Typically, you
          may only submit evidence once.
        type: integer
      updated_at:
        type: string
    type: object
  dispute.Reason:
    enum:
    - bank_cannot_process
    - check_returned
    - credit_not_processed
    - customer_initiated
    - debit_not_authorized
    - duplicate
    - fraudulent
    - general
    - incorrect_account_details
    - insufficient_funds
    - product_not_received
    - product_unacceptable
    - subscription_canceled
    - unrecognized
    type: string
    x-enum-varnames:
    - ReasonBankCannotProcess
    - ReasonCheckReturned
    - ReasonCreditNotProcessed
    - ReasonCustomerInitiated
    - ReasonDebitNotAuthorized
    - ReasonDuplicate
    - ReasonFraudulent
    - ReasonGeneral
    - ReasonIncorrectAccountDetails
    - ReasonInsufficientFunds
    - ReasonProductNotReceived
    - ReasonProductUnacceptable
    - ReasonSubscriptionCanceled
    - ReasonUnrecognized
  dispute.Status:
    enum:
    - warning_needs_response
    - warning_under_review
    - warning_closed
    - needs_response
    - under_review
    - charge_refunded
    - won
    - lost
    type: string
    x-enum-varnames:
    - StatusWarningNeedsResponse
    - StatusWarningUnderReview
    - StatusWarningClosed
    - StatusNeedsResponse
    - StatusUnderReview
    - StatusChargeRefunded
    - StatusWon
    - StatusLost
  errors.ApiErrors:
    properties:
      charge:
        description: For card errors, the ID of the failed charge.
        type: string
      code:
        description: For some errors that could be handled programmatically, a short
          string indicating the [error code](https://stripe.com/docs/error-codes)
          reported.
        type: string
      created_at:
        type: string
      decline_code:
        description: For card errors resulting from a card issuer decline, a short
          string indicating the [card issuer's reason for the decline](https://stripe.com/docs/declines#issuer-declines)
          if they provide one.
        type: string
      doc_url:
        description: A URL to more information about the [error code](https://stripe.com/docs/error-codes)
          reported.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      message:
        description: A human-readable message providing more details about the error.
          For card errors, these messages can be shown to your users.
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      param:
        description: If the error is parameter-specific, the parameter related to
          the error. For example, you can use this to display a message near the correct
          form field.
        type: string
      payment_method:
        format: uuid
        type: string
      payment_method_type:
        description: If the error is specific to the type of payment method, the payment
          method type that had a problem. This field is only populated for invoice-related
          errors.
        type: string
      request_log_url:
        description: A URL to the request log entry in your dashboard.
        type: string
      type:
        allOf:
        - $ref: '#/definitions/errors.Type'
        description: The type of error returned. One of `api_error`, `card_error`,
          `idempotency_error`, or `invalid_request_error`
      updated_at:
        type: string
    type: object
  errors.Type:
    enum:
    - api_error
    - card_error
    - idempotency_error
    - invalid_request_error
    type: string
    x-enum-varnames:
    - TypeApiError
    - TypeCardError
    - TypeIdempotencyError
    - TypeInvalidRequestError
  file.File:
    properties:
      created_at:
        type: string
      expires_at:
        description: The time at which the file expires and is no longer available
          in epoch seconds.
        type: integer
      filename:
        description: A filename for the file, suitable for saving to a filesystem.
        type: string
      id:
        type: string
      links:
        $ref: '#/definitions/file.FileLink'
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      purpose:
        allOf:
        - $ref: '#/definitions/file.Purpose'
        description: The [purpose](https://stripe.com/docs/file-upload#uploading-a-file)
          of the uploaded file.
      size:
        description: The size in bytes of the file object.
        type: integer
      title:
        description: A user friendly title for the document.
        type: string
      type:
        description: The type of the file returned (e.g., `csv`, `pdf`, `jpg`, or
          `png`).
        type: string
      updated_at:
        type: string
      url:
        description: The URL from which the file can be downloaded using your live
          secret API key.
        type: string
    type: object
  file.FileLink:
    properties:
      created_at:
        type: string
      expired:
        description: Whether this link is already expired.
        type: boolean
      expires_at:
        description: Time at which the link expires.
        type: integer
      file:
        $ref: '#/definitions/file.File'
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
      url:
        description: The publicly accessible URL to download the file.
        type: string
    type: object
  file.Purpose:
    enum:
    - account_requirement
    - additional_verification
    - business_icon
    - business_logo
    - customer_signature
    - dispute_evidence
    - document_provider_identity_document
    - finance_report_run
    - identity_document
    - identity_document_downloadable
    - pci_document
    - selfie
    - sigma_scheduled_query
    - tax_document_user_upload
    - terminal_reader_splashscreen
    type: string
    x-enum-varnames:
    - PurposeAccountRequirement
    - PurposeAdditionalVerification
    - PurposeBusinessIcon
    - PurposeBusinesslogo
    - PurposeCustomerSignature
    - PurposeDisputeEvidence
    - PurposeDocumentProviderIdentityDocument
    - PurposeFinanceReportRun
    - PurposeIdentityDocument
    - PurposeIdentityDocumentDownloadable
    - PurposePciDocument
    - PurposeSelfie
    - PurposeSigmaScheduledQuery
    - PurposeTaxDocumentUserUpload
    - PurposeTerminalReaderSplashscreen
  github_com_driver005_gateway_payment_card.Card:
    properties:
      account:
        $ref: '#/definitions/account.Account'
      address_city:
        type: string
      address_country:
        type: string
      address_line1:
        type: string
      address_line1_check:
        $ref: '#/definitions/card.AddressLine1Check'
      address_line2:
        type: string
      address_state:
        type: string
      address_zip:
        type: string
      address_zip_check:
        $ref: '#/definitions/card.AddressZipCheck'
      available_payout_methods:
        items:
          type: string
        type: array
      brand:
        $ref: '#/definitions/card.Brand'
      country:
        type: string
      created_at:
        type: string
      currency:
        type: string
      customer:
        $ref: '#/definitions/customer.Customer'
      cvc_check:
        $ref: '#/definitions/card.CvcCheck'
      default_for_currency:
        type: boolean
      dynamic_last4:
        type: string
      exp_month:
        type: integer
      exp_year:
        type: integer
      fingerprint:
        type: string
      funding:
        $ref: '#/definitions/card.Funding'
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      name:
        type: string
      object:
        type: string
      status:
        type: string
      tokenization_method:
        $ref: '#/definitions/card.TokenizationMethod'
      updated_at:
        type: string
    type: object
  intent.Bind.request:
    properties:
      amount:
        type: integer
      amount_capturable:
        type: integer
      amount_details:
        $ref: '#/definitions/paymentFlow.PaymentFlowsAmountDetails'
      amount_received:
        type: integer
      automatic_payment_methods:
        type: boolean
      canceled_at:
        type: integer
      cancellation_reason:
        $ref: '#/definitions/intent.CancellationReason'
      capture_method:
        $ref: '#/definitions/intent.CaptureMethod'
      client_secret:
        type: string
      confirm:
        type: boolean
      confirmation_method:
        $ref: '#/definitions/intent.ConfirmationMethod'
      created_at:
        type: string
      currency:
        type: string
      customer:
        $ref: '#/definitions/uuid.NullUUID'
      description:
        type: string
      id:
        type: string
      last_payment_error:
        $ref: '#/definitions/errors.ApiErrors'
      latest_charge:
        $ref: '#/definitions/charge.Charge'
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      next_action:
        $ref: '#/definitions/next.PaymentIntentNextAction'
      object:
        type: string
      off_session:
        type: boolean
      payment_method:
        $ref: '#/definitions/uuid.NullUUID'
      payment_method_options:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptions'
      payment_method_types:
        items:
          type: string
        type: array
      processing:
        $ref: '#/definitions/intent.PaymentIntentProcessing'
      receipt_email:
        type: string
      return_url:
        type: string
      review:
        $ref: '#/definitions/review.Review'
      setup_future_usage:
        $ref: '#/definitions/intent.SetupFutureUsage'
      shipping:
        $ref: '#/definitions/address.Shipping'
      statement_descriptor:
        type: string
      statement_descriptor_suffix:
        type: string
      status:
        $ref: '#/definitions/intent.Status'
      updated_at:
        type: string
    type: object
  intent.CancellationReason:
    enum:
    - duplicate
    - fraudulent
    - requested_by_customer
    - abandoned
    - failed_invoice
    - void_invoice
    - automatic
    type: string
    x-enum-varnames:
    - CancellationReasonDuplicate
    - CancellationReasonFraudulent
    - CancellationReasonRequestedByCustomer
    - CancellationReasonAbandoned
    - CancellationReasonFailedInvoice
    - CancellationReasonVoidInvoice
    - CancellationReasonAutomatic
  intent.CaptureMethod:
    enum:
    - automatic
    - manual
    type: string
    x-enum-varnames:
    - CaptureMethodAutomatic
    - CaptureMethodManual
  intent.ConfirmationMethod:
    enum:
    - automatic
    - manual
    type: string
    x-enum-varnames:
    - ConfirmationMethodAutomatic
    - ConfirmationMethodManual
  intent.PaymentIntent:
    properties:
      amount:
        type: integer
      amount_capturable:
        type: integer
      amount_details:
        $ref: '#/definitions/paymentFlow.PaymentFlowsAmountDetails'
      amount_received:
        type: integer
      automatic_payment_methods:
        type: boolean
      canceled_at:
        type: integer
      cancellation_reason:
        $ref: '#/definitions/intent.CancellationReason'
      capture_method:
        $ref: '#/definitions/intent.CaptureMethod'
      client_secret:
        type: string
      confirmation_method:
        $ref: '#/definitions/intent.ConfirmationMethod'
      created_at:
        type: string
      currency:
        type: string
      customer:
        $ref: '#/definitions/customer.Customer'
      description:
        type: string
      id:
        type: string
      last_payment_error:
        $ref: '#/definitions/errors.ApiErrors'
      latest_charge:
        $ref: '#/definitions/charge.Charge'
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      next_action:
        $ref: '#/definitions/next.PaymentIntentNextAction'
      object:
        type: string
      payment_method:
        $ref: '#/definitions/method.PaymentMethod'
      payment_method_options:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptions'
      payment_method_types:
        items:
          type: string
        type: array
      processing:
        $ref: '#/definitions/intent.PaymentIntentProcessing'
      receipt_email:
        type: string
      review:
        $ref: '#/definitions/review.Review'
      setup_future_usage:
        $ref: '#/definitions/intent.SetupFutureUsage'
      shipping:
        $ref: '#/definitions/address.Shipping'
      statement_descriptor:
        type: string
      statement_descriptor_suffix:
        type: string
      status:
        $ref: '#/definitions/intent.Status'
      updated_at:
        type: string
    type: object
  intent.PaymentIntentCardProcessing:
    properties:
      created_at:
        type: string
      customer_notification:
        $ref: '#/definitions/intent.PaymentIntentProcessingCustomerNotification'
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  intent.PaymentIntentProcessing:
    properties:
      card:
        $ref: '#/definitions/intent.PaymentIntentCardProcessing'
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      type:
        description: Type of the payment method for which payment is in `processing`
          state, one of `card`.
        type: string
      updated_at:
        type: string
    type: object
  intent.PaymentIntentProcessingCustomerNotification:
    properties:
      approval_requested:
        description: Whether customer approval has been requested for this payment.
          For payments greater than INR 15000 or mandate amount, the customer must
          provide explicit approval of the payment with their bank.
        type: boolean
      completes_at:
        description: If customer approval is required, they need to provide approval
          before this time.
        type: integer
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  intent.SetupFutureUsage:
    enum:
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - SetupFutureUsageOffSession
    - SetupFutureUsageOnSession
  intent.Status:
    enum:
    - requires_payment_method
    - requires_confirmation
    - requires_action
    - processing
    - requires_capture
    - canceled
    - succeeded
    type: string
    x-enum-varnames:
    - StatusRequiresPaymentMethod
    - StatusRequiresConfirmation
    - StatusRequiresAction
    - StatusProcessing
    - StatusRequiresCapture
    - StatusCanceled
    - StatusSucceeded
  invoice.BillingReason:
    enum:
    - subscription_cycle
    - subscription_create
    - subscription_update
    - subscription_threshold
    - subscription
    - manual
    - upcoming
    type: string
    x-enum-varnames:
    - BillingReasonSubscriptionCycle
    - BillingReasonSubscriptionCreate
    - BillingReasonSubscriptionUpdate
    - BillingReasonSubscriptionThreshold
    - BillingReasonSubscription
    - BillingReasonManual
    - BillingReasonUpcoming
  invoice.Bind.request:
    properties:
      account_country:
        type: string
      account_name:
        type: string
      account_tax_ids:
        $ref: '#/definitions/tax.TaxId'
      amount_due:
        type: integer
      amount_paid:
        type: integer
      amount_remaining:
        type: integer
      attempt_count:
        type: integer
      attempted:
        type: boolean
      auto_advance:
        type: boolean
      automatic_tax:
        $ref: '#/definitions/tax.AutomaticTax'
      billing_reason:
        $ref: '#/definitions/invoice.BillingReason'
      charge:
        $ref: '#/definitions/uuid.NullUUID'
      collection_method:
        $ref: '#/definitions/invoice.CollectionMethod'
      created_at:
        type: string
      currency:
        type: string
      custom_fields:
        items:
          format: uuid
          type: string
        type: array
      customer:
        $ref: '#/definitions/uuid.NullUUID'
      customer_address:
        $ref: '#/definitions/address.Address'
      customer_email:
        type: string
      customer_name:
        type: string
      customer_phone:
        type: string
      customer_shipping:
        $ref: '#/definitions/address.Shipping'
      customer_tax_exempt:
        $ref: '#/definitions/customer.TaxExempt'
      customer_tax_ids:
        items:
          format: uuid
          type: string
        type: array
      default_payment_method:
        $ref: '#/definitions/uuid.NullUUID'
      default_tax_rates:
        $ref: '#/definitions/tax.TaxRate'
      description:
        type: string
      discountable:
        type: boolean
      discounts:
        items:
          format: uuid
          type: string
        type: array
      due_date:
        type: string
      ending_balance:
        type: integer
      footer:
        type: string
      from_invoice:
        $ref: '#/definitions/invoice.Invoice'
      hosted_invoice_url:
        type: string
      id:
        type: string
      invoice_pdf:
        type: string
      last_finalization_error:
        $ref: '#/definitions/errors.ApiErrors'
      latest_revision:
        $ref: '#/definitions/uuid.NullUUID'
      lines:
        items:
          format: uuid
          type: string
        type: array
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      next_payment_attempt:
        type: integer
      number:
        type: string
      object:
        type: string
      paid:
        type: boolean
      paid_out_of_band:
        type: boolean
      payment_intent:
        $ref: '#/definitions/uuid.NullUUID'
      payment_settings:
        $ref: '#/definitions/invoices.InvoicesPaymentSettings'
      period_end:
        type: string
      period_start:
        type: string
      post_payment_credit_notes_amount:
        type: integer
      pre_payment_credit_notes_amount:
        type: integer
      price:
        $ref: '#/definitions/uuid.NullUUID'
      quantity:
        type: integer
      receipt_number:
        type: string
      rendering_options:
        $ref: '#/definitions/settings.InvoiceSettingRenderingOptions'
      starting_balance:
        type: integer
      statement_descriptor:
        type: string
      status:
        $ref: '#/definitions/invoice.Status'
      status_transitions:
        $ref: '#/definitions/invoices.InvoicesStatusTransitions'
      subscription:
        $ref: '#/definitions/uuid.NullUUID'
      subscription_proration_date:
        type: integer
      subtotal:
        type: integer
      subtotal_excluding_tax:
        type: integer
      tax:
        type: integer
      threshold_reason:
        $ref: '#/definitions/invoice.InvoiceThresholdReason'
      total:
        type: integer
      total_excluding_tax:
        type: integer
      total_tax_amounts:
        items:
          format: uuid
          type: string
        type: array
      updated_at:
        type: string
      webhooks_delivered_at:
        type: integer
    type: object
  invoice.CollectionMethod:
    enum:
    - charge_automatically
    - send_invoice
    type: string
    x-enum-varnames:
    - CollectionMethodChargeAutomatically
    - CollectionMethodSendInvoiced
  invoice.Invoice:
    properties:
      account_country:
        type: string
      account_name:
        type: string
      account_tax_ids:
        $ref: '#/definitions/tax.TaxId'
      amount_due:
        type: integer
      amount_paid:
        type: integer
      amount_remaining:
        type: integer
      attempt_count:
        type: integer
      attempted:
        type: boolean
      auto_advance:
        type: boolean
      automatic_tax:
        $ref: '#/definitions/tax.AutomaticTax'
      billing_reason:
        $ref: '#/definitions/invoice.BillingReason'
      charge:
        $ref: '#/definitions/charge.Charge'
      collection_method:
        $ref: '#/definitions/invoice.CollectionMethod'
      created_at:
        type: string
      currency:
        type: string
      custom_fields:
        items:
          format: uuid
          type: string
        type: array
      customer:
        $ref: '#/definitions/customer.Customer'
      customer_address:
        $ref: '#/definitions/address.Address'
      customer_email:
        type: string
      customer_name:
        type: string
      customer_phone:
        type: string
      customer_shipping:
        $ref: '#/definitions/address.Shipping'
      customer_tax_exempt:
        $ref: '#/definitions/customer.TaxExempt'
      customer_tax_ids:
        items:
          format: uuid
          type: string
        type: array
      default_payment_method:
        $ref: '#/definitions/method.PaymentMethod'
      default_tax_rates:
        $ref: '#/definitions/tax.TaxRate'
      description:
        type: string
      discountable:
        type: boolean
      discounts:
        items:
          format: uuid
          type: string
        type: array
      due_date:
        type: string
      ending_balance:
        type: integer
      footer:
        type: string
      from_invoice:
        $ref: '#/definitions/invoice.Invoice'
      hosted_invoice_url:
        type: string
      id:
        type: string
      invoice_pdf:
        type: string
      last_finalization_error:
        $ref: '#/definitions/errors.ApiErrors'
      latest_revision:
        $ref: '#/definitions/invoice.Invoice'
      lines:
        items:
          format: uuid
          type: string
        type: array
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      next_payment_attempt:
        type: integer
      number:
        type: string
      object:
        type: string
      paid:
        type: boolean
      paid_out_of_band:
        type: boolean
      payment_intent:
        $ref: '#/definitions/intent.PaymentIntent'
      payment_settings:
        $ref: '#/definitions/invoices.InvoicesPaymentSettings'
      period_end:
        type: string
      period_start:
        type: string
      post_payment_credit_notes_amount:
        type: integer
      pre_payment_credit_notes_amount:
        type: integer
      price:
        $ref: '#/definitions/price.Price'
      quantity:
        type: integer
      receipt_number:
        type: string
      rendering_options:
        $ref: '#/definitions/settings.InvoiceSettingRenderingOptions'
      starting_balance:
        type: integer
      statement_descriptor:
        type: string
      status:
        $ref: '#/definitions/invoice.Status'
      status_transitions:
        $ref: '#/definitions/invoices.InvoicesStatusTransitions'
      subscription:
        $ref: '#/definitions/subscription.Subscription'
      subscription_proration_date:
        type: integer
      subtotal:
        type: integer
      subtotal_excluding_tax:
        type: integer
      tax:
        type: integer
      threshold_reason:
        $ref: '#/definitions/invoice.InvoiceThresholdReason'
      total:
        type: integer
      total_excluding_tax:
        type: integer
      total_tax_amounts:
        items:
          format: uuid
          type: string
        type: array
      updated_at:
        type: string
      webhooks_delivered_at:
        type: integer
    type: object
  invoice.InvoiceThresholdReason:
    properties:
      amount_gte:
        description: The total invoice amount threshold boundary if it triggered the
          threshold invoice.
        type: integer
      created_at:
        type: string
      id:
        type: string
      line_item_ids:
        description: The IDs of the line items that triggered the threshold invoice.
        items:
          type: string
        type: array
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
      usage_gte:
        description: The quantity threshold boundary that applied to the given line
          item.
        type: integer
    type: object
  invoice.Status:
    enum:
    - draft
    - open
    - paid
    - uncollectible
    - void
    type: string
    x-enum-varnames:
    - StatusDraft
    - StatusOpen
    - StatusPaid
    - StatusUncollectible
    - StatusVoid
  invoiceItem.Bind.request:
    properties:
      amount:
        description: Amount (in the `currency` specified) of the invoice item. This
          should always be equal to `unit_amount * quantity`.
        type: integer
      created_at:
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        $ref: '#/definitions/uuid.NullUUID'
      date:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      discountable:
        description: If true, discounts will apply to this invoice item. Always false
          for prorations.
        type: boolean
      discounts:
        description: The discounts which apply to the invoice item. Item discounts
          are applied before invoice discounts. Use `expand[]=discounts` to expand
          each discount.
        items:
          format: uuid
          type: string
        type: array
      id:
        type: string
      invoice:
        $ref: '#/definitions/uuid.NullUUID'
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      period_end:
        description: Unique identifier for the object.
        type: integer
      period_start:
        type: integer
      price:
        $ref: '#/definitions/uuid.NullUUID'
      proration:
        description: Whether the invoice item was created automatically as a proration
          adjustment when the customer switched plans.
        type: boolean
      quantity:
        description: Quantity of units for the invoice item. If the invoice item is
          a proration, the quantity of the subscription that the proration was computed
          for.
        type: integer
      subscription:
        $ref: '#/definitions/uuid.NullUUID'
      subscription_item:
        $ref: '#/definitions/uuid.NullUUID'
      tax_rates:
        allOf:
        - $ref: '#/definitions/tax.TaxRate'
        description: The tax rates which apply to the invoice item. When set, the
          `default_tax_rates` on the invoice do not apply to this invoice item.
      unit_amount:
        description: Unit amount (in the `currency` specified) of the invoice item.
        type: integer
      unit_amount_decimal:
        description: Same as `unit_amount`, but contains a decimal value with at most
          12 decimal places.
        type: number
      updated_at:
        type: string
    type: object
  invoiceItem.Invoiceitem:
    properties:
      amount:
        description: Amount (in the `currency` specified) of the invoice item. This
          should always be equal to `unit_amount * quantity`.
        type: integer
      created_at:
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        $ref: '#/definitions/customer.Customer'
      date:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      discountable:
        description: If true, discounts will apply to this invoice item. Always false
          for prorations.
        type: boolean
      discounts:
        description: The discounts which apply to the invoice item. Item discounts
          are applied before invoice discounts. Use `expand[]=discounts` to expand
          each discount.
        items:
          format: uuid
          type: string
        type: array
      id:
        type: string
      invoice:
        $ref: '#/definitions/invoice.Invoice'
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      period_end:
        description: Unique identifier for the object.
        type: integer
      period_start:
        type: integer
      price:
        $ref: '#/definitions/price.Price'
      proration:
        description: Whether the invoice item was created automatically as a proration
          adjustment when the customer switched plans.
        type: boolean
      quantity:
        description: Quantity of units for the invoice item. If the invoice item is
          a proration, the quantity of the subscription that the proration was computed
          for.
        type: integer
      subscription:
        $ref: '#/definitions/subscription.Subscription'
      subscription_item:
        $ref: '#/definitions/subscriptionItem.SubscriptionItem'
      tax_rates:
        allOf:
        - $ref: '#/definitions/tax.TaxRate'
        description: The tax rates which apply to the invoice item. When set, the
          `default_tax_rates` on the invoice do not apply to this invoice item.
      unit_amount:
        description: Unit amount (in the `currency` specified) of the invoice item.
        type: integer
      unit_amount_decimal:
        description: Same as `unit_amount`, but contains a decimal value with at most
          12 decimal places.
        type: number
      updated_at:
        type: string
    type: object
  invoices.InvoicesLineItemsCreditedItems:
    properties:
      created_at:
        type: string
      id:
        type: string
      invoice:
        description: Invoice containing the credited invoice line items
        type: string
      invoice_line_items:
        description: Credited invoice line items
        items:
          type: string
        type: array
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  invoices.InvoicesPaymentSettings:
    properties:
      created_at:
        type: string
      default_mandate:
        description: ID of the mandate to be used for this invoice. It must correspond
          to the payment method used to pay the invoice, including the invoice's default_payment_method
          or default_source, if set.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      payment_method_options:
        format: uuid
        type: string
      payment_method_types:
        description: The list of payment method types (e.g. card) to provide to the
          invoice’s PaymentIntent. If not set, Stripe attempts to automatically determine
          the types to use by looking at the invoice’s default payment method, the
          subscription’s default payment method, the customer’s default payment method,
          and your [invoice template settings](https://dashboard.stripe.com/settings/billing/invoice).
        items:
          type: string
        type: array
      updated_at:
        type: string
    type: object
  invoices.InvoicesStatusTransitions:
    properties:
      created_at:
        type: string
      finalized_at:
        description: The time that the invoice draft was finalized.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      marked_uncollectible_at:
        description: The time that the invoice was marked uncollectible.
        type: integer
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      paid_at:
        description: The time that the invoice was paid.
        type: integer
      updated_at:
        type: string
      voided_at:
        description: The time that the invoice was voided.
        type: integer
    type: object
  item.Bind.request:
    properties:
      amount:
        type: integer
      amount_excluding_tax:
        type: integer
      created_at:
        type: string
      currency:
        type: string
      description:
        type: string
      discountable:
        type: boolean
      discounts:
        items:
          format: uuid
          type: string
        type: array
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      period_end:
        type: string
      period_start:
        type: string
      price:
        $ref: '#/definitions/uuid.NullUUID'
      product:
        $ref: '#/definitions/uuid.NullUUID'
      proration:
        type: boolean
      proration_details:
        $ref: '#/definitions/invoices.InvoicesLineItemsCreditedItems'
      quantity:
        type: integer
      subscription:
        type: string
      subscription_item:
        type: string
      tax_rates:
        items:
          format: uuid
          type: string
        type: array
      type:
        type: string
      unit_amount_excluding_tax:
        type: number
      updated_at:
        type: string
    type: object
  item.LineItem:
    properties:
      amount:
        type: integer
      amount_excluding_tax:
        type: integer
      created_at:
        type: string
      currency:
        type: string
      description:
        type: string
      discountable:
        type: boolean
      discounts:
        items:
          format: uuid
          type: string
        type: array
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      period_end:
        type: string
      period_start:
        type: string
      price:
        $ref: '#/definitions/price.Price'
      product:
        $ref: '#/definitions/product.Product'
      proration:
        type: boolean
      proration_details:
        $ref: '#/definitions/invoices.InvoicesLineItemsCreditedItems'
      quantity:
        type: integer
      subscription:
        type: string
      subscription_item:
        type: string
      tax_rates:
        items:
          format: uuid
          type: string
        type: array
      type:
        type: string
      unit_amount_excluding_tax:
        type: number
      updated_at:
        type: string
    type: object
  link.PaymentLink:
    properties:
      active:
        type: boolean
      after_completion:
        $ref: '#/definitions/options.PaymentLinksResourceAfterCompletion'
      allow_promotion_codes:
        type: boolean
      application_fee_amount:
        type: integer
      application_fee_percent:
        type: number
      automatic_tax:
        type: boolean
      billing_address_collection:
        type: string
      consent_collection:
        $ref: '#/definitions/options.PaymentLinksResourceConsentCollection'
      created_at:
        type: string
      currency:
        type: string
      custom_text:
        $ref: '#/definitions/options.PaymentLinksResourceCustomText'
      customer_creation:
        type: string
      id:
        type: string
      line_items:
        items:
          format: uuid
          type: string
        type: array
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      payment_intent_data:
        $ref: '#/definitions/options.PaymentLinksResourcePaymentIntentData'
      payment_method_collection:
        type: string
      payment_method_types:
        items:
          type: string
        type: array
      phone_number_collection:
        type: boolean
      shipping_address_collection:
        $ref: '#/definitions/options.PaymentLinksResourceShippingAddressCollection'
      shipping_options:
        items:
          format: uuid
          type: string
        type: array
      submit_type:
        type: string
      subscription_data:
        $ref: '#/definitions/options.PaymentLinksResourceSubscriptionData'
      tax_id_collection:
        type: boolean
      updated_at:
        type: string
      url:
        type: string
    type: object
  mandate.Bind.request:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      payment_method:
        $ref: '#/definitions/uuid.NullUUID'
      payment_method_details:
        $ref: '#/definitions/methods.MandatePaymentMethodDetails'
      single_use:
        $ref: '#/definitions/methods.MandateSingleUse'
      status:
        $ref: '#/definitions/mandate.Status'
      type:
        $ref: '#/definitions/mandate.Type'
      updated_at:
        type: string
    type: object
  mandate.Mandate:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      payment_method:
        $ref: '#/definitions/method.PaymentMethod'
      payment_method_details:
        $ref: '#/definitions/methods.MandatePaymentMethodDetails'
      single_use:
        $ref: '#/definitions/methods.MandateSingleUse'
      status:
        $ref: '#/definitions/mandate.Status'
      type:
        $ref: '#/definitions/mandate.Type'
      updated_at:
        type: string
    type: object
  mandate.Status:
    enum:
    - active
    - inactive
    - pending
    type: string
    x-enum-varnames:
    - StatusActive
    - StatusInactive
    - StatusPending
  mandate.Type:
    enum:
    - multi_use
    - single_use
    type: string
    x-enum-varnames:
    - TypeMultiUse
    - TypeSingleUse
  method.Bind.request:
    properties:
      account_holder_type:
        type: string
      account_number:
        type: string
      account_type:
        type: string
      acss_debit:
        $ref: '#/definitions/methods.PaymentMethodAcssDebit'
      affirm:
        $ref: '#/definitions/methods.PaymentMethodAffirm'
      afterpay_clearpay:
        $ref: '#/definitions/methods.PaymentMethodAfterpayClearpay'
      alipay:
        $ref: '#/definitions/methods.PaymentMethodAlipay'
      au_becs_debit:
        $ref: '#/definitions/methods.PaymentMethodAuBecsDebit'
      bacs_debit:
        $ref: '#/definitions/methods.PaymentMethodBacsDebit'
      bancontact:
        $ref: '#/definitions/methods.PaymentMethodBancontact'
      bank:
        type: string
      billing_details:
        $ref: '#/definitions/address.BillingDetails'
      blik:
        $ref: '#/definitions/methods.PaymentMethodBlik'
      boleto:
        $ref: '#/definitions/methods.PaymentMethodBoleto'
      bsb_number:
        type: string
      btc_pay:
        $ref: '#/definitions/methods.PaymentMethodBtcPay'
      card:
        $ref: '#/definitions/methods.PaymentMethodCard'
      card_present:
        $ref: '#/definitions/methods.PaymentMethodCardPresent'
      country:
        type: string
      created_at:
        type: string
      customer:
        $ref: '#/definitions/uuid.NullUUID'
      customer_balance:
        $ref: '#/definitions/methods.PaymentMethodCustomerBalance'
      cvc:
        type: string
      day:
        type: integer
      eps:
        $ref: '#/definitions/methods.PaymentMethodEps'
      exp_month:
        type: integer
      exp_year:
        type: integer
      financial_connections_account:
        type: string
      fpx:
        $ref: '#/definitions/methods.PaymentMethodFpx'
      giropay:
        $ref: '#/definitions/methods.PaymentMethodGiropay'
      grabpay:
        $ref: '#/definitions/methods.PaymentMethodGrabpay'
      iban:
        type: string
      id:
        type: string
      ideal:
        $ref: '#/definitions/methods.PaymentMethodIdeal'
      institution_number:
        type: string
      interac_present:
        $ref: '#/definitions/methods.PaymentMethodInteracPresent'
      klarna:
        $ref: '#/definitions/methods.PaymentMethodKlarna'
      konbini:
        $ref: '#/definitions/methods.PaymentMethodKonbini'
      link:
        $ref: '#/definitions/methods.PaymentMethodLink'
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      month:
        type: integer
      number:
        type: string
      object:
        type: string
      oxxo:
        $ref: '#/definitions/methods.PaymentMethodOxxo'
      p24:
        $ref: '#/definitions/methods.PaymentMethodP24'
      paynow:
        $ref: '#/definitions/methods.PaymentMethodPaynow'
      pix:
        $ref: '#/definitions/methods.PaymentMethodPix'
      promptpay:
        $ref: '#/definitions/methods.PaymentMethodPromptpay'
      radar_options:
        $ref: '#/definitions/radar.RadarOptions'
      routing_number:
        type: string
      sepa_debit:
        $ref: '#/definitions/methods.PaymentMethodSepaDebit'
      sofort:
        $ref: '#/definitions/methods.PaymentMethodSofort'
      sort_code:
        type: string
      tax_id:
        type: string
      transit_number:
        type: string
      type:
        $ref: '#/definitions/method.Type'
      updated_at:
        type: string
      us_bank_account:
        $ref: '#/definitions/methods.PaymentMethodUsBankAccount'
      wechat_pay:
        $ref: '#/definitions/methods.PaymentMethodWechatPay'
      year:
        type: integer
    type: object
  method.PaymentMethod:
    properties:
      acss_debit:
        $ref: '#/definitions/methods.PaymentMethodAcssDebit'
      affirm:
        $ref: '#/definitions/methods.PaymentMethodAffirm'
      afterpay_clearpay:
        $ref: '#/definitions/methods.PaymentMethodAfterpayClearpay'
      alipay:
        $ref: '#/definitions/methods.PaymentMethodAlipay'
      au_becs_debit:
        $ref: '#/definitions/methods.PaymentMethodAuBecsDebit'
      bacs_debit:
        $ref: '#/definitions/methods.PaymentMethodBacsDebit'
      bancontact:
        $ref: '#/definitions/methods.PaymentMethodBancontact'
      billing_details:
        $ref: '#/definitions/address.BillingDetails'
      blik:
        $ref: '#/definitions/methods.PaymentMethodBlik'
      boleto:
        $ref: '#/definitions/methods.PaymentMethodBoleto'
      btc_pay:
        $ref: '#/definitions/methods.PaymentMethodBtcPay'
      card:
        $ref: '#/definitions/methods.PaymentMethodCard'
      card_present:
        $ref: '#/definitions/methods.PaymentMethodCardPresent'
      created_at:
        type: string
      customer:
        $ref: '#/definitions/customer.Customer'
      customer_balance:
        $ref: '#/definitions/methods.PaymentMethodCustomerBalance'
      eps:
        $ref: '#/definitions/methods.PaymentMethodEps'
      fpx:
        $ref: '#/definitions/methods.PaymentMethodFpx'
      giropay:
        $ref: '#/definitions/methods.PaymentMethodGiropay'
      grabpay:
        $ref: '#/definitions/methods.PaymentMethodGrabpay'
      id:
        type: string
      ideal:
        $ref: '#/definitions/methods.PaymentMethodIdeal'
      interac_present:
        $ref: '#/definitions/methods.PaymentMethodInteracPresent'
      klarna:
        $ref: '#/definitions/methods.PaymentMethodKlarna'
      konbini:
        $ref: '#/definitions/methods.PaymentMethodKonbini'
      link:
        $ref: '#/definitions/methods.PaymentMethodLink'
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      oxxo:
        $ref: '#/definitions/methods.PaymentMethodOxxo'
      p24:
        $ref: '#/definitions/methods.PaymentMethodP24'
      paynow:
        $ref: '#/definitions/methods.PaymentMethodPaynow'
      pix:
        $ref: '#/definitions/methods.PaymentMethodPix'
      promptpay:
        $ref: '#/definitions/methods.PaymentMethodPromptpay'
      radar_options:
        $ref: '#/definitions/radar.RadarOptions'
      sepa_debit:
        $ref: '#/definitions/methods.PaymentMethodSepaDebit'
      sofort:
        $ref: '#/definitions/methods.PaymentMethodSofort'
      type:
        $ref: '#/definitions/method.Type'
      updated_at:
        type: string
      us_bank_account:
        $ref: '#/definitions/methods.PaymentMethodUsBankAccount'
      wechat_pay:
        $ref: '#/definitions/methods.PaymentMethodWechatPay'
    type: object
  method.Type:
    enum:
    - acss_debit
    - affirm
    - afterpay_clearpay
    - alipay
    - au_becs_debit
    - bacs_debit
    - bancontact
    - blik
    - boleto
    - btcpay
    - card
    - card_present
    - customer_balance
    - eps
    - fpx
    - giropay
    - grabpay
    - ideal
    - interac_present
    - klarna
    - konbini
    - link
    - oxxo
    - p24
    - paynow
    - pix
    - promptpay
    - sepa_debit
    - sofort
    - us_bank_account
    - wechat_pay
    type: string
    x-enum-varnames:
    - TypeAcssDebit
    - TypeAffirm
    - TypeAfterpayClearpay
    - TypeAlipay
    - TypeAuBecsDebit
    - TypeBacsDebit
    - TypeBancontact
    - TypeBlik
    - TypeBoleto
    - TypeBtcpay
    - TypeCard
    - TypeCardPresent
    - TypeCustomerBalance
    - TypeEps
    - TypeFpx
    - TypeGiropay
    - TypeGrabpay
    - TypeIdeal
    - TypeInteracPresent
    - TypeKlarna
    - TypeKonbini
    - TypeLink
    - TypeOxxo
    - TypeP24
    - TypePaynow
    - TypePix
    - TypePromptpay
    - TypeSepaDebit
    - TypeSofort
    - TypeUsBankAccount
    - TypeWechatPay
  methods.MandateAcssDebit:
    properties:
      created_at:
        type: string
      default_for:
        description: List of Stripe products where this mandate can be selected automatically.
        items:
          type: string
        type: array
      id:
        type: string
      interval_description:
        description: Description of the interval. Only required if the 'payment_schedule'
          parameter is 'interval' or 'combined'.
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      payment_schedule:
        description: Payment schedule for the mandate.
        type: string
      transaction_type:
        description: Transaction type of the mandate.
        type: string
      updated_at:
        type: string
    type: object
  methods.MandateAuBecsDebit:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
      url:
        description: The URL of the mandate. This URL generally contains sensitive
          information about the customer and should be shared with them exclusively.
        type: string
    type: object
  methods.MandateBacsDebit:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      network_status:
        description: The status of the mandate on the Bacs network. Can be one of
          `pending`, `revoked`, `refused`, or `accepted`.
        type: string
      object:
        type: string
      reference:
        description: The unique reference identifying the mandate on the Bacs network.
        type: string
      updated_at:
        type: string
      url:
        description: The URL that will contain the mandate that the customer has signed.
        type: string
    type: object
  methods.MandateBlik:
    properties:
      created_at:
        type: string
      expires_after:
        description: Date at which the mandate expires.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      off_session:
        format: uuid
        type: string
      type:
        description: Type of the mandate.
        type: string
      updated_at:
        type: string
    type: object
  methods.MandateCard:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.MandateLink:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.MandatePaymentMethodDetails:
    properties:
      acss_debit:
        $ref: '#/definitions/methods.MandateAcssDebit'
      au_becs_debit:
        $ref: '#/definitions/methods.MandateAuBecsDebit'
      bacs_debit:
        $ref: '#/definitions/methods.MandateBacsDebit'
      blik:
        $ref: '#/definitions/methods.MandateBlik'
      card:
        $ref: '#/definitions/methods.MandateCard'
      created_at:
        type: string
      id:
        type: string
      link:
        $ref: '#/definitions/methods.MandateLink'
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      sepa_debit:
        $ref: '#/definitions/methods.MandateSepaDebit'
      type:
        type: string
      updated_at:
        type: string
      us_bank_account:
        $ref: '#/definitions/methods.MandateUsBankAccount'
    type: object
  methods.MandateSepaDebit:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      reference:
        description: The unique reference of the mandate.
        type: string
      updated_at:
        type: string
      url:
        description: The URL of the mandate. This URL generally contains sensitive
          information about the customer and should be shared with them exclusively.
        type: string
    type: object
  methods.MandateSingleUse:
    properties:
      amount:
        description: On a single use mandate, the amount of the payment.
        type: integer
      created_at:
        type: string
      currency:
        description: On a single use mandate, the currency of the payment.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.MandateUsBankAccount:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptions:
    properties:
      acss_debit:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsAcssDebit1'
      affirm:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsAffirm'
      afterpay_clearpay:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsAfterpayClearpay'
      alipay:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsAlipay'
      au_becs_debit:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsAuBecsDebit1'
      bacs_debit:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsBacsDebit'
      bancontact:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsBancontact'
      blik:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsBlik'
      boleto:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsBoleto'
      btc_pay:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsBtcPay'
      card:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsCard1'
      card_present:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsCardPresent'
      created_at:
        type: string
      customer_balance:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsCustomerBalance'
      eps:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsEps1'
      fpx:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsFpx'
      giropay:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsGiropay'
      grabpay:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsGrabpay'
      id:
        type: string
      ideal:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsIdeal'
      interac_present:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsInteracPresent'
      klarna:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsKlarna'
      konbini:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsKonbini'
      link:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsLink1'
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      oxxo:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsOxxo'
      p24:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsP24'
      paynow:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsPaynow'
      pix:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsPix'
      promptpay:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsPromptpay'
      sepa_debit:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsSepaDebit1'
      sofort:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsSofort'
      updated_at:
        type: string
      us_bank_account:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsUsBankAccount1'
      wechat_pay:
        $ref: '#/definitions/methods.PaymentIntentPaymentMethodOptionsWechatPay'
    type: object
  methods.PaymentIntentPaymentMethodOptionsAcssDebit1:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      mandate_options:
        format: uuid
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsAffirm:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsAfterpayClearpay:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      reference:
        description: Order identifier shown to the customer in Afterpay’s online portal.
          We recommend using a value that helps you answer any questions a customer
          might have about the payment. The identifier is limited to 128 characters
          and may contain only letters, digits, underscores, backslashes and dashes.
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsAlipay:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsAuBecsDebit1:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsBacsDebit:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsBancontact:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      preferred_language:
        description: Preferred language of the Bancontact authorization page that
          the customer is redirected to.
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsBlik:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsBoleto:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      expires_after_days:
        description: The number of calendar days before a Boleto voucher expires.
          For example, if you create a Boleto voucher on Monday and you set expires_after_days
          to 2, the Boleto voucher will expire on Wednesday at 23:59 America/Sao_Paulo
          time.
        type: integer
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsBtcPay:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsCard1:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      mandate_options:
        format: uuid
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      network:
        description: Selected network to process this payment intent on. Depends on
          the available networks of the card attached to the payment intent. Can be
          only set confirm-time.
        type: string
      object:
        type: string
      request_three_d_secure:
        description: 'We strongly recommend that you rely on our SCA Engine to automatically
          prompt your customers for authentication based on risk level and [other
          requirements](https://stripe.com/docs/strong-customer-authentication). However,
          if you wish to request 3D Secure based on logic from your own fraud engine,
          provide this option. Permitted values include: `automatic` or `any`. If
          not provided, defaults to `automatic`. Read our guide on [manually requesting
          3D Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds) for
          more information on how this configuration interacts with Radar and our
          SCA Engine.'
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      statement_descriptor_suffix_kana:
        description: Provides information about a card payment that customers see
          on their statements. Concatenated with the Kana prefix (shortened Kana descriptor)
          or Kana statement descriptor that’s set on the account to form the complete
          statement descriptor. Maximum 22 characters. On card statements, the *concatenation*
          of both prefix and suffix (including separators) will appear truncated to
          22 characters.
        type: string
      statement_descriptor_suffix_kanji:
        description: Provides information about a card payment that customers see
          on their statements. Concatenated with the Kanji prefix (shortened Kanji
          descriptor) or Kanji statement descriptor that’s set on the account to form
          the complete statement descriptor. Maximum 17 characters. On card statements,
          the *concatenation* of both prefix and suffix (including separators) will
          appear truncated to 17 characters.
        type: string
      updated_at:
        type: string
      verification_method:
        description: |-
          Installments  *paymentFlow.PaymentFlowsInstallmentOptions `json:"installments,omitempty"  database:"foreignKey:id" swaggertype:"primitive,string" format:"uuid"`
          Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsCardPresent:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      request_extended_authorization:
        description: Request ability to capture this payment beyond the standard [authorization
          validity window](https://stripe.com/docs/terminal/features/extended-authorizations#authorization-validity)
        type: boolean
      request_incremental_authorization_support:
        description: Request ability to [increment](https://stripe.com/docs/terminal/features/incremental-authorizations)
          this PaymentIntent if the combination of MCC and card brand is eligible.
          Check [incremental_authorization_supported](https://stripe.com/docs/api/charges/object#charge_object-payment_method_details-card_present-incremental_authorization_supported)
          in the [Confirm](https://stripe.com/docs/api/payment_intents/confirm) response
          to verify support.
        type: boolean
      setup_future_usage:
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsCustomerBalance:
    properties:
      bank_transfer:
        format: uuid
        type: string
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      funding_type:
        description: 'The funding method type to be used when there are not enough
          funds in the customer balance. Permitted values include: `bank_transfer`.'
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsEps1:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsFpx:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsGiropay:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsGrabpay:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsIdeal:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsInteracPresent:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsKlarna:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      preferred_locale:
        description: Preferred locale of the Klarna checkout page that the customer
          is redirected to.
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsKonbini:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      confirmation_number:
        description: An optional 10 to 11 digit numeric-only string determining the
          confirmation code at applicable convenience stores.
        type: string
      created_at:
        type: string
      expires_after_days:
        description: The number of calendar days (between 1 and 60) after which Konbini
          payment instructions will expire. For example, if a PaymentIntent is confirmed
          with Konbini and `expires_after_days` set to 2 on Monday JST, the instructions
          will expire on Wednesday 23:59:59 JST.
        type: integer
      expires_at:
        description: The timestamp at which the Konbini payment instructions will
          expire. Only one of `expires_after_days` or `expires_at` may be set.
        type: integer
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      product_description:
        description: A product descriptor of up to 22 characters, which will appear
          to customers at the convenience store.
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsLink1:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      persistent_token:
        description: Token used for persistent Link logins.
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsOxxo:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      expires_after_days:
        description: The number of calendar days before an OXXO invoice expires. For
          example, if you create an OXXO invoice on Monday and you set expires_after_days
          to 2, the OXXO invoice will expire on Wednesday at 23:59 America/Mexico_City
          time.
        type: integer
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsP24:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsPaynow:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsPix:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      expires_after_seconds:
        description: The number of seconds (between 10 and 1209600) after which Pix
          payment will expire.
        type: integer
      expires_at:
        description: The timestamp at which the Pix expires.
        type: integer
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsPromptpay:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsSepaDebit1:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      mandate_options:
        $ref: '#/definitions/core.JSONB'
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsSofort:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      preferred_language:
        description: Preferred language of the SOFORT authorization page that the
          customer is redirected to.
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsUsBankAccount1:
    properties:
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      financial_connections:
        format: uuid
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentIntentPaymentMethodOptionsWechatPay:
    properties:
      app_id:
        description: The app ID registered with WeChat Pay. Only required when client
          is ios or android.
        type: string
      capture_method:
        description: Controls when the funds will be captured from the customer's
          account.
        type: string
      client:
        description: The client type that the end customer will pay from
        type: string
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  methods.PaymentMethodAcssDebit:
    properties:
      bank_name:
        type: string
      created_at:
        type: string
      fingerprint:
        type: string
      id:
        type: string
      institution_number:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      transit_number:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodAffirm:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodAfterpayClearpay:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodAlipay:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodAuBecsDebit:
    properties:
      bsb_number:
        type: string
      created_at:
        type: string
      fingerprint:
        type: string
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodBacsDebit:
    properties:
      created_at:
        type: string
      fingerprint:
        type: string
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      sort_code:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodBancontact:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodBlik:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodBoleto:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      tax_id:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodBtcPay:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodCard:
    properties:
      address_line1_check:
        type: string
      address_postal_code_check:
        type: string
      available_networks:
        items:
          type: string
        type: array
      brand:
        type: string
      country:
        type: string
      created_at:
        type: string
      cvc_check:
        type: string
      exp_month:
        type: integer
      exp_year:
        type: integer
      fingerprint:
        type: string
      funding:
        type: string
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      preferred_network:
        type: string
      three_d_secure_usage_supported:
        type: boolean
      updated_at:
        type: string
      wallet:
        format: uuid
        type: string
    type: object
  methods.PaymentMethodCardPresent:
    properties:
      available_networks:
        items:
          type: string
        type: array
      brand:
        type: string
      cardholder_name:
        type: string
      country:
        type: string
      created_at:
        type: string
      exp_month:
        type: integer
      exp_year:
        type: integer
      fingerprint:
        type: string
      funding:
        type: string
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      preferred_network:
        type: string
      read_method:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodCustomerBalance:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodEps:
    properties:
      bank:
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodFpx:
    properties:
      bank:
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodGiropay:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodGrabpay:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodIdeal:
    properties:
      bank:
        type: string
      bic:
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodInteracPresent:
    properties:
      available_networks:
        items:
          type: string
        type: array
      brand:
        type: string
      cardholder_name:
        type: string
      country:
        type: string
      created_at:
        type: string
      exp_month:
        type: integer
      exp_year:
        type: integer
      fingerprint:
        type: string
      funding:
        type: string
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      preferred_network:
        type: string
      read_method:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodKlarna:
    properties:
      created_at:
        type: string
      day:
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      month:
        type: integer
      object:
        type: string
      updated_at:
        type: string
      year:
        type: integer
    type: object
  methods.PaymentMethodKonbini:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodLink:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      persistent_token:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodOxxo:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodP24:
    properties:
      bank:
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodPaynow:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodPix:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodPromptpay:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodSepaDebit:
    properties:
      bank_code:
        type: string
      branch_code:
        type: string
      country:
        type: string
      created_at:
        type: string
      fingerprint:
        type: string
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodSofort:
    properties:
      country:
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodUsBankAccount:
    properties:
      account_holder_type:
        type: string
      account_type:
        type: string
      available_networks:
        items:
          type: string
        type: array
      bank_name:
        type: string
      created_at:
        type: string
      financial_connections_account:
        type: string
      fingerprint:
        type: string
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      preferred_network:
        type: string
      routing_number:
        type: string
      updated_at:
        type: string
    type: object
  methods.PaymentMethodWechatPay:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  next.PaymentIntentNextAction:
    properties:
      alipay_handle_redirect:
        $ref: '#/definitions/next.PaymentIntentNextActionAlipayHandleRedirect'
      boleto_display_details:
        $ref: '#/definitions/next.PaymentIntentNextActionBoleto'
      card_await_notification:
        $ref: '#/definitions/next.PaymentIntentNextActionCardAwaitNotification'
      created_at:
        type: string
      display_bank_transfer_instructions:
        $ref: '#/definitions/next.PaymentIntentNextActionDisplayBankTransferInstructions'
      id:
        type: string
      konbini_display_details:
        $ref: '#/definitions/next.PaymentIntentNextActionKonbini'
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      oxxo_display_details:
        $ref: '#/definitions/next.PaymentIntentNextActionDisplayOxxoDetails'
      paynow_display_qr_code:
        $ref: '#/definitions/next.PaymentIntentNextActionPaynowDisplayQrCode'
      pix_display_qr_code:
        $ref: '#/definitions/next.PaymentIntentNextActionPixDisplayQrCode'
      promptpay_display_qr_code:
        $ref: '#/definitions/next.PaymentIntentNextActionPromptpayDisplayQrCode'
      redirect_to_url:
        $ref: '#/definitions/next.PaymentIntentNextActionRedirectToUrl'
      type:
        type: string
      updated_at:
        type: string
      use_stripe_sdk:
        $ref: '#/definitions/core.JSONB'
      verify_with_microdeposits:
        $ref: '#/definitions/next.PaymentIntentNextActionVerifyWithMicrodeposits'
      wechat_pay_display_qr_code:
        $ref: '#/definitions/next.PaymentIntentNextActionWechatPayDisplayQrCode'
      wechat_pay_redirect_to_android_app:
        $ref: '#/definitions/next.PaymentIntentNextActionWechatPayRedirectToAndroidApp'
      wechat_pay_redirect_to_ios_app:
        $ref: '#/definitions/next.PaymentIntentNextActionWechatPayRedirectToIosApp'
    type: object
  next.PaymentIntentNextActionAlipayHandleRedirect:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      native_data:
        description: The native data to be used with Alipay SDK you must redirect
          your customer to in order to authenticate the payment in an Android App.
        type: string
      native_url:
        description: The native URL you must redirect your customer to in order to
          authenticate the payment in an iOS App.
        type: string
      object:
        type: string
      return_url:
        description: If the customer does not exit their browser while authenticating,
          they will be redirected to this specified URL after completion.
        type: string
      updated_at:
        type: string
      url:
        description: The URL you must redirect your customer to in order to authenticate
          the payment.
        type: string
    type: object
  next.PaymentIntentNextActionBoleto:
    properties:
      created_at:
        type: string
      expires_at:
        description: The timestamp after which the boleto expires.
        type: integer
      hosted_voucher_url:
        description: The URL to the hosted boleto voucher page, which allows customers
          to view the boleto voucher.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      number:
        description: The boleto number.
        type: string
      object:
        type: string
      pdf:
        description: The URL to the downloadable boleto voucher PDF.
        type: string
      updated_at:
        type: string
    type: object
  next.PaymentIntentNextActionCardAwaitNotification:
    properties:
      charge_attempt_at:
        description: The time that payment will be attempted. If customer approval
          is required, they need to provide approval before this time.
        type: integer
      created_at:
        type: string
      customer_approval_required:
        description: For payments greater than INR 15000, the customer must provide
          explicit approval of the payment with their bank. For payments of lower
          amount, no customer action is required.
        type: boolean
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  next.PaymentIntentNextActionDisplayBankTransferInstructions:
    properties:
      amount_remaining:
        description: The remaining amount that needs to be transferred to complete
          the payment.
        type: integer
      created_at:
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      financial_addresses:
        description: A list of financial addresses that can be used to fund the customer
          balance
        items:
          format: uuid
          type: string
        type: array
      hosted_instructions_url:
        description: A link to a hosted page that guides your customer through completing
          the transfer.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      reference:
        description: A string identifying this payment. Instruct your customer to
          include this code in the reference or memo field of their bank transfer.
        type: string
      type:
        description: Type of bank transfer
        type: string
      updated_at:
        type: string
    type: object
  next.PaymentIntentNextActionDisplayOxxoDetails:
    properties:
      created_at:
        type: string
      expires_after:
        description: The timestamp after which the OXXO voucher expires.
        type: integer
      hosted_voucher_url:
        description: The URL for the hosted OXXO voucher page, which allows customers
          to view and print an OXXO voucher.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      number:
        description: OXXO reference number.
        type: string
      object:
        type: string
      updated_at:
        type: string
    type: object
  next.PaymentIntentNextActionKonbini:
    properties:
      created_at:
        type: string
      expires_at:
        description: The timestamp at which the pending Konbini payment expires.
        type: integer
      hosted_voucher_url:
        description: The URL for the Konbini payment instructions page, which allows
          customers to view and print a Konbini voucher.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      stores:
        format: uuid
        type: string
      updated_at:
        type: string
    type: object
  next.PaymentIntentNextActionPaynowDisplayQrCode:
    properties:
      created_at:
        type: string
      data:
        description: The raw data string used to generate QR code, it should be used
          together with QR code library.
        type: string
      hosted_instructions_url:
        description: The URL to the hosted PayNow instructions page, which allows
          customers to view the PayNow QR code.
        type: string
      id:
        type: string
      image_url_png:
        description: The image_url_png string used to render QR code
        type: string
      image_url_svg:
        description: The image_url_svg string used to render QR code
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  next.PaymentIntentNextActionPixDisplayQrCode:
    properties:
      created_at:
        type: string
      data:
        description: The raw data string used to generate QR code, it should be used
          together with QR code library.
        type: string
      expires_at:
        description: The date (unix timestamp) when the PIX expires.
        type: integer
      hosted_instructions_url:
        description: The URL to the hosted pix instructions page, which allows customers
          to view the pix QR code.
        type: string
      id:
        type: string
      image_url_png:
        description: The image_url_png string used to render png QR code
        type: string
      image_url_svg:
        description: The image_url_svg string used to render svg QR code
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  next.PaymentIntentNextActionPromptpayDisplayQrCode:
    properties:
      created_at:
        type: string
      data:
        description: The raw data string used to generate QR code, it should be used
          together with QR code library.
        type: string
      hosted_instructions_url:
        description: The URL to the hosted PromptPay instructions page, which allows
          customers to view the PromptPay QR code.
        type: string
      id:
        type: string
      image_url_png:
        description: The PNG path used to render the QR code, can be used as the source
          in an HTML img tag
        type: string
      image_url_svg:
        description: The SVG path used to render the QR code, can be used as the source
          in an HTML img tag
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  next.PaymentIntentNextActionRedirectToUrl:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      return_url:
        description: If the customer does not exit their browser while authenticating,
          they will be redirected to this specified URL after completion.
        type: string
      updated_at:
        type: string
      url:
        description: The URL you must redirect your customer to in order to authenticate
          the payment.
        type: string
    type: object
  next.PaymentIntentNextActionVerifyWithMicrodeposits:
    properties:
      arrival_date:
        description: The timestamp when the microdeposits are expected to land.
        type: integer
      created_at:
        type: string
      hosted_verification_url:
        description: The URL for the hosted verification page, which allows customers
          to verify their bank account.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      microdeposit_type:
        description: The type of the microdeposit sent to the customer. Used to distinguish
          between different verification methods.
        type: string
      object:
        type: string
      updated_at:
        type: string
    type: object
  next.PaymentIntentNextActionWechatPayDisplayQrCode:
    properties:
      created_at:
        type: string
      data:
        description: The data being used to generate QR code
        type: string
      hosted_instructions_url:
        description: The URL to the hosted WeChat Pay instructions page, which allows
          customers to view the WeChat Pay QR code.
        type: string
      id:
        type: string
      image_data_url:
        description: The base64 image data for a pre-generated QR code
        type: string
      image_url_png:
        description: The image_url_png string used to render QR code
        type: string
      image_url_svg:
        description: The image_url_svg string used to render QR code
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  next.PaymentIntentNextActionWechatPayRedirectToAndroidApp:
    properties:
      app_id:
        description: app_id is the APP ID registered on WeChat open platform
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      nonce_str:
        description: nonce_str is a random string
        type: string
      object:
        type: string
      package:
        description: package is static value
        type: string
      partner_id:
        description: an unique merchant ID assigned by WeChat Pay
        type: string
      prepay_id:
        description: an unique trading ID assigned by WeChat Pay
        type: string
      sign:
        description: A signature
        type: string
      timestamp:
        description: Specifies the current time in epoch format
        type: string
      updated_at:
        type: string
    type: object
  next.PaymentIntentNextActionWechatPayRedirectToIosApp:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      native_url:
        description: An universal link that redirect to WeChat Pay app
        type: string
      object:
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutAcssDebitPaymentMethodOptions:
    properties:
      created_at:
        type: string
      currency:
        description: Currency supported by the bank account. Returned when the Session
          is in `setup` mode.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      mandate_options:
        format: uuid
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  options.CheckoutAffirmPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutAfterpayClearpayPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutAlipayPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutAuBecsDebitPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutBacsDebitPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutBancontactPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutBoletoPaymentMethodOptions:
    properties:
      created_at:
        type: string
      expires_after_days:
        description: The number of calendar days before a Boleto voucher expires.
          For example, if you create a Boleto voucher on Monday and you set expires_after_days
          to 2, the Boleto voucher will expire on Wednesday at 23:59 America/Sao_Paulo
          time.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutCardPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      installments:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      statement_descriptor_suffix_kana:
        description: Provides information about a card payment that customers see
          on their statements. Concatenated with the Kana prefix (shortened Kana descriptor)
          or Kana statement descriptor that’s set on the account to form the complete
          statement descriptor. Maximum 22 characters. On card statements, the *concatenation*
          of both prefix and suffix (including separators) will appear truncated to
          22 characters.
        type: string
      statement_descriptor_suffix_kanji:
        description: Provides information about a card payment that customers see
          on their statements. Concatenated with the Kanji prefix (shortened Kanji
          descriptor) or Kanji statement descriptor that’s set on the account to form
          the complete statement descriptor. Maximum 17 characters. On card statements,
          the *concatenation* of both prefix and suffix (including separators) will
          appear truncated to 17 characters.
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutCustomerBalancePaymentMethodOptions:
    properties:
      bank_transfer:
        format: uuid
        type: string
      created_at:
        type: string
      funding_type:
        description: 'The funding method type to be used when there are not enough
          funds in the customer balance. Permitted values include: `bank_transfer`.'
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutEpsPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutFpxPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutGiropayPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutGrabPayPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutIdealPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutKlarnaPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutKonbiniPaymentMethodOptions:
    properties:
      created_at:
        type: string
      expires_after_days:
        description: The number of calendar days (between 1 and 60) after which Konbini
          payment instructions will expire. For example, if a PaymentIntent is confirmed
          with Konbini and `expires_after_days` set to 2 on Monday JST, the instructions
          will expire on Wednesday 23:59:59 JST.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutOxxoPaymentMethodOptions:
    properties:
      created_at:
        type: string
      expires_after_days:
        description: The number of calendar days before an OXXO invoice expires. For
          example, if you create an OXXO invoice on Monday and you set expires_after_days
          to 2, the OXXO invoice will expire on Wednesday at 23:59 America/Mexico_City
          time.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutP24PaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutPaynowPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutPixPaymentMethodOptions:
    properties:
      created_at:
        type: string
      expires_after_seconds:
        description: The number of seconds after which Pix payment will expire.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutSepaDebitPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutSessionPaymentMethodOptions:
    properties:
      acss_debit:
        $ref: '#/definitions/options.CheckoutAcssDebitPaymentMethodOptions'
      affirm:
        $ref: '#/definitions/options.CheckoutAffirmPaymentMethodOptions'
      afterpay_clearpay:
        $ref: '#/definitions/options.CheckoutAfterpayClearpayPaymentMethodOptions'
      alipay:
        $ref: '#/definitions/options.CheckoutAlipayPaymentMethodOptions'
      au_becs_debit:
        $ref: '#/definitions/options.CheckoutAuBecsDebitPaymentMethodOptions'
      bacs_debit:
        $ref: '#/definitions/options.CheckoutBacsDebitPaymentMethodOptions'
      bancontact:
        $ref: '#/definitions/options.CheckoutBancontactPaymentMethodOptions'
      boleto:
        $ref: '#/definitions/options.CheckoutBoletoPaymentMethodOptions'
      card:
        $ref: '#/definitions/options.CheckoutCardPaymentMethodOptions'
      created_at:
        type: string
      customer_balance:
        $ref: '#/definitions/options.CheckoutCustomerBalancePaymentMethodOptions'
      eps:
        $ref: '#/definitions/options.CheckoutEpsPaymentMethodOptions'
      fpx:
        $ref: '#/definitions/options.CheckoutFpxPaymentMethodOptions'
      giropay:
        $ref: '#/definitions/options.CheckoutGiropayPaymentMethodOptions'
      grabpay:
        $ref: '#/definitions/options.CheckoutGrabPayPaymentMethodOptions'
      id:
        type: string
      ideal:
        $ref: '#/definitions/options.CheckoutIdealPaymentMethodOptions'
      klarna:
        $ref: '#/definitions/options.CheckoutKlarnaPaymentMethodOptions'
      konbini:
        $ref: '#/definitions/options.CheckoutKonbiniPaymentMethodOptions'
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      oxxo:
        $ref: '#/definitions/options.CheckoutOxxoPaymentMethodOptions'
      p24:
        $ref: '#/definitions/options.CheckoutP24PaymentMethodOptions'
      paynow:
        $ref: '#/definitions/options.CheckoutPaynowPaymentMethodOptions'
      pix:
        $ref: '#/definitions/options.CheckoutPixPaymentMethodOptions'
      sepa_debit:
        $ref: '#/definitions/options.CheckoutSepaDebitPaymentMethodOptions'
      sofort:
        $ref: '#/definitions/options.CheckoutSofortPaymentMethodOptions'
      updated_at:
        type: string
      us_bank_account:
        $ref: '#/definitions/options.CheckoutUsBankAccountPaymentMethodOptions'
    type: object
  options.CheckoutSofortPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
    type: object
  options.CheckoutUsBankAccountPaymentMethodOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      permissions:
        description: The list of permissions to request. The `payment_method` permission
          must be included.
        items:
          type: string
        type: array
      return_url:
        description: For webview integrations only. Upon completing OAuth login in
          the native browser, the user will be redirected to this URL to return to
          your app.
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with this PaymentIntent's
          payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment)
          to the PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete. If no Customer
          was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach)
          to a Customer after the transaction completes.  When processing card payments,
          Stripe also uses `setup_future_usage` to dynamically optimize your payment
          flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  options.PaymentLinksResourceAfterCompletion:
    properties:
      created_at:
        type: string
      hosted_confirmation:
        format: uuid
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      redirect:
        format: uuid
        type: string
      type:
        description: The specified behavior after the purchase is complete.
        type: string
      updated_at:
        type: string
    type: object
  options.PaymentLinksResourceConsentCollection:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      promotions:
        description: If set to `auto`, enables the collection of customer consent
          for promotional communications.
        type: string
      terms_of_service:
        description: If set to `required`, it requires cutomers to accept the terms
          of service before being able to pay. If set to `none`, customers won't be
          shown a checkbox to accept the terms of service.
        type: string
      updated_at:
        type: string
    type: object
  options.PaymentLinksResourceCustomText:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      shipping_address:
        type: string
      submit:
        type: string
      updated_at:
        type: string
    type: object
  options.PaymentLinksResourcePaymentIntentData:
    properties:
      capture_method:
        description: Indicates when the funds will be captured from the customer's
          account.
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      setup_future_usage:
        description: Indicates that you intend to make future payments with the payment
          method collected during checkout.
        type: string
      updated_at:
        type: string
    type: object
  options.PaymentLinksResourceShippingAddressCollection:
    properties:
      allowed_countries:
        description: 'An array of two-letter ISO country codes representing which
          countries Checkout should provide as options for shipping locations. Unsupported
          country codes: `AS, CX, CC, CU, HM, IR, KP, MH, FM, NF, MP, PW, SD, SY,
          UM, VI`.'
        items:
          type: string
        type: array
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  options.PaymentLinksResourceSubscriptionData:
    properties:
      created_at:
        type: string
      description:
        description: The subscription's description, meant to be displayable to the
          customer. Use this field to optionally store an explanation of the subscription.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      trial_period_days:
        description: Integer representing the number of trial period days before the
          customer is charged for the first time.
        type: integer
      updated_at:
        type: string
    type: object
  options.SubscriptionsResourcePaymentMethodOptions:
    properties:
      acss_debit:
        $ref: '#/definitions/options.SubscriptionsResourcePaymentMethodOptionsAcssDebit'
      bancontact:
        $ref: '#/definitions/options.SubscriptionsResourcePaymentMethodOptionsBancontact'
      card:
        $ref: '#/definitions/options.SubscriptionsResourcePaymentMethodOptionsCard'
      created_at:
        type: string
      customer_balance:
        $ref: '#/definitions/options.SubscriptionsResourcePaymentMethodOptionsCustomerBalance'
      id:
        type: string
      konbini:
        $ref: '#/definitions/options.SubscriptionsResourcePaymentMethodOptionsKonbini'
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
      us_bank_account:
        $ref: '#/definitions/options.SubscriptionsResourcePaymentMethodOptionsUsBankAccount'
    type: object
  options.SubscriptionsResourcePaymentMethodOptionsAcssDebit:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      mandate_options_transaction_type:
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  options.SubscriptionsResourcePaymentMethodOptionsBancontact:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      preferred_language:
        description: Preferred language of the Bancontact authorization page that
          the customer is redirected to.
        type: string
      updated_at:
        type: string
    type: object
  options.SubscriptionsResourcePaymentMethodOptionsCard:
    properties:
      amount:
        description: Amount to be charged for future payments.
        type: integer
      amount_type:
        description: One of `fixed` or `maximum`. If `fixed`, the `amount` param refers
          to the exact amount to be charged in future payments. If `maximum`, the
          amount charged can be up to the value passed for the `amount` param.
        type: string
      created_at:
        type: string
      description:
        description: A description of the mandate or subscription that is meant to
          be displayed to the customer.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      network:
        description: Selected network to process this Subscription on. Depends on
          the available networks of the card attached to the Subscription. Can be
          only set confirm-time.
        type: string
      object:
        type: string
      request_three_d_secure:
        description: We strongly recommend that you rely on our SCA Engine to automatically
          prompt your customers for authentication based on risk level and [other
          requirements](https://stripe.com/docs/strong-customer-authentication). However,
          if you wish to request 3D Secure based on logic from your own fraud engine,
          provide this option. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds)
          for more information on how this configuration interacts with Radar and
          our SCA Engine.
        type: string
      updated_at:
        type: string
    type: object
  options.SubscriptionsResourcePaymentMethodOptionsCustomerBalance:
    properties:
      bank_transfer:
        format: uuid
        type: string
      created_at:
        type: string
      funding_type:
        description: 'The funding method type to be used when there are not enough
          funds in the customer balance. Permitted values include: `bank_transfer`.'
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  options.SubscriptionsResourcePaymentMethodOptionsKonbini:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  options.SubscriptionsResourcePaymentMethodOptionsUsBankAccount:
    properties:
      created_at:
        type: string
      financial_connections:
        format: uuid
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
      verification_method:
        description: Bank account verification method.
        type: string
    type: object
  page.PaymentPagesCheckoutSessionAfterExpiration:
    properties:
      allow_promotion_codes:
        description: Enables user redeemable promotion codes on the recovered Checkout
          Sessions. Defaults to `false`
        type: boolean
      created_at:
        type: string
      enabled:
        description: If `true`, a recovery url will be generated to recover this Checkout
          Session if it expires before a transaction is completed. It will be attached
          to the Checkout Session object upon expiration.
        type: boolean
      expires_at:
        description: The timestamp at which the recovery URL will expire.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
      url:
        description: URL that creates a new Checkout Session when clicked that is
          a copy of this expired Checkout Session
        type: string
    type: object
  page.PaymentPagesCheckoutSessionConsent:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      promotions:
        description: If `opt_in`, the customer consents to receiving promotional communications
          from the merchant about this Checkout Session.
        type: string
      terms_of_service:
        allOf:
        - $ref: '#/definitions/page.TermsOfService'
        description: If `accepted`, the customer in this Checkout Session has agreed
          to the merchant's terms of service.
      updated_at:
        type: string
    type: object
  page.PaymentPagesCheckoutSessionConsentCollection:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      promotions:
        description: If set to `auto`, enables the collection of customer consent
          for promotional communications. The Checkout Session will determine whether
          to display an option to opt into promotional communication from the merchant
          depending on the customer's locale. Only available to US merchants.
        type: string
      terms_of_service:
        description: If set to `required`, it requires customers to accept the terms
          of service before being able to pay.
        type: string
      updated_at:
        type: string
    type: object
  page.PaymentPagesCheckoutSessionCustomText:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      shipping_address:
        type: string
      submit:
        type: string
      updated_at:
        type: string
    type: object
  page.PaymentPagesCheckoutSessionCustomerDetails:
    properties:
      address:
        format: uuid
        type: string
      created_at:
        type: string
      email:
        description: The email associated with the Customer, if one exists, on the
          Checkout Session after a completed Checkout Session or at time of session
          expiry. Otherwise, if the customer has consented to promotional content,
          this value is the most recent valid email provided by the customer on the
          Checkout form.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      name:
        description: 'The customer''s name after a completed Checkout Session. Note:
          This property is populated only for sessions on or after March 30, 2022.'
        type: string
      object:
        type: string
      phone:
        description: The customer's phone number after a completed Checkout Session.
        type: string
      tax_exempt:
        description: The customer’s tax exempt status after a completed Checkout Session.
        type: string
      tax_ids:
        description: The customer’s tax IDs after a completed Checkout Session.
        items:
          format: uuid
          type: string
        type: array
      updated_at:
        type: string
    type: object
  page.PaymentPagesCheckoutSessionInvoiceCreation:
    properties:
      created_at:
        type: string
      enabled:
        description: Indicates whether invoice creation is enabled for the Checkout
          Session.
        type: boolean
      id:
        type: string
      invoice_data:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  page.PaymentPagesCheckoutSessionShippingAddressCollection:
    properties:
      allowed_countries:
        description: 'An array of two-letter ISO country codes representing which
          countries Checkout should provide as options for shipping locations. Unsupported
          country codes: `AS, CX, CC, CU, HM, IR, KP, MH, FM, NF, MP, PW, SD, SY,
          UM, VI`.'
        items:
          type: string
        type: array
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  page.PaymentPagesCheckoutSessionShippingCost:
    properties:
      amount_subtota:
        description: Total shipping cost before any discounts or taxes are applied.
        type: integer
      amount_tax:
        description: Total tax amount applied due to shipping costs. If no tax was
          applied, defaults to 0.
        type: integer
      amount_tota:
        description: Total shipping cost after discounts and taxes are applied.
        type: integer
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      shipping_rate:
        format: uuid
        type: string
      taxes:
        description: The taxes applied to the shipping rate.
        items:
          format: uuid
          type: string
        type: array
      updated_at:
        type: string
    type: object
  page.PaymentPagesCheckoutSessionTotalDetails:
    properties:
      amount_discount:
        description: This is the sum of all the discounts.
        type: integer
      amount_shipping:
        description: This is the sum of all the shipping amounts.
        type: integer
      amount_tax:
        description: This is the sum of all the tax amounts.
        type: integer
      created_at:
        type: string
      discounts:
        description: The aggregated discounts.
        items:
          format: uuid
          type: string
        type: array
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      taxes:
        description: The aggregated tax amounts by rate.
        items:
          format: uuid
          type: string
        type: array
      updated_at:
        type: string
    type: object
  page.TermsOfService:
    enum:
    - accepted
    type: string
    x-enum-varnames:
    - TermsOfServiceAccepted
  paymentFlow.PaymentFlowsAmountDetails:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      tip_amount:
        type: integer
      updated_at:
        type: string
    type: object
  payout.Bind.request:
    properties:
      amount:
        type: integer
      arrival_date:
        type: integer
      automatic:
        type: boolean
      balance_transaction:
        $ref: '#/definitions/uuid.NullUUID'
      created_at:
        type: string
      currency:
        type: string
      description:
        type: string
      destination:
        type: string
      failure_balance_transaction:
        $ref: '#/definitions/uuid.NullUUID'
      failure_code:
        type: string
      failure_message:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      method:
        $ref: '#/definitions/payout.Method'
      object:
        type: string
      original_payout:
        $ref: '#/definitions/uuid.NullUUID'
      reversed_by:
        $ref: '#/definitions/uuid.NullUUID'
      source_type:
        $ref: '#/definitions/payout.SourceType'
      statement_descriptor:
        type: string
      status:
        $ref: '#/definitions/payout.Status'
      type:
        $ref: '#/definitions/payout.Type'
      updated_at:
        type: string
    type: object
  payout.Method:
    enum:
    - standard
    - instant
    type: string
    x-enum-varnames:
    - MethodStandard
    - MethodInstant
  payout.Payout:
    properties:
      amount:
        type: integer
      arrival_date:
        type: integer
      automatic:
        type: boolean
      balance_transaction:
        $ref: '#/definitions/balance.BalanceTransaction'
      created_at:
        type: string
      currency:
        type: string
      description:
        type: string
      destination:
        type: string
      failure_balance_transaction:
        $ref: '#/definitions/balance.BalanceTransaction'
      failure_code:
        type: string
      failure_message:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      method:
        $ref: '#/definitions/payout.Method'
      object:
        type: string
      original_payout:
        $ref: '#/definitions/payout.Payout'
      reversed_by:
        $ref: '#/definitions/payout.Payout'
      source_type:
        $ref: '#/definitions/payout.SourceType'
      statement_descriptor:
        type: string
      status:
        $ref: '#/definitions/payout.Status'
      type:
        $ref: '#/definitions/payout.Type'
      updated_at:
        type: string
    type: object
  payout.SourceType:
    enum:
    - card
    - fpx
    - bank_account
    type: string
    x-enum-varnames:
    - SourceTypeCard
    - SourceTypeFpx
    - SourceTypeBankAccount
  payout.Status:
    enum:
    - paid
    - pending
    - in_transit
    - canceled
    - failed
    type: string
    x-enum-varnames:
    - StatusPaid
    - StatusPending
    - StatusInTransit
    - StatusCanceled
    - StatusFailed
  payout.Type:
    enum:
    - bank_account
    - card
    type: string
    x-enum-varnames:
    - TypeBankAccount
    - TypeCard
  plan.Bind.request:
    properties:
      active:
        description: Whether the plan can be used for new purchases.
        type: boolean
      aggregate_usage:
        description: Specifies a usage aggregation strategy for plans of `usage_type=metered`.
          Allowed values are `sum` for summing up all usage during a period, `last_during_period`
          for using the last usage record reported within a period, `last_ever` for
          using the last usage record ever (across period bounds) or `max` which uses
          the usage record with the maximum reported usage during a period. Defaults
          to `sum`.
        type: string
      amount:
        description: The unit amount in %s to be charged, represented as a whole integer
          if possible. Only set if `billing_scheme=per_unit`.
        type: integer
      amount_decimal:
        description: The unit amount in %s to be charged, represented as a decimal
          string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.
        type: number
      billing_scheme:
        description: Describes how to compute the price per period. Either `per_unit`
          or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`)
          will be charged per unit in `quantity` (for plans with `usage_type=licensed`),
          or per unit of total usage (for plans with `usage_type=metered`). `tiered`
          indicates that the unit pricing will be computed using a tiering strategy
          as defined using the `tiers` and `tiers_mode` attributes.
        type: string
      created_at:
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      id:
        type: string
      interval:
        description: The frequency at which a subscription is billed. One of `day`,
          `week`, `month` or `year`.
        type: string
      interval_count:
        description: The number of intervals (specified in the `interval` attribute)
          between subscription billings. For example, `interval=month` and `interval_count=3`
          bills every 3 months.
        type: integer
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      nickname:
        description: A brief description of the plan, hidden from customers.
        type: string
      object:
        type: string
      product:
        $ref: '#/definitions/uuid.NullUUID'
      tiers:
        description: Each element represents a pricing tier. This parameter requires
          `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
        items:
          format: uuid
          type: string
        type: array
      tiers_mode:
        description: Defines if the tiering price should be `graduated` or `volume`
          based. In `volume`-based tiering, the maximum quantity within a period determines
          the per unit price. In `graduated` tiering, pricing can change as the quantity
          grows.
        type: string
      transform_usage:
        $ref: '#/definitions/plan.TransformUsage'
      trial_period_days:
        description: Default number of trial days when subscribing a customer to this
          plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
        type: integer
      updated_at:
        type: string
      usage_type:
        description: Configures how the quantity per period should be determined.
          Can be either `metered` or `licensed`. `licensed` automatically bills the
          `quantity` set when adding it to a subscription. `metered` aggregates the
          total usage based on usage records. Defaults to `licensed`.
        type: string
    type: object
  plan.Plan:
    properties:
      active:
        description: Whether the plan can be used for new purchases.
        type: boolean
      aggregate_usage:
        description: Specifies a usage aggregation strategy for plans of `usage_type=metered`.
          Allowed values are `sum` for summing up all usage during a period, `last_during_period`
          for using the last usage record reported within a period, `last_ever` for
          using the last usage record ever (across period bounds) or `max` which uses
          the usage record with the maximum reported usage during a period. Defaults
          to `sum`.
        type: string
      amount:
        description: The unit amount in %s to be charged, represented as a whole integer
          if possible. Only set if `billing_scheme=per_unit`.
        type: integer
      amount_decimal:
        description: The unit amount in %s to be charged, represented as a decimal
          string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.
        type: number
      billing_scheme:
        description: Describes how to compute the price per period. Either `per_unit`
          or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`)
          will be charged per unit in `quantity` (for plans with `usage_type=licensed`),
          or per unit of total usage (for plans with `usage_type=metered`). `tiered`
          indicates that the unit pricing will be computed using a tiering strategy
          as defined using the `tiers` and `tiers_mode` attributes.
        type: string
      created_at:
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      id:
        type: string
      interval:
        description: The frequency at which a subscription is billed. One of `day`,
          `week`, `month` or `year`.
        type: string
      interval_count:
        description: The number of intervals (specified in the `interval` attribute)
          between subscription billings. For example, `interval=month` and `interval_count=3`
          bills every 3 months.
        type: integer
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      nickname:
        description: A brief description of the plan, hidden from customers.
        type: string
      object:
        type: string
      product:
        $ref: '#/definitions/product.Product'
      tiers:
        description: Each element represents a pricing tier. This parameter requires
          `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
        items:
          format: uuid
          type: string
        type: array
      tiers_mode:
        description: Defines if the tiering price should be `graduated` or `volume`
          based. In `volume`-based tiering, the maximum quantity within a period determines
          the per unit price. In `graduated` tiering, pricing can change as the quantity
          grows.
        type: string
      transform_usage:
        $ref: '#/definitions/plan.TransformUsage'
      trial_period_days:
        description: Default number of trial days when subscribing a customer to this
          plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
        type: integer
      updated_at:
        type: string
      usage_type:
        description: Configures how the quantity per period should be determined.
          Can be either `metered` or `licensed`. `licensed` automatically bills the
          `quantity` set when adding it to a subscription. `metered` aggregates the
          total usage based on usage records. Defaults to `licensed`.
        type: string
    type: object
  plan.TransformUsage:
    properties:
      created_at:
        type: string
      divide_by:
        description: Divide usage by this number.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      round:
        description: After division, either round the result `up` or `down`.
        type: string
      updated_at:
        type: string
    type: object
  price.AggregateUsage:
    enum:
    - sum
    - last_during_period
    - last_ever
    - max
    type: string
    x-enum-varnames:
    - AggregateUsageSum
    - AggregateUsageLastDuringPeriod
    - AggregateUsageLastEver
    - AggregateUsageMax
  price.BillingScheme:
    enum:
    - per_unit
    - tiered
    type: string
    x-enum-varnames:
    - BillingSchemePerUnit
    - BillingSchemeTiered
  price.Bind.request:
    properties:
      active:
        type: boolean
      billing_scheme:
        $ref: '#/definitions/price.BillingScheme'
      created_at:
        type: string
      currency:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      lookup_key:
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      nickname:
        type: string
      object:
        type: string
      product:
        $ref: '#/definitions/uuid.NullUUID'
      recurring:
        $ref: '#/definitions/price.Recurring'
      tax_behavior:
        $ref: '#/definitions/price.TaxBehavior'
      tiers:
        items:
          format: uuid
          type: string
        type: array
      tiers_mode:
        $ref: '#/definitions/price.TiersMode'
      transform_quantity:
        $ref: '#/definitions/price.TransformQuantity'
      type:
        $ref: '#/definitions/price.Type'
      unit_amount:
        type: integer
      unit_amount_decimal:
        type: number
      updated_at:
        type: string
    type: object
  price.Interval:
    enum:
    - month
    - year
    - week
    - day
    type: string
    x-enum-varnames:
    - IntervalMonth
    - IntervalYear
    - IntervalWeek
    - IntervalDay
  price.Price:
    properties:
      active:
        type: boolean
      billing_scheme:
        $ref: '#/definitions/price.BillingScheme'
      created_at:
        type: string
      currency:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      lookup_key:
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      nickname:
        type: string
      object:
        type: string
      product:
        $ref: '#/definitions/product.Product'
      recurring:
        $ref: '#/definitions/price.Recurring'
      tax_behavior:
        $ref: '#/definitions/price.TaxBehavior'
      tiers:
        items:
          format: uuid
          type: string
        type: array
      tiers_mode:
        $ref: '#/definitions/price.TiersMode'
      transform_quantity:
        $ref: '#/definitions/price.TransformQuantity'
      type:
        $ref: '#/definitions/price.Type'
      unit_amount:
        type: integer
      unit_amount_decimal:
        type: number
      updated_at:
        type: string
    type: object
  price.Recurring:
    properties:
      aggregate_usage:
        $ref: '#/definitions/price.AggregateUsage'
      created_at:
        type: string
      id:
        type: string
      interval:
        $ref: '#/definitions/price.Interval'
      interval_count:
        type: integer
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
      usage_type:
        $ref: '#/definitions/price.UsageType'
    type: object
  price.Round:
    enum:
    - up
    - down
    type: string
    x-enum-varnames:
    - RoundUp
    - RoundDown
  price.TaxBehavior:
    enum:
    - inclusive
    - exclusive
    - unspecified
    type: string
    x-enum-varnames:
    - TaxBehaviorInclusive
    - TaxBehaviorExclusive
    - TaxBehaviorUnspecified
  price.TiersMode:
    enum:
    - graduated
    - volume
    type: string
    x-enum-varnames:
    - TiersModeGraduated
    - TiersModeVolume
  price.TransformQuantity:
    properties:
      created_at:
        type: string
      divide_by:
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      round:
        $ref: '#/definitions/price.Round'
      updated_at:
        type: string
    type: object
  price.Type:
    enum:
    - one_time
    - recurring
    type: string
    x-enum-varnames:
    - TypeOneTime
    - TypeRecurring
  price.UsageType:
    enum:
    - metered
    - licensed
    type: string
    x-enum-varnames:
    - UsageTypeMetered
    - UsageTypeLicensed
  product.Bind.request:
    properties:
      active:
        type: boolean
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      images:
        items:
          type: string
        type: array
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      name:
        type: string
      object:
        type: string
      package_dimensions:
        $ref: '#/definitions/product.PackageDimensions'
      shippable:
        type: boolean
      statement_descriptor:
        type: string
      tax_code:
        $ref: '#/definitions/tax.TaxCode'
      unit_label:
        type: string
      updated:
        type: integer
      updated_at:
        type: string
      url:
        type: string
    type: object
  product.PackageDimensions:
    properties:
      created_at:
        type: string
      height:
        type: number
      id:
        type: string
      length:
        type: number
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
      weight:
        type: number
      width:
        type: number
    type: object
  product.Product:
    properties:
      active:
        type: boolean
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      images:
        items:
          type: string
        type: array
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      name:
        type: string
      object:
        type: string
      package_dimensions:
        $ref: '#/definitions/product.PackageDimensions'
      shippable:
        type: boolean
      statement_descriptor:
        type: string
      tax_code:
        $ref: '#/definitions/tax.TaxCode'
      unit_label:
        type: string
      updated:
        type: integer
      updated_at:
        type: string
      url:
        type: string
    type: object
  promotion.Bind.request:
    properties:
      active:
        type: boolean
      code:
        type: string
      coupon:
        $ref: '#/definitions/uuid.NullUUID'
      created_at:
        type: string
      customer:
        $ref: '#/definitions/uuid.NullUUID'
      expires_at:
        type: integer
      first_time_transaction:
        type: boolean
      id:
        type: string
      livemode:
        type: boolean
      max_redemptions:
        type: integer
      metadata:
        $ref: '#/definitions/core.JSONB'
      minimum_amount:
        type: integer
      minimum_amount_currency:
        type: string
      object:
        type: string
      times_redeemed:
        type: integer
      updated_at:
        type: string
    type: object
  promotion.PromotionCode:
    properties:
      active:
        type: boolean
      code:
        type: string
      coupon:
        $ref: '#/definitions/coupon.Coupon'
      created_at:
        type: string
      customer:
        $ref: '#/definitions/customer.Customer'
      expires_at:
        type: integer
      first_time_transaction:
        type: boolean
      id:
        type: string
      livemode:
        type: boolean
      max_redemptions:
        type: integer
      metadata:
        $ref: '#/definitions/core.JSONB'
      minimum_amount:
        type: integer
      minimum_amount_currency:
        type: string
      object:
        type: string
      times_redeemed:
        type: integer
      updated_at:
        type: string
    type: object
  quote.Bind.request:
    properties:
      amount_subtotal:
        description: Total before any discounts or taxes are applied.
        type: integer
      amount_total:
        description: Total after discounts and taxes are applied.
        type: integer
      automatic_tax:
        type: boolean
      collection_method:
        description: Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay invoices at the end of the subscription
          cycle or on finalization using the default payment method attached to the
          subscription or customer. When sending an invoice, Stripe will email your
          customer an invoice with payment instructions and mark the subscription
          as `active`. Defaults to `charge_automatically`.
        type: string
      computed:
        $ref: '#/definitions/quote.QuotesResourceComputed'
      created_at:
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        $ref: '#/definitions/uuid.NullUUID'
      default_tax_rates:
        items:
          format: uuid
          type: string
        type: array
      description:
        description: A description that will be displayed on the quote PDF.
        type: string
      discounts:
        items:
          format: uuid
          type: string
        type: array
      expires_at:
        description: The date on which the quote will be canceled if in `open` or
          `draft` status. Measured in seconds since the Unix epoch.
        type: integer
      footer:
        description: A footer that will be displayed on the quote PDF.
        type: string
      header:
        description: A header that will be displayed on the quote PDF.
        type: string
      id:
        type: string
      invoice:
        $ref: '#/definitions/uuid.NullUUID'
      invoice_settings:
        allOf:
        - $ref: '#/definitions/settings.InvoiceSettingQuoteSetting'
        description: Unique identifier for the object.
      line_items:
        items:
          format: uuid
          type: string
        type: array
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      number:
        description: A unique number that identifies this particular quote. This number
          is assigned once the quote is [finalized](https://stripe.com/docs/quotes/overview#finalize).
        type: string
      object:
        type: string
      status:
        description: The status of the quote.
        type: string
      status_transitions:
        $ref: '#/definitions/quote.QuotesResourceStatusTransitions'
      subscription:
        $ref: '#/definitions/uuid.NullUUID'
      subscription_data:
        $ref: '#/definitions/quote.QuotesResourceSubscriptionDataSubscriptionData'
      subscription_schedule:
        $ref: '#/definitions/uuid.NullUUID'
      total_details:
        $ref: '#/definitions/quote.QuotesResourceTotalDetails'
      updated_at:
        type: string
    type: object
  quote.Quote:
    properties:
      amount_subtotal:
        description: Total before any discounts or taxes are applied.
        type: integer
      amount_total:
        description: Total after discounts and taxes are applied.
        type: integer
      automatic_tax:
        type: boolean
      collection_method:
        description: Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay invoices at the end of the subscription
          cycle or on finalization using the default payment method attached to the
          subscription or customer. When sending an invoice, Stripe will email your
          customer an invoice with payment instructions and mark the subscription
          as `active`. Defaults to `charge_automatically`.
        type: string
      computed:
        $ref: '#/definitions/quote.QuotesResourceComputed'
      created_at:
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        $ref: '#/definitions/customer.Customer'
      default_tax_rates:
        items:
          format: uuid
          type: string
        type: array
      description:
        description: A description that will be displayed on the quote PDF.
        type: string
      discounts:
        items:
          format: uuid
          type: string
        type: array
      expires_at:
        description: The date on which the quote will be canceled if in `open` or
          `draft` status. Measured in seconds since the Unix epoch.
        type: integer
      footer:
        description: A footer that will be displayed on the quote PDF.
        type: string
      header:
        description: A header that will be displayed on the quote PDF.
        type: string
      id:
        type: string
      invoice:
        $ref: '#/definitions/invoice.Invoice'
      invoice_settings:
        allOf:
        - $ref: '#/definitions/settings.InvoiceSettingQuoteSetting'
        description: Unique identifier for the object.
      line_items:
        items:
          format: uuid
          type: string
        type: array
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      number:
        description: A unique number that identifies this particular quote. This number
          is assigned once the quote is [finalized](https://stripe.com/docs/quotes/overview#finalize).
        type: string
      object:
        type: string
      status:
        description: The status of the quote.
        type: string
      status_transitions:
        $ref: '#/definitions/quote.QuotesResourceStatusTransitions'
      subscription:
        $ref: '#/definitions/subscription.Subscription'
      subscription_data:
        $ref: '#/definitions/quote.QuotesResourceSubscriptionDataSubscriptionData'
      subscription_schedule:
        $ref: '#/definitions/subscriptionSchedule.SubscriptionSchedule'
      total_details:
        $ref: '#/definitions/quote.QuotesResourceTotalDetails'
      updated_at:
        type: string
    type: object
  quote.QuotesResourceComputed:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      recurring:
        $ref: '#/definitions/quote.QuotesResourceRecurring'
      updated_at:
        type: string
      upfront:
        $ref: '#/definitions/quote.QuotesResourceUpfront'
    type: object
  quote.QuotesResourceRecurring:
    properties:
      amount_subtotal:
        description: Total before any discounts or taxes are applied.
        type: integer
      amount_total:
        description: Total after discounts and taxes are applied.
        type: integer
      created_at:
        type: string
      id:
        type: string
      interval:
        description: The frequency at which a subscription is billed. One of `day`,
          `week`, `month` or `year`.
        type: string
      interval_count:
        description: The number of intervals (specified in the `interval` attribute)
          between subscription billings. For example, `interval=month` and `interval_count=3`
          bills every 3 months.
        type: integer
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      total_details:
        $ref: '#/definitions/quote.QuotesResourceTotalDetails'
      updated_at:
        type: string
    type: object
  quote.QuotesResourceStatusTransitions:
    properties:
      accepted_at:
        description: The time that the quote was accepted. Measured in seconds since
          Unix epoch.
        type: integer
      canceled_at:
        description: The time that the quote was canceled. Measured in seconds since
          Unix epoch.
        type: integer
      created_at:
        type: string
      finalized_at:
        description: The time that the quote was finalized. Measured in seconds since
          Unix epoch.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  quote.QuotesResourceSubscriptionDataSubscriptionData:
    properties:
      created_at:
        type: string
      description:
        description: The subscription's description, meant to be displayable to the
          customer. Use this field to optionally store an explanation of the subscription.
        type: string
      effective_date:
        description: When creating a new subscription, the date of which the subscription
          schedule will start after the quote is accepted. This date is ignored if
          it is in the past when the quote is accepted. Measured in seconds since
          the Unix epoch.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      trial_period_days:
        description: Integer representing the number of trial period days before the
          customer is charged for the first time.
        type: integer
      updated_at:
        type: string
    type: object
  quote.QuotesResourceTotalDetails:
    properties:
      amount_discount:
        description: This is the sum of all the discounts.
        type: integer
      amount_shipping:
        description: This is the sum of all the shipping amounts.
        type: integer
      amount_tax:
        description: This is the sum of all the tax amounts.
        type: integer
      breakdown:
        $ref: '#/definitions/quote.QuotesResourceTotalDetailsResourceBreakdown'
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  quote.QuotesResourceTotalDetailsResourceBreakdown:
    properties:
      created_at:
        type: string
      discounts:
        description: The aggregated discounts.
        items:
          format: uuid
          type: string
        type: array
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      taxes:
        description: The aggregated tax amounts by rate.
        items:
          format: uuid
          type: string
        type: array
      updated_at:
        type: string
    type: object
  quote.QuotesResourceUpfront:
    properties:
      amount_subtotal:
        description: Total before any discounts or taxes are applied.
        type: integer
      amount_total:
        description: Total after discounts and taxes are applied.
        type: integer
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      total_details:
        allOf:
        - $ref: '#/definitions/quote.QuotesResourceTotalDetails'
        description: LineItems    *Item                      `json:"line_items,omitempty"`
      updated_at:
        type: string
    type: object
  radar.RadarOptions:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      session:
        description: A [Radar Session](https://stripe.com/docs/radar/radar-session)
          is a snapshot of the browser metadata and device details that help Radar
          make more accurate predictions on your payments.
        type: string
      updated_at:
        type: string
    type: object
  refund.Bind.request:
    properties:
      amount:
        type: integer
      balance_transaction:
        $ref: '#/definitions/uuid.NullUUID'
      charge:
        $ref: '#/definitions/uuid.NullUUID'
      created_at:
        type: string
      currency:
        type: string
      description:
        type: string
      failure_balance_transaction:
        $ref: '#/definitions/uuid.NullUUID'
      failure_reason:
        $ref: '#/definitions/refund.FailureReason'
      id:
        type: string
      instructions_email:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      next_action:
        format: uuid
        type: string
      object:
        type: string
      payment_intent:
        $ref: '#/definitions/uuid.NullUUID'
      reason:
        $ref: '#/definitions/refund.Reason'
      receipt_number:
        type: string
      status:
        $ref: '#/definitions/refund.Status'
      updated_at:
        type: string
    type: object
  refund.FailureReason:
    enum:
    - lost_or_stolen_card
    - expired_or_canceled_card
    - unknown
    type: string
    x-enum-varnames:
    - FailureReasonLostOrStolenCard
    - FailureReasonExpiredOrCanceledCard
    - FailureReasonUnknown
  refund.Reason:
    enum:
    - duplicate
    - fraudulent
    - requested_by_customer
    - expired_uncaptured_charge
    type: string
    x-enum-varnames:
    - ReasonDuplicate
    - ReasonFraudulent
    - ReasonRequestedByCustomer
    - ReasonExpiredUncapturedCharge
  refund.Refund:
    properties:
      amount:
        type: integer
      balance_transaction:
        format: uuid
        type: string
      charge:
        format: uuid
        type: string
      created_at:
        type: string
      currency:
        type: string
      description:
        type: string
      failure_balance_transaction:
        format: uuid
        type: string
      failure_reason:
        $ref: '#/definitions/refund.FailureReason'
      id:
        type: string
      instructions_email:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      next_action:
        format: uuid
        type: string
      object:
        type: string
      payment_intent:
        format: uuid
        type: string
      reason:
        $ref: '#/definitions/refund.Reason'
      receipt_number:
        type: string
      status:
        $ref: '#/definitions/refund.Status'
      updated_at:
        type: string
    type: object
  refund.Status:
    enum:
    - pending
    - requires_action
    - succeeded
    - failed
    - canceled
    type: string
    x-enum-varnames:
    - StatusPending
    - StatusRequiresAction
    - StatusSucceeded
    - StatusFailed
    - StatusCanceled
  review.Review:
    properties:
      billing_zip:
        description: The ZIP or postal code of the card used, if applicable.
        type: string
      closed_reason:
        description: The reason the review was closed, or null if it has not yet been
          closed. One of `approved`, `refunded`, `refunded_as_fraud`, `disputed`,
          or `redacted`.
        type: string
      created_at:
        type: string
      id:
        type: string
      ip_address:
        description: The IP address where the payment originated.
        type: string
      ip_address_location:
        format: uuid
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      open:
        description: If `true`, the review needs action.
        type: boolean
      opened_reason:
        description: The reason the review was opened. One of `rule` or `manual`.
        type: string
      reason:
        description: The reason the review is currently open or closed. One of `rule`,
          `manual`, `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.
        type: string
      session:
        format: uuid
        type: string
      updated_at:
        type: string
    type: object
  rule.Rule:
    properties:
      action:
        description: The action taken on the payment.
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      predicate:
        description: The predicate to evaluate the payment against.
        type: string
      updated_at:
        type: string
    type: object
  settings.InvoiceSettingCustomerSetting:
    properties:
      created_at:
        type: string
      custom_fields:
        description: Default custom fields to be displayed on invoices for this customer.
        items:
          format: uuid
          type: string
        type: array
      footer:
        description: |-
          DefaultPaymentMethod method.PaymentMethod `json:"default_payment_method,omitempty"`
          Default footer to be displayed on invoices for this customer.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      rendering_options:
        $ref: '#/definitions/settings.InvoiceSettingRenderingOptions'
      updated_at:
        type: string
    type: object
  settings.InvoiceSettingQuoteSetting:
    properties:
      created_at:
        type: string
      days_until_due:
        description: Number of days within which a customer must pay invoices generated
          by this quote. This value will be `null` for quotes where `collection_method=charge_automatically`.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  settings.InvoiceSettingRenderingOptions:
    properties:
      amount_tax_display:
        description: How line-item prices and amounts will be displayed with respect
          to tax on invoice PDFs.
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  settings.InvoiceSettingSubscriptionScheduleSetting:
    properties:
      created_at:
        type: string
      days_until_due:
        description: Number of days within which a customer must pay invoices generated
          by this subscription schedule. This value will be `null` for subscription
          schedules where `billing=charge_automatically`.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  setupIntent.Bind.request:
    properties:
      attach_to_self:
        type: boolean
      cancellation_reason:
        $ref: '#/definitions/setupIntent.CancellationReason'
      client_secret:
        type: string
      created_at:
        type: string
      customer:
        $ref: '#/definitions/uuid.NullUUID'
      description:
        type: string
      flow_directions:
        items:
          type: string
        type: array
      id:
        type: string
      last_setup_error:
        $ref: '#/definitions/errors.ApiErrors'
      livemode:
        type: boolean
      mandate:
        $ref: '#/definitions/uuid.NullUUID'
      metadata:
        $ref: '#/definitions/core.JSONB'
      next_action:
        $ref: '#/definitions/setupIntent.SetupIntentNextAction'
      object:
        type: string
      payment_method:
        $ref: '#/definitions/uuid.NullUUID'
      payment_method_types:
        items:
          type: string
        type: array
      single_use_mandate:
        $ref: '#/definitions/uuid.NullUUID'
      status:
        $ref: '#/definitions/setupIntent.Status'
      updated_at:
        type: string
      usage:
        $ref: '#/definitions/setupIntent.Usage'
    type: object
  setupIntent.CancellationReason:
    enum:
    - abandoned
    - requested_by_customer
    - duplicate
    type: string
    x-enum-varnames:
    - CancellationReasonAbandoned
    - CancellationReasonRequestedByCustomer
    - CancellationReasonDuplicate
  setupIntent.MicrodepositType:
    enum:
    - descriptor_code
    - amounts
    type: string
    x-enum-varnames:
    - MicrodepositTypeDescriptorCode
    - MicrodepositTypeAmounts
  setupIntent.SetupIntent:
    properties:
      attach_to_self:
        type: boolean
      cancellation_reason:
        $ref: '#/definitions/setupIntent.CancellationReason'
      client_secret:
        type: string
      created_at:
        type: string
      customer:
        $ref: '#/definitions/customer.Customer'
      description:
        type: string
      flow_directions:
        items:
          type: string
        type: array
      id:
        type: string
      last_setup_error:
        $ref: '#/definitions/errors.ApiErrors'
      livemode:
        type: boolean
      mandate:
        $ref: '#/definitions/mandate.Mandate'
      metadata:
        $ref: '#/definitions/core.JSONB'
      next_action:
        $ref: '#/definitions/setupIntent.SetupIntentNextAction'
      object:
        type: string
      payment_method:
        $ref: '#/definitions/method.PaymentMethod'
      payment_method_types:
        items:
          type: string
        type: array
      single_use_mandate:
        $ref: '#/definitions/mandate.Mandate'
      status:
        $ref: '#/definitions/setupIntent.Status'
      updated_at:
        type: string
      usage:
        $ref: '#/definitions/setupIntent.Usage'
    type: object
  setupIntent.SetupIntentNextAction:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      redirect_to_url_return_url:
        type: string
      redirect_to_url_url:
        type: string
      type:
        $ref: '#/definitions/setupIntent.Type'
      updated_at:
        type: string
      use_stripe_sdk:
        $ref: '#/definitions/core.JSONB'
      verify_with_microdeposits:
        $ref: '#/definitions/setupIntent.SetupIntentNextActionVerifyWithMicrodeposits'
    type: object
  setupIntent.SetupIntentNextActionVerifyWithMicrodeposits:
    properties:
      arrival_date:
        type: integer
      created_at:
        type: string
      hosted_verification_url:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      microdeposit_type:
        $ref: '#/definitions/setupIntent.MicrodepositType'
      object:
        type: string
      updated_at:
        type: string
    type: object
  setupIntent.Status:
    enum:
    - requires_payment_method
    - requires_confirmation
    - requires_action
    - processing
    - succeeded
    - failed
    - abandoned
    type: string
    x-enum-varnames:
    - StatusRequiresPaymentMethod
    - StatusRequiresConfirmation
    - StatusRequiresAction
    - StatusProcessing
    - StatusSucceeded
    - StatusFailed
    - StatusAbandoned
  setupIntent.Type:
    enum:
    - redirect_to_url
    - use_stripe_sdk
    - alipay_handle_redirect
    - oxxo_display_details
    - verify_with_microdeposits
    type: string
    x-enum-varnames:
    - TypeRedirectToUrl
    - TypeUseStripeSdk
    - TypeAlipayHandleRedirect
    - TypeOxxoDisplayDetails
    - TypeVerifyWithMicrodeposits
  setupIntent.Usage:
    enum:
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - UsageOffSession
    - UsageOnSession
  source.Bind.request:
    properties:
      ach_credit_transfer:
        $ref: '#/definitions/types.SourceTypeAchCreditTransfer'
      ach_debit:
        $ref: '#/definitions/types.SourceTypeAchDebit'
      acss_debit:
        $ref: '#/definitions/types.SourceTypeAcssDebit'
      alipay:
        $ref: '#/definitions/types.SourceTypeAlipay'
      amount:
        type: integer
      au_becs_debit:
        $ref: '#/definitions/types.SourceTypeAuBecsDebit'
      bancontact:
        $ref: '#/definitions/types.SourceTypeBancontact'
      card:
        $ref: '#/definitions/types.SourceTypeCard'
      card_present:
        $ref: '#/definitions/types.SourceTypeCardPresent'
      client_secret:
        type: string
      code_verification:
        $ref: '#/definitions/source.SourceCodeVerificationFlow'
      created_at:
        type: string
      currency:
        type: string
      customer:
        $ref: '#/definitions/uuid.NullUUID'
      eps:
        $ref: '#/definitions/types.SourceTypeEps'
      flow:
        $ref: '#/definitions/source.Flow'
      giropay:
        $ref: '#/definitions/types.SourceTypeGiropay'
      id:
        type: string
      ideal:
        $ref: '#/definitions/types.SourceTypeIdeal'
      klarna:
        $ref: '#/definitions/types.SourceTypeKlarna'
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      multibanco:
        $ref: '#/definitions/types.SourceTypeMultibanco'
      object:
        type: string
      owner:
        $ref: '#/definitions/source.SourceOwner'
      p24:
        $ref: '#/definitions/types.SourceTypeP24'
      receiver:
        $ref: '#/definitions/source.SourceReceiverFlow'
      redirect:
        $ref: '#/definitions/source.SourceRedirectFlow'
      sepa_debit:
        $ref: '#/definitions/types.SourceTypeSepaDebit'
      sofort:
        $ref: '#/definitions/types.SourceTypeSofort'
      source_order:
        $ref: '#/definitions/source.SourceOrder'
      statement_descriptor:
        type: string
      status:
        $ref: '#/definitions/source.Status'
      three_d_secure:
        $ref: '#/definitions/types.SourceTypeThreeDSecure'
      type:
        $ref: '#/definitions/source.Type'
      updated_at:
        type: string
      usage:
        $ref: '#/definitions/source.Usage'
      wechat:
        $ref: '#/definitions/types.SourceTypeWechat'
    type: object
  source.CodeStatus:
    enum:
    - pending
    - attempts_remaining
    - succeeded
    - 'failed '
    type: string
    x-enum-varnames:
    - CodeStatusPending
    - CodeStatusAttemptsRemaining
    - CodeStatusSucceeded
    - CodeStatusFailed
  source.Flow:
    enum:
    - redirect
    - receiver
    - code_verification
    - none
    type: string
    x-enum-varnames:
    - FlowRedirect
    - FlowReceiver
    - FlowCodeVerification
    - FlowNone
  source.RefundAttributesMethod:
    enum:
    - email
    - manual
    - none
    type: string
    x-enum-varnames:
    - RefundAttributesMethodEmail
    - RefundAttributesMethodManual
    - RefundAttributesMethodNone
  source.RefundAttributesStatus:
    enum:
    - missing
    - requested
    - available
    type: string
    x-enum-varnames:
    - RefundAttributesStatusMissing
    - RefundAttributesStatusRequested
    - RefundAttributesStatusAvailable
  source.Source:
    properties:
      ach_credit_transfer:
        $ref: '#/definitions/types.SourceTypeAchCreditTransfer'
      ach_debit:
        $ref: '#/definitions/types.SourceTypeAchDebit'
      acss_debit:
        $ref: '#/definitions/types.SourceTypeAcssDebit'
      alipay:
        $ref: '#/definitions/types.SourceTypeAlipay'
      amount:
        type: integer
      au_becs_debit:
        $ref: '#/definitions/types.SourceTypeAuBecsDebit'
      bancontact:
        $ref: '#/definitions/types.SourceTypeBancontact'
      card:
        $ref: '#/definitions/types.SourceTypeCard'
      card_present:
        $ref: '#/definitions/types.SourceTypeCardPresent'
      client_secret:
        type: string
      code_verification:
        $ref: '#/definitions/source.SourceCodeVerificationFlow'
      created_at:
        type: string
      currency:
        type: string
      customer:
        $ref: '#/definitions/customer.Customer'
      eps:
        $ref: '#/definitions/types.SourceTypeEps'
      flow:
        $ref: '#/definitions/source.Flow'
      giropay:
        $ref: '#/definitions/types.SourceTypeGiropay'
      id:
        type: string
      ideal:
        $ref: '#/definitions/types.SourceTypeIdeal'
      klarna:
        $ref: '#/definitions/types.SourceTypeKlarna'
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      multibanco:
        $ref: '#/definitions/types.SourceTypeMultibanco'
      object:
        type: string
      owner:
        $ref: '#/definitions/source.SourceOwner'
      p24:
        $ref: '#/definitions/types.SourceTypeP24'
      receiver:
        $ref: '#/definitions/source.SourceReceiverFlow'
      redirect:
        $ref: '#/definitions/source.SourceRedirectFlow'
      sepa_debit:
        $ref: '#/definitions/types.SourceTypeSepaDebit'
      sofort:
        $ref: '#/definitions/types.SourceTypeSofort'
      source_order:
        $ref: '#/definitions/source.SourceOrder'
      statement_descriptor:
        type: string
      status:
        $ref: '#/definitions/source.Status'
      three_d_secure:
        $ref: '#/definitions/types.SourceTypeThreeDSecure'
      type:
        $ref: '#/definitions/source.Type'
      updated_at:
        type: string
      usage:
        $ref: '#/definitions/source.Usage'
      wechat:
        $ref: '#/definitions/types.SourceTypeWechat'
    type: object
  source.SourceCodeVerificationFlow:
    properties:
      attempts_remaining:
        type: integer
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      status:
        $ref: '#/definitions/source.CodeStatus'
      updated_at:
        type: string
    type: object
  source.SourceOrder:
    properties:
      amount:
        type: integer
      created_at:
        type: string
      currency:
        type: string
      email:
        type: string
      id:
        type: string
      items:
        items:
          format: uuid
          type: string
        type: array
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      shipping:
        $ref: '#/definitions/address.Shipping'
      updated_at:
        type: string
    type: object
  source.SourceOwner:
    properties:
      address:
        $ref: '#/definitions/address.Address'
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      name:
        type: string
      object:
        type: string
      phone:
        type: string
      updated_at:
        type: string
      verified_address:
        $ref: '#/definitions/address.Address'
      verified_email:
        type: string
      verified_name:
        type: string
      verified_phone:
        type: string
    type: object
  source.SourceReceiverFlow:
    properties:
      address:
        type: string
      amount_charged:
        type: integer
      amount_received:
        type: integer
      amount_returned:
        type: integer
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      refund_attributes_method:
        $ref: '#/definitions/source.RefundAttributesMethod'
      refund_attributes_status:
        $ref: '#/definitions/source.RefundAttributesStatus'
      updated_at:
        type: string
    type: object
  source.SourceRedirectFlow:
    properties:
      created_at:
        type: string
      failure_reason:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      return_url:
        type: string
      status:
        type: string
      updated_at:
        type: string
      url:
        type: string
    type: object
  source.Status:
    enum:
    - canceled
    - chargeable
    - consumed
    - failed
    - pending
    type: string
    x-enum-varnames:
    - StatusCanceled
    - StatusChargeable
    - StatusConsumed
    - StatusFailed
    - StatusPending
  source.Type:
    enum:
    - ach_reusable_transfer
    - ach_debit
    - alipay
    - bancontact
    - card
    - card_present
    - eps
    - giropay
    - ideal
    - multibanco
    - klarna
    - p24
    - sepa_debit
    - sofort
    - three_d_secure
    - wechat
    type: string
    x-enum-varnames:
    - TypeAchreusableTransfer
    - TypeAchDebit
    - TypeAlipay
    - TypeBancontact
    - TypeCard
    - TypeCardPresent
    - TypeEps
    - TypeGiropay
    - TypeIdeal
    - TypeMultibanco
    - TypeKlarna
    - TypeP24
    - TypeSepaDebit
    - TypeSofort
    - TypeThreeDSecure
    - TypeWechat
  source.Usage:
    enum:
    - reusable
    - single_use
    type: string
    x-enum-varnames:
    - UsageReusable
    - UsageSingleUse
  subscription.Bind.request:
    properties:
      automatic_tax:
        type: boolean
      billing_cycle_anchor:
        description: Determines the date of the first full invoice, and, for plans
          with `month` or `year` intervals, the day of the month for subsequent invoices.
          The timestamp is in UTC format.
        type: integer
      billing_thresholds:
        $ref: '#/definitions/subscription.SubscriptionBillingThresholds'
      cancel_at:
        description: A date in the future at which the subscription will automatically
          get canceled
        type: integer
      cancel_at_period_end:
        description: If the subscription has been canceled with the `at_period_end`
          flag set to `true`, `cancel_at_period_end` on the subscription will be true.
          You can use this attribute to determine whether a subscription that has
          a status of active is scheduled to be canceled at the end of the current
          period.
        type: boolean
      canceled_at:
        description: If the subscription has been canceled, the date of that cancellation.
          If the subscription was canceled with `cancel_at_period_end`, `canceled_at`
          will reflect the time of the most recent update request, not the end of
          the subscription period when the subscription is automatically moved to
          a canceled state.
        type: integer
      collection_method:
        description: Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay this subscription at the end of
          the cycle using the default source attached to the customer. When sending
          an invoice, Stripe will email your customer an invoice with payment instructions
          and mark the subscription as `active`.
        type: string
      created_at:
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      current_period_end:
        description: End of the current period that the subscription has been invoiced
          for. At the end of this period, a new invoice will be created.
        type: integer
      current_period_start:
        description: Start of the current period that the subscription has been invoiced
          for.
        type: integer
      customer:
        $ref: '#/definitions/uuid.NullUUID'
      days_until_due:
        description: Number of days a customer has to pay invoices generated by this
          subscription. This value will be `null` for subscriptions where `collection_method=charge_automatically`.
        type: integer
      default_payment_method:
        $ref: '#/definitions/uuid.NullUUID'
      default_tax_rates:
        allOf:
        - $ref: '#/definitions/tax.TaxRate'
        description: The tax rates that will apply to any subscription item that does
          not have `tax_rates` set. Invoices created will have their `default_tax_rates`
          populated from the subscription.
      description:
        description: The subscription's description, meant to be displayable to the
          customer. Use this field to optionally store an explanation of the subscription
          for rendering in Stripe surfaces.
        type: string
      discount:
        $ref: '#/definitions/discount.Discount'
      ended_at:
        description: If the subscription has ended, the date the subscription ended.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      next_pending_invoice_item_invoice:
        description: Specifies the approximate timestamp on which any pending invoice
          items will be billed according to the schedule provided at `pending_invoice_item_interval`.
        type: integer
      object:
        type: string
      pause_collection:
        $ref: '#/definitions/subscriptions.SubscriptionsResourcePauseCollection'
      payment_settings:
        $ref: '#/definitions/subscriptions.SubscriptionsResourcePaymentSettings'
      pending_invoice_item_interval:
        $ref: '#/definitions/subscription.SubscriptionPendingInvoiceItemInterval'
      pending_setup_intent:
        $ref: '#/definitions/uuid.NullUUID'
      pending_update:
        $ref: '#/definitions/subscriptions.SubscriptionsResourcePendingUpdate'
      price:
        $ref: '#/definitions/uuid.NullUUID'
      schedule:
        $ref: '#/definitions/uuid.NullUUID'
      start_date:
        description: Date when the subscription was first created. The date might
          differ from the `created` date due to backdating.
        type: integer
      status:
        description: Possible values are `incomplete`, `incomplete_expired`, `trialing`,
          `active`, `past_due`, `canceled`, or `unpaid`.   For `collection_method=charge_automatically`
          a subscription moves into `incomplete` if the initial payment attempt fails.
          A subscription in this state can only have metadata and default_source updated.
          Once the first invoice is paid, the subscription moves into an `active`
          state. If the first invoice is not paid within 23 hours, the subscription
          transitions to `incomplete_expired`. This is a terminal state, the open
          invoice will be voided and no further invoices will be generated.   A subscription
          that is currently in a trial period is `trialing` and moves to `active`
          when the trial period is over.   If subscription `collection_method=charge_automatically`
          it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid`
          (depending on your subscriptions settings) when Stripe has exhausted all
          payment retry attempts.   If subscription `collection_method=send_invoice`
          it becomes `past_due` when its invoice is not paid by the due date, and
          `canceled` or `unpaid` if it is still not paid by an additional deadline
          after that. Note that when a subscription has a status of `unpaid`, no subsequent
          invoices will be attempted (invoices will be created, but then immediately
          automatically closed). After receiving updated payment information from
          a customer, you may choose to reopen and pay their closed invoices.
        type: string
      trial_end:
        description: If the subscription has a trial, the end of that trial.
        type: integer
      trial_start:
        description: If the subscription has a trial, the beginning of that trial.
        type: integer
      updated_at:
        type: string
    type: object
  subscription.Subscription:
    properties:
      automatic_tax:
        type: boolean
      billing_cycle_anchor:
        description: Determines the date of the first full invoice, and, for plans
          with `month` or `year` intervals, the day of the month for subsequent invoices.
          The timestamp is in UTC format.
        type: integer
      billing_thresholds:
        $ref: '#/definitions/subscription.SubscriptionBillingThresholds'
      cancel_at:
        description: A date in the future at which the subscription will automatically
          get canceled
        type: integer
      cancel_at_period_end:
        description: If the subscription has been canceled with the `at_period_end`
          flag set to `true`, `cancel_at_period_end` on the subscription will be true.
          You can use this attribute to determine whether a subscription that has
          a status of active is scheduled to be canceled at the end of the current
          period.
        type: boolean
      canceled_at:
        description: If the subscription has been canceled, the date of that cancellation.
          If the subscription was canceled with `cancel_at_period_end`, `canceled_at`
          will reflect the time of the most recent update request, not the end of
          the subscription period when the subscription is automatically moved to
          a canceled state.
        type: integer
      collection_method:
        description: Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay this subscription at the end of
          the cycle using the default source attached to the customer. When sending
          an invoice, Stripe will email your customer an invoice with payment instructions
          and mark the subscription as `active`.
        type: string
      created_at:
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      current_period_end:
        description: End of the current period that the subscription has been invoiced
          for. At the end of this period, a new invoice will be created.
        type: integer
      current_period_start:
        description: Start of the current period that the subscription has been invoiced
          for.
        type: integer
      customer:
        $ref: '#/definitions/customer.Customer'
      days_until_due:
        description: Number of days a customer has to pay invoices generated by this
          subscription. This value will be `null` for subscriptions where `collection_method=charge_automatically`.
        type: integer
      default_payment_method:
        $ref: '#/definitions/method.PaymentMethod'
      default_tax_rates:
        allOf:
        - $ref: '#/definitions/tax.TaxRate'
        description: The tax rates that will apply to any subscription item that does
          not have `tax_rates` set. Invoices created will have their `default_tax_rates`
          populated from the subscription.
      description:
        description: The subscription's description, meant to be displayable to the
          customer. Use this field to optionally store an explanation of the subscription
          for rendering in Stripe surfaces.
        type: string
      discount:
        $ref: '#/definitions/discount.Discount'
      ended_at:
        description: If the subscription has ended, the date the subscription ended.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      next_pending_invoice_item_invoice:
        description: Specifies the approximate timestamp on which any pending invoice
          items will be billed according to the schedule provided at `pending_invoice_item_interval`.
        type: integer
      object:
        type: string
      pause_collection:
        $ref: '#/definitions/subscriptions.SubscriptionsResourcePauseCollection'
      payment_settings:
        $ref: '#/definitions/subscriptions.SubscriptionsResourcePaymentSettings'
      pending_invoice_item_interval:
        $ref: '#/definitions/subscription.SubscriptionPendingInvoiceItemInterval'
      pending_setup_intent:
        $ref: '#/definitions/setupIntent.SetupIntent'
      pending_update:
        $ref: '#/definitions/subscriptions.SubscriptionsResourcePendingUpdate'
      price:
        $ref: '#/definitions/price.Price'
      schedule:
        $ref: '#/definitions/subscriptionSchedule.SubscriptionSchedule'
      start_date:
        description: Date when the subscription was first created. The date might
          differ from the `created` date due to backdating.
        type: integer
      status:
        description: Possible values are `incomplete`, `incomplete_expired`, `trialing`,
          `active`, `past_due`, `canceled`, or `unpaid`.   For `collection_method=charge_automatically`
          a subscription moves into `incomplete` if the initial payment attempt fails.
          A subscription in this state can only have metadata and default_source updated.
          Once the first invoice is paid, the subscription moves into an `active`
          state. If the first invoice is not paid within 23 hours, the subscription
          transitions to `incomplete_expired`. This is a terminal state, the open
          invoice will be voided and no further invoices will be generated.   A subscription
          that is currently in a trial period is `trialing` and moves to `active`
          when the trial period is over.   If subscription `collection_method=charge_automatically`
          it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid`
          (depending on your subscriptions settings) when Stripe has exhausted all
          payment retry attempts.   If subscription `collection_method=send_invoice`
          it becomes `past_due` when its invoice is not paid by the due date, and
          `canceled` or `unpaid` if it is still not paid by an additional deadline
          after that. Note that when a subscription has a status of `unpaid`, no subsequent
          invoices will be attempted (invoices will be created, but then immediately
          automatically closed). After receiving updated payment information from
          a customer, you may choose to reopen and pay their closed invoices.
        type: string
      trial_end:
        description: If the subscription has a trial, the end of that trial.
        type: integer
      trial_start:
        description: If the subscription has a trial, the beginning of that trial.
        type: integer
      updated_at:
        type: string
    type: object
  subscription.SubscriptionBillingThresholds:
    properties:
      amount_gte:
        description: Monetary threshold that triggers the subscription to create an
          invoice
        type: integer
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      reset_billing_cycle_anchor:
        description: Indicates if the `billing_cycle_anchor` should be reset when
          a threshold is reached. If true, `billing_cycle_anchor` will be updated
          to the date/time the threshold was last reached; otherwise, the value will
          remain unchanged. This value may not be `true` if the subscription contains
          items with plans that have `aggregate_usage=last_ever`.
        type: boolean
      updated_at:
        type: string
      usage_gte:
        description: Usage threshold that triggers the subscription to create an invoice
        type: integer
    type: object
  subscription.SubscriptionPendingInvoiceItemInterval:
    properties:
      created_at:
        type: string
      id:
        type: string
      interval:
        description: Specifies invoicing frequency. Either `day`, `week`, `month`
          or `year`.
        type: string
      interval_count:
        description: The number of intervals between invoices. For example, `interval=month`
          and `interval_count=3` bills every 3 months. Maximum of one year interval
          allowed (1 year, 12 months, or 52 weeks).
        type: integer
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  subscriptionItem.Bind.request:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      price:
        $ref: '#/definitions/uuid.NullUUID'
      quantity:
        description: The [quantity](https://stripe.com/docs/subscriptions/quantities)
          of the plan to which the customer should be subscribed.
        type: integer
      subscription:
        $ref: '#/definitions/uuid.NullUUID'
      tax_rates:
        allOf:
        - $ref: '#/definitions/tax.TaxRate'
        description: The tax rates which apply to this `subscription_item`. When set,
          the `default_tax_rates` on the subscription do not apply to this `subscription_item`.
      updated_at:
        type: string
    type: object
  subscriptionItem.SubscriptionItem:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      price:
        $ref: '#/definitions/price.Price'
      quantity:
        description: The [quantity](https://stripe.com/docs/subscriptions/quantities)
          of the plan to which the customer should be subscribed.
        type: integer
      subscription:
        $ref: '#/definitions/subscription.Subscription'
      tax_rates:
        allOf:
        - $ref: '#/definitions/tax.TaxRate'
        description: The tax rates which apply to this `subscription_item`. When set,
          the `default_tax_rates` on the subscription do not apply to this `subscription_item`.
      updated_at:
        type: string
    type: object
  subscriptionSchedule.Bind.request:
    properties:
      canceled_at:
        description: Time at which the subscription schedule was canceled. Measured
          in seconds since the Unix epoch.
        type: integer
      completed_at:
        description: Time at which the subscription schedule was completed. Measured
          in seconds since the Unix epoch.
        type: integer
      created_at:
        type: string
      customer:
        $ref: '#/definitions/uuid.NullUUID'
      default_settings:
        $ref: '#/definitions/subscriptionSchedule.SubscriptionSchedulesResourceDefaultSettings'
      end_behavior:
        description: Behavior of the subscription schedule and underlying subscription
          when it ends. Possible values are `release` or `cancel` with the default
          being `release`. `release` will end the subscription schedule and keep the
          underlying subscription running.`cancel` will end the subscription schedule
          and cancel the underlying subscription.
        type: string
      end_date:
        description: The end of this phase of the subscription schedule.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      phases:
        allOf:
        - $ref: '#/definitions/subscriptionSchedule.SubscriptionSchedulePhaseConfiguration'
        description: Configuration for the subscription schedule's phases.
      released_at:
        description: Time at which the subscription schedule was released. Measured
          in seconds since the Unix epoch.
        type: string
      released_subscription:
        description: ID of the subscription once managed by the subscription schedule
          (if it is released).
        type: string
      start_date:
        description: The start of this phase of the subscription schedule.
        type: integer
      status:
        description: The present status of the subscription schedule. Possible values
          are `not_started`, `active`, `completed`, `released`, and `canceled`. You
          can read more about the different states in our [behavior guide](https://stripe.com/docs/billing/subscriptions/subscription-schedules).
        type: string
      updated_at:
        type: string
    type: object
  subscriptionSchedule.SubscriptionSchedule:
    properties:
      canceled_at:
        description: Time at which the subscription schedule was canceled. Measured
          in seconds since the Unix epoch.
        type: integer
      completed_at:
        description: Time at which the subscription schedule was completed. Measured
          in seconds since the Unix epoch.
        type: integer
      created_at:
        type: string
      customer:
        $ref: '#/definitions/customer.Customer'
      default_settings:
        $ref: '#/definitions/subscriptionSchedule.SubscriptionSchedulesResourceDefaultSettings'
      end_behavior:
        description: Behavior of the subscription schedule and underlying subscription
          when it ends. Possible values are `release` or `cancel` with the default
          being `release`. `release` will end the subscription schedule and keep the
          underlying subscription running.`cancel` will end the subscription schedule
          and cancel the underlying subscription.
        type: string
      end_date:
        description: The end of this phase of the subscription schedule.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      phases:
        allOf:
        - $ref: '#/definitions/subscriptionSchedule.SubscriptionSchedulePhaseConfiguration'
        description: Configuration for the subscription schedule's phases.
      released_at:
        description: Time at which the subscription schedule was released. Measured
          in seconds since the Unix epoch.
        type: string
      released_subscription:
        description: ID of the subscription once managed by the subscription schedule
          (if it is released).
        type: string
      start_date:
        description: The start of this phase of the subscription schedule.
        type: integer
      status:
        description: The present status of the subscription schedule. Possible values
          are `not_started`, `active`, `completed`, `released`, and `canceled`. You
          can read more about the different states in our [behavior guide](https://stripe.com/docs/billing/subscriptions/subscription-schedules).
        type: string
      updated_at:
        type: string
    type: object
  subscriptionSchedule.SubscriptionSchedulePhaseConfiguration:
    properties:
      add_invoice_items:
        description: A list of prices and quantities that will generate invoice items
          appended to the next invoice for this phase.
        items:
          format: uuid
          type: string
        type: array
      automatic_tax:
        type: boolean
      billing_cycle_anchor:
        description: Possible values are `phase_start` or `automatic`. If `phase_start`
          then billing cycle anchor of the subscription is set to the start of the
          phase when entering the phase. If `automatic` then the billing cycle anchor
          is automatically modified as needed when entering the phase. For more information,
          see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
        type: string
      collection_method:
        description: Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay the underlying subscription at
          the end of each billing cycle using the default source attached to the customer.
          When sending an invoice, Stripe will email your customer an invoice with
          payment instructions and mark the subscription as `active`.
        type: string
      coupon:
        $ref: '#/definitions/coupon.Coupon'
      created_at:
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      default_payment_method:
        $ref: '#/definitions/method.PaymentMethod'
      default_tax_rates:
        allOf:
        - $ref: '#/definitions/tax.TaxRate'
        description: The default tax rates to apply to the subscription during this
          phase of the subscription schedule.
      description:
        description: Subscription description, meant to be displayable to the customer.
          Use this field to optionally store an explanation of the subscription.
        type: string
      end_date:
        description: The end of this phase of the subscription schedule.
        type: integer
      id:
        type: string
      invoice_settings:
        $ref: '#/definitions/settings.InvoiceSettingSubscriptionScheduleSetting'
      items:
        description: Subscription items to configure the subscription to during this
          phase of the subscription schedule.
        items:
          format: uuid
          type: string
        type: array
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      proration_behavior:
        description: If the subscription schedule will prorate when transitioning
          to this phase. Possible values are `create_prorations` and `none`.
        type: string
      start_date:
        description: The start of this phase of the subscription schedule.
        type: integer
      trial_end:
        description: When the trial ends within the phase.
        type: integer
      updated_at:
        type: string
    type: object
  subscriptionSchedule.SubscriptionSchedulesResourceDefaultSettings:
    properties:
      automatic_tax:
        type: boolean
      billing_cycle_anchor:
        description: Possible values are `phase_start` or `automatic`. If `phase_start`
          then billing cycle anchor of the subscription is set to the start of the
          phase when entering the phase. If `automatic` then the billing cycle anchor
          is automatically modified as needed when entering the phase. For more information,
          see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
        type: string
      collection_method:
        description: Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay the underlying subscription at
          the end of each billing cycle using the default source attached to the customer.
          When sending an invoice, Stripe will email your customer an invoice with
          payment instructions and mark the subscription as `active`.
        type: string
      created_at:
        type: string
      days_until_due:
        description: Number of days within which a customer must pay invoices generated
          by this subscription schedule. This value will be `null` for subscription
          schedules where `billing=charge_automatically`.
        type: integer
      default_payment_method:
        $ref: '#/definitions/method.PaymentMethod'
      description:
        description: Subscription description, meant to be displayable to the customer.
          Use this field to optionally store an explanation of the subscription.
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  subscriptions.SubscriptionsResourcePauseCollection:
    properties:
      behavior:
        description: The payment collection behavior for this subscription while paused.
          One of `keep_as_draft`, `mark_uncollectible`, or `void`.
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      resumes_at:
        description: The time after which the subscription will resume collecting
          payments.
        type: integer
      updated_at:
        type: string
    type: object
  subscriptions.SubscriptionsResourcePaymentSettings:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      payment_method_options:
        $ref: '#/definitions/options.SubscriptionsResourcePaymentMethodOptions'
      payment_method_types:
        description: The list of payment method types to provide to every invoice
          created by the subscription. If not set, Stripe attempts to automatically
          determine the types to use by looking at the invoice’s default payment method,
          the subscription’s default payment method, the customer’s default payment
          method, and your [invoice template settings](https://dashboard.stripe.com/settings/billing/invoice).
        items:
          type: string
        type: array
      save_default_payment_method:
        description: Either `off`, or `on_subscription`. With `on_subscription` Stripe
          updates `subscription.default_payment_method` when a subscription payment
          succeeds.
        type: string
      updated_at:
        type: string
    type: object
  subscriptions.SubscriptionsResourcePendingUpdate:
    properties:
      billing_cycle_anchor:
        description: If the update is applied, determines the date of the first full
          invoice, and, for plans with `month` or `year` intervals, the day of the
          month for subsequent invoices. The timestamp is in UTC format.
        type: integer
      created_at:
        type: string
      expires_at:
        description: The point after which the changes reflected by this update will
          be discarded and no longer applied.
        type: integer
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      trial_end:
        description: Unix timestamp representing the end of the trial period the customer
          will get before being charged for the first time, if the update is applied.
        type: integer
      trial_from_plan:
        description: Indicates if a plan's `trial_period_days` should be applied to
          the subscription. Setting `trial_end` per subscription is preferred, and
          this defaults to `false`. Setting this flag to `true` together with `trial_end`
          is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials)
          to learn more.
        type: boolean
      updated_at:
        type: string
    type: object
  tax.AutomaticTax:
    properties:
      created_at:
        type: string
      enabled:
        description: Whether Stripe automatically computes tax on this invoice. Note
          that incompatible invoice items (invoice items with manually specified [tax
          rates](https://stripe.com/docs/api/tax_rates), negative amounts, or `tax_behavior=unspecified`)
          cannot be added to automatic tax invoices.
        type: boolean
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      status:
        description: The status of the most recent automated tax calculation for this
          invoice.
        type: string
      updated_at:
        type: string
    type: object
  tax.Status:
    enum:
    - pending
    - verified
    - unverified
    - unavailable
    type: string
    x-enum-varnames:
    - StatusPending
    - StatusVerified
    - StatusUnverified
    - StatusUnavailable
  tax.TaxCode:
    properties:
      created_at:
        type: string
      description:
        description: A detailed description of which types of products the tax code
          represents.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      name:
        description: A short name for the tax code.
        type: string
      object:
        type: string
      updated_at:
        type: string
    type: object
  tax.TaxId:
    properties:
      country:
        description: Two-letter ISO code representing the country of the tax ID.
        type: string
      created_at:
        type: string
      customer:
        format: uuid
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      status:
        allOf:
        - $ref: '#/definitions/tax.Status'
        description: Verification status, one of `pending`, `verified`, `unverified`,
          or `unavailable`.
      type:
        allOf:
        - $ref: '#/definitions/tax.Type'
        description: The type of the tax ID, one of `eu_vat`, `br_cnpj`, `br_cpf`,
          `eu_oss_vat`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`,
          `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`,
          `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `my_itn`,
          `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`,
          `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`,
          `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`,
          `eg_tin`, `ph_tin`, or `unknown`
      updated_at:
        type: string
      value:
        type: string
      verified_address:
        description: Verified address.
        type: string
      verified_name:
        description: Verified name.
        type: string
    type: object
  tax.TaxRate:
    properties:
      active:
        description: Defaults to `true`. When set to `false`, this tax rate cannot
          be used with new applications or Checkout Sessions, but will still work
          for subscriptions and invoices that already have it set.
        type: boolean
      amount:
        description: The amount, in %s, of the tax.
        type: integer
      country:
        description: Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: string
      created_at:
        type: string
      description:
        description: An arbitrary string attached to the tax rate for your internal
          use only. It will not be visible to your customers.
        type: string
      display_name:
        description: The display name of the tax rates as it will appear to your customer
          on their receipt email, PDF, and the hosted invoice page.
        type: string
      id:
        type: string
      inclusive:
        description: This specifies if the tax rate is inclusive or exclusive.
        type: boolean
      jurisdiction:
        description: The jurisdiction for the tax rate. You can use this label field
          for tax reporting purposes. It also appears on your customer’s invoice.
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      percentage:
        description: This represents the tax rate percent out of 100.
        type: number
      state:
        description: '[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US),
          without country prefix. For example, \"NY\" for New York, United States.'
        type: string
      tax_type:
        allOf:
        - $ref: '#/definitions/tax.TaxType'
        description: The high-level tax type, such as `vat` or `sales_tax`.
      updated_at:
        type: string
    type: object
  tax.TaxType:
    enum:
    - vat
    - sales_tax
    type: string
    x-enum-varnames:
    - TaxTypeVat
    - TaxTypeSalesTax
  tax.Type:
    enum:
    - ae_trn
    - au_abn
    - au_arn
    - bg_uic
    - br_cnpj
    - br_cpf
    - ca_bn
    - ca_gst_hst
    - ca_pst_bc
    - ca_pst_mb
    - ca_pst_sk
    - ca_qst
    - ch_vat
    - cl_tin
    - eg_tin
    - es_cif
    - eu_oss_vat
    - eu_vat
    - gb_vat
    - ge_vat
    - hk_br
    - hu_tin
    - id_npwp
    - il_vat
    - in_gst
    - is_vat
    - jp_cn
    - jp_rn
    - jp_trn
    - ke_pin
    - kr_brn
    - li_uid
    - mx_rfc
    - my_frp
    - my_itn
    - my_sst
    - no_vat
    - nz_gst
    - ph_tin
    - ru_inn
    - ru_kpp
    - sa_vat
    - sg_gst
    - sg_uen
    - si_tin
    - th_vat
    - tr_tin
    - tw_vat
    - ua_vat
    - us_ein
    - za_vat
    - unknown
    type: string
    x-enum-varnames:
    - TypeAeTrn
    - TypeAuAbn
    - TypeAuArn
    - TypeBgUic
    - TypeBrCnpj
    - TypeBrCpf
    - TypeCaBn
    - TypeCaGst_hst
    - TypeCaPst_bc
    - TypeCaPst_mb
    - TypeCaPst_sk
    - TypeCaQst
    - TypeChVat
    - TypeClTin
    - TypeEgTin
    - TypeEsCif
    - TypeEuOssVat
    - TypeEuVat
    - TypeGbVat
    - TypeGeVat
    - TypeHkBr
    - TypeHuTin
    - TypeIdNpwp
    - TypeIlVat
    - TypeInGst
    - TypeIsVat
    - TypeJpCn
    - TypeJpRn
    - TypeJpTrn
    - TypeKePin
    - TypeKrBrn
    - TypeLiUid
    - TypeMxRfc
    - TypeMyFrp
    - TypeMyItn
    - TypeMySst
    - TypeNoVat
    - TypeNzGst
    - TypePhTin
    - TypeRuInn
    - TypeRuKpp
    - TypeSaVat
    - TypeSgGst
    - TypeSgUen
    - TypeSiTin
    - TypeThVat
    - TypeTrTin
    - TypeTwVat
    - TypeUaVat
    - TypeUsEin
    - TypeZaVat
    - TypeUnknown
  types.SourceTypeAchCreditTransfer:
    properties:
      account_number:
        type: string
      bank_name:
        type: string
      created_at:
        type: string
      fingerprint:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      refund_account_holder_name:
        type: string
      refund_account_holder_type:
        type: string
      refund_routing_number:
        type: string
      routing_number:
        type: string
      swift_code:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeAchDebit:
    properties:
      bank_name:
        type: string
      country:
        type: string
      created_at:
        type: string
      fingerprint:
        type: string
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      routing_number:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeAcssDebit:
    properties:
      bank_address_city:
        type: string
      bank_address_line_1:
        type: string
      bank_address_line_2:
        type: string
      bank_address_postal_code:
        type: string
      bank_name:
        type: string
      category:
        type: string
      country:
        type: string
      created_at:
        type: string
      fingerprint:
        type: string
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      routing_number:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeAlipay:
    properties:
      created_at:
        type: string
      data_string:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      native_url:
        type: string
      object:
        type: string
      statement_descriptor:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeAuBecsDebit:
    properties:
      bsb_number:
        type: string
      created_at:
        type: string
      fingerprint:
        type: string
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeBancontact:
    properties:
      bank_code:
        type: string
      bank_name:
        type: string
      bic:
        type: string
      created_at:
        type: string
      iban_last4:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      preferred_language:
        type: string
      statement_descriptor:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeCard:
    properties:
      address_line1_check:
        type: string
      address_zip_check:
        type: string
      brand:
        type: string
      country:
        type: string
      created_at:
        type: string
      cvc_check:
        type: string
      dynamic_last4:
        type: string
      exp_month:
        type: integer
      exp_year:
        type: integer
      fingerprint:
        type: string
      funding:
        type: string
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      name:
        type: string
      object:
        type: string
      three_d_secure:
        type: string
      tokenization_method:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeCardPresent:
    properties:
      application_cryptogram:
        type: string
      application_preferred_name:
        type: string
      authorization_code:
        type: string
      authorization_response_code:
        type: string
      brand:
        type: string
      country:
        type: string
      created_at:
        type: string
      cvm_type:
        type: string
      data_type:
        type: string
      dedicated_file_name:
        type: string
      emv_auth_data:
        type: string
      evidence_customer_signature:
        type: string
      evidence_transaction_certificate:
        type: string
      exp_month:
        type: integer
      exp_year:
        type: integer
      fingerprint:
        type: string
      funding:
        type: string
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      pos_device_id:
        type: string
      pos_entry_mode:
        type: string
      read_method:
        type: string
      reader:
        type: string
      terminal_verification_results:
        type: string
      transaction_status_information:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeEps:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      reference:
        type: string
      statement_descriptor:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeGiropay:
    properties:
      bank_code:
        type: string
      bank_name:
        type: string
      bic:
        type: string
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      statement_descriptor:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeIdeal:
    properties:
      bank:
        type: string
      bic:
        type: string
      created_at:
        type: string
      iban_last4:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      statement_descriptor:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeKlarna:
    properties:
      background_image_url:
        type: string
      client_token:
        type: string
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      livemode:
        type: boolean
      locale:
        type: string
      logo_url:
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      page_title:
        type: string
      pay_later_asset_urls_descriptive:
        type: string
      pay_later_asset_urls_standard:
        type: string
      pay_later_name:
        type: string
      pay_later_redirect_url:
        type: string
      pay_now_asset_urls_descriptive:
        type: string
      pay_now_asset_urls_standard:
        type: string
      pay_now_name:
        type: string
      pay_now_redirect_url:
        type: string
      pay_over_time_asset_urls_descriptive:
        type: string
      pay_over_time_asset_urls_standard:
        type: string
      pay_over_time_name:
        type: string
      pay_over_time_redirect_url:
        type: string
      payment_method_categories:
        type: string
      purchase_country:
        type: string
      purchase_type:
        type: string
      redirect_url:
        type: string
      shipping_delay:
        type: integer
      shipping_first_name:
        type: string
      shipping_last_name:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeMultibanco:
    properties:
      created_at:
        type: string
      entity:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      reference:
        type: string
      refund_account_holder_address_city:
        type: string
      refund_account_holder_address_country:
        type: string
      refund_account_holder_address_line1:
        type: string
      refund_account_holder_address_line2:
        type: string
      refund_account_holder_address_postal_code:
        type: string
      refund_account_holder_address_state:
        type: string
      refund_account_holder_name:
        type: string
      refund_iban:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeP24:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      reference:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeSepaDebit:
    properties:
      bank_code:
        type: string
      branch_code:
        type: string
      country:
        type: string
      created_at:
        type: string
      fingerprint:
        type: string
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      mandate_reference:
        type: string
      mandate_url:
        type: string
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeSofort:
    properties:
      bank_code:
        type: string
      bank_name:
        type: string
      bic:
        type: string
      country:
        type: string
      created_at:
        type: string
      iban_last4:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      preferred_language:
        type: string
      statement_descriptor:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeThreeDSecure:
    properties:
      address_line1_check:
        type: string
      address_zip_check:
        type: string
      authenticated:
        type: boolean
      brand:
        type: string
      card:
        type: string
      country:
        type: string
      created_at:
        type: string
      customer:
        type: string
      cvc_check:
        type: string
      dynamic_last4:
        type: string
      exp_month:
        type: integer
      exp_year:
        type: integer
      fingerprint:
        type: string
      funding:
        type: string
      id:
        type: string
      last4:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      name:
        type: string
      object:
        type: string
      three_d_secure:
        type: string
      tokenization_method:
        type: string
      updated_at:
        type: string
    type: object
  types.SourceTypeWechat:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        type: string
      prepay_id:
        type: string
      qr_code_url:
        type: string
      statement_descriptor:
        type: string
      updated_at:
        type: string
    type: object
  usageRecord.UsageRecord:
    properties:
      created_at:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      metadata:
        $ref: '#/definitions/core.JSONB'
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      quantity:
        description: The usage quantity for the specified date.
        type: integer
      subscription_item:
        description: The ID of the subscription item this usage record contains data
          for.
        type: string
      timestamp:
        description: The timestamp when this usage occurred.
        type: integer
      updated_at:
        type: string
    type: object
  uuid.NullUUID:
    properties:
      uuid:
        type: string
      valid:
        description: Valid is true if UUID is not NULL
        type: boolean
    type: object
host: localhost
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Swagger Example API
  version: "2.0"
paths:
  /v1/balance/{id}:
    get:
      consumes:
      - application/json
      description: Get Balance by given ID or 404 error.
      parameters:
      - description: Balance ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/balance.Balance'
      summary: get Balance by given ID or 404 error.
      tags:
      - Balance
  /v1/balance_transactions:
    get:
      consumes:
      - application/json
      description: Get all existing BalanceTransaction.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/balance.BalanceTransaction'
            type: array
      summary: get all existing BalanceTransaction
      tags:
      - BalanceTransaction
  /v1/balance_transactions/{id}:
    get:
      consumes:
      - application/json
      description: Get BalanceTransaction by given ID or 404 error.
      parameters:
      - description: BalanceTransaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/balance.BalanceTransaction'
      summary: get BalanceTransaction by given ID or 404 error.
      tags:
      - BalanceTransaction
  /v1/charges:
    get:
      consumes:
      - application/json
      description: Get all existing Charges.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/charge.Charge'
            type: array
      summary: get all existing Charges
      tags:
      - Charge
    post:
      consumes:
      - application/json
      description: Create a new Charge.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/charge.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/charge.Charge'
      summary: create a new Charge
      tags:
      - Charge
  /v1/charges/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Charge by given ID.
      parameters:
      - description: Charge ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Charge by given ID
      tags:
      - Charge
    get:
      consumes:
      - application/json
      description: Get Charge by given ID or 404 error.
      parameters:
      - description: Charge ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/charge.Charge'
      summary: get Charge by given ID or 404 error.
      tags:
      - Charge
    post:
      consumes:
      - application/json
      description: Update Charge.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/charge.Bind.request'
      - description: Charge ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/charge.Charge'
      summary: update Charge
      tags:
      - Charge
  /v1/charges/{id}/capture:
    post:
      consumes:
      - application/json
      description: Capture Charge.
      parameters:
      - description: Charge ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/charge.Charge'
      summary: capture Charge
      tags:
      - Charge
  /v1/checkout/sessions:
    get:
      consumes:
      - application/json
      description: Get all existing CheckoutSessions.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/checkout.CheckoutSession'
            type: array
      summary: get all existing CheckoutSessions
      tags:
      - CheckoutSession
    post:
      consumes:
      - application/json
      description: Create a new CheckoutSession.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/checkout.CheckoutSession'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/checkout.CheckoutSession'
      summary: create a new CheckoutSession
      tags:
      - CheckoutSession
  /v1/checkout/sessions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete CheckoutSession by given ID.
      parameters:
      - description: CheckoutSession ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete CheckoutSession by given ID
      tags:
      - CheckoutSession
    get:
      consumes:
      - application/json
      description: Get CheckoutSession by given ID or 404 error.
      parameters:
      - description: CheckoutSession ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/checkout.CheckoutSession'
      summary: get CheckoutSession by given ID or 404 error.
      tags:
      - CheckoutSession
    post:
      consumes:
      - application/json
      description: Update CheckoutSession.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/checkout.CheckoutSession'
      - description: CheckoutSession ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/checkout.CheckoutSession'
      summary: update CheckoutSession
      tags:
      - CheckoutSession
  /v1/checkout/sessions/{id}/expire:
    post:
      consumes:
      - application/json
      description: Expire CheckoutSession.
      parameters:
      - description: CheckoutSession ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/checkout.CheckoutSession'
      summary: expire CheckoutSession
      tags:
      - CheckoutSession
  /v1/coupons:
    get:
      consumes:
      - application/json
      description: Get all existing Coupons.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/coupon.Coupon'
            type: array
      summary: get all existing Coupons
      tags:
      - Coupon
    post:
      consumes:
      - application/json
      description: Create a new Coupon.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/coupon.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/coupon.Coupon'
      summary: create a new Coupon
      tags:
      - Coupon
  /v1/coupons/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Coupon by given ID.
      parameters:
      - description: Coupon ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Coupon by given ID
      tags:
      - Coupon
    get:
      consumes:
      - application/json
      description: Get Coupon by given ID or 404 error.
      parameters:
      - description: Coupon ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/coupon.Coupon'
      summary: get Coupon by given ID or 404 error.
      tags:
      - Coupon
    post:
      consumes:
      - application/json
      description: Update Coupon.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/coupon.Bind.request'
      - description: Coupon ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/coupon.Coupon'
      summary: update Coupon
      tags:
      - Coupon
  /v1/credit_notes:
    get:
      consumes:
      - application/json
      description: Get all existing CreditNotes.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/credit.CreditNote'
            type: array
      summary: get all existing CreditNotes
      tags:
      - CreditNote
    post:
      consumes:
      - application/json
      description: Create a new CreditNote.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/credit.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/credit.CreditNote'
      summary: create a new CreditNote
      tags:
      - CreditNote
  /v1/credit_notes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete CreditNote by given ID.
      parameters:
      - description: CreditNote ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete CreditNote by given ID
      tags:
      - CreditNote
    get:
      consumes:
      - application/json
      description: Get CreditNote by given ID or 404 error.
      parameters:
      - description: CreditNote ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/credit.CreditNote'
      summary: get CreditNote by given ID or 404 error.
      tags:
      - CreditNote
    post:
      consumes:
      - application/json
      description: Update CreditNote.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/credit.Bind.request'
      - description: CreditNote ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/credit.CreditNote'
      summary: update CreditNote
      tags:
      - CreditNote
  /v1/credit_notes/{id}/lines:
    get:
      consumes:
      - application/json
      description: Get CreditNote by given ID and return his Linitems.
      parameters:
      - description: CreditNote ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/credit.CreditNote'
      summary: get CreditNote by given ID and return his Linitems.
      tags:
      - CreditNote
  /v1/credit_notes/{id}/void:
    get:
      consumes:
      - application/json
      description: Update CreditNote to status void.
      parameters:
      - description: CreditNote ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/credit.CreditNote'
      summary: update CreditNote to status void
      tags:
      - CreditNote
  /v1/customers:
    get:
      consumes:
      - application/json
      description: Get all existing Customers.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/customer.Customer'
            type: array
      summary: get all existing Customers
      tags:
      - Customer
    post:
      consumes:
      - application/json
      description: Create a new Customer.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/customer.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer.Customer'
      summary: create a new Customer
      tags:
      - Customer
  /v1/customers/{customer_id}/cash_balance:
    get:
      consumes:
      - application/json
      description: Get all existing CashBalances.
      parameters:
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/cash.CashBalance'
            type: array
      summary: get all existing CashBalances
      tags:
      - CashBalance
    post:
      consumes:
      - application/json
      description: Create a new CashBalance.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/cash.CashBalance'
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cash.CashBalance'
      summary: create a new CashBalance
      tags:
      - CashBalance
  /v1/customers/{customer_id}/cash_balance/{id}:
    delete:
      consumes:
      - application/json
      description: Delete CashBalance by given ID.
      parameters:
      - description: CashBalance ID
        in: path
        name: id
        required: true
        type: string
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete CashBalance by given ID
      tags:
      - CashBalance
    get:
      consumes:
      - application/json
      description: Get CashBalance by given ID or 404 error.
      parameters:
      - description: CashBalance ID
        in: path
        name: id
        required: true
        type: string
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cash.CashBalance'
      summary: get CashBalance by given ID or 404 error.
      tags:
      - CashBalance
    post:
      consumes:
      - application/json
      description: Update CashBalance.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/cash.CashBalance'
      - description: CashBalance ID
        in: path
        name: id
        required: true
        type: string
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cash.CashBalance'
      summary: update CashBalance
      tags:
      - CashBalance
  /v1/customers/{customer_id}/discount:
    get:
      consumes:
      - application/json
      description: Get all existing Discounts.
      parameters:
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/discount.Discount'
            type: array
      summary: get all existing Discounts
      tags:
      - Discount
    post:
      consumes:
      - application/json
      description: Create a new Discount.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/discount.Bind.request'
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/discount.Discount'
      summary: create a new Discount
      tags:
      - Discount
  /v1/customers/{customer_id}/discount/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Discount by given ID.
      parameters:
      - description: Discount ID
        in: path
        name: id
        required: true
        type: string
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Discount by given ID
      tags:
      - Discount
    get:
      consumes:
      - application/json
      description: Get Discount by given ID or 404 error.
      parameters:
      - description: Discount ID
        in: path
        name: id
        required: true
        type: string
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/discount.Discount'
      summary: get Discount by given ID or 404 error.
      tags:
      - Discount
    post:
      consumes:
      - application/json
      description: Update Discount.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/discount.Bind.request'
      - description: Discount ID
        in: path
        name: id
        required: true
        type: string
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/discount.Discount'
      summary: update Discount
      tags:
      - Discount
  /v1/customers/{customer_id}/sources:
    get:
      consumes:
      - application/json
      description: Get all existing Cards.
      parameters:
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_driver005_gateway_payment_card.Card'
            type: array
      summary: get all existing Cards
      tags:
      - Card
    post:
      consumes:
      - application/json
      description: Create a new Card.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/card.Bind.request'
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_driver005_gateway_payment_card.Card'
      summary: create a new Card
      tags:
      - Card
  /v1/customers/{customer_id}/sources/{id}:
    delete:
      consumes:
      - application/json
      description: dettaching Source from Customer by given ID.
      parameters:
      - description: Source ID
        in: path
        name: id
        required: true
        type: string
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: dettaching Source from Customer by given ID
      tags:
      - Source
    get:
      consumes:
      - application/json
      description: Get Card by given ID or 404 error.
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: string
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_driver005_gateway_payment_card.Card'
      summary: get Card by given ID or 404 error.
      tags:
      - Card
    post:
      consumes:
      - application/json
      description: Attaching Source to Customer by given ID.
      parameters:
      - description: Source ID
        in: path
        name: id
        required: true
        type: string
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: attaching Source to Customer by given ID
      tags:
      - Source
  /v1/customers/{customer_id}/sources/{id}/verify:
    post:
      consumes:
      - application/json
      description: Verify BankAccount.
      parameters:
      - description: BankAccount ID
        in: path
        name: id
        required: true
        type: string
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bank.BankAccount'
      summary: verify BankAccount
      tags:
      - BankAccount
  /v1/customers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Customer by given ID.
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Customer by given ID
      tags:
      - Customer
    get:
      consumes:
      - application/json
      description: Get Customer by given ID or 404 error.
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer.Customer'
      summary: get Customer by given ID or 404 error.
      tags:
      - Customer
    post:
      consumes:
      - application/json
      description: Update Customer.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/customer.Customer'
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer.Customer'
      summary: update Customer
      tags:
      - Customer
  /v1/customers/{id}/tax_ids:
    get:
      consumes:
      - application/json
      description: Get all existing Customers.
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/customer.Customer'
            type: array
      summary: get all existing Customers
      tags:
      - Customer
    post:
      consumes:
      - application/json
      description: Create a new Customer.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/customer.Customer'
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer.Customer'
      summary: create a new Customer
      tags:
      - Customer
  /v1/customers/{id}/tax_ids/{tax_id}:
    delete:
      consumes:
      - application/json
      description: Delete Customer by given ID.
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      - description: Tax ID
        in: path
        name: tax_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Customer by given ID
      tags:
      - Customer
    get:
      consumes:
      - application/json
      description: Get Customer by given ID or 404 error.
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      - description: Tax ID
        in: path
        name: tax_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer.Customer'
      summary: get Customer by given ID or 404 error.
      tags:
      - Customer
  /v1/disputes:
    get:
      consumes:
      - application/json
      description: Get all existing Disputes.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dispute.Dispute'
            type: array
      summary: get all existing Disputes
      tags:
      - Dispute
    post:
      consumes:
      - application/json
      description: Create a new Dispute.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/dispute.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dispute.Dispute'
      summary: create a new Dispute
      tags:
      - Dispute
  /v1/disputes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Dispute by given ID.
      parameters:
      - description: Dispute ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Dispute by given ID
      tags:
      - Dispute
    get:
      consumes:
      - application/json
      description: Get Dispute by given ID or 404 error.
      parameters:
      - description: Dispute ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dispute.Dispute'
      summary: get Dispute by given ID or 404 error.
      tags:
      - Dispute
    post:
      consumes:
      - application/json
      description: Update Dispute.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/dispute.Bind.request'
      - description: Dispute ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dispute.Dispute'
      summary: update Dispute
      tags:
      - Dispute
  /v1/disputes/{id}/close:
    post:
      consumes:
      - application/json
      description: Close Dispute.
      parameters:
      - description: Dispute ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dispute.Dispute'
      summary: close Dispute
      tags:
      - Dispute
  /v1/files:
    get:
      consumes:
      - application/json
      description: Get all existing Files.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/file.File'
            type: array
      summary: get all existing Files
      tags:
      - File
    post:
      consumes:
      - application/json
      description: Create a new File.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/file.File'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/file.File'
      summary: create a new File
      tags:
      - File
  /v1/files/{id}:
    delete:
      consumes:
      - application/json
      description: Delete File by given ID.
      parameters:
      - description: File ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete File by given ID
      tags:
      - File
    get:
      consumes:
      - application/json
      description: Get File by given ID or 404 error.
      parameters:
      - description: File ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/file.File'
      summary: get File by given ID or 404 error.
      tags:
      - File
    post:
      consumes:
      - application/json
      description: Update File.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/file.File'
      - description: File ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/file.File'
      summary: update File
      tags:
      - File
  /v1/invoiceitems:
    get:
      consumes:
      - application/json
      description: Get all existing Invoiceitems.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/invoiceItem.Invoiceitem'
            type: array
      summary: get all existing Invoiceitems
      tags:
      - Invoiceitem
    post:
      consumes:
      - application/json
      description: Create a new Invoiceitem.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/invoiceItem.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invoiceItem.Invoiceitem'
      summary: create a new Invoiceitem
      tags:
      - Invoiceitem
  /v1/invoiceitems/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Invoiceitem by given ID.
      parameters:
      - description: Invoiceitem ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Invoiceitem by given ID
      tags:
      - Invoiceitem
    get:
      consumes:
      - application/json
      description: Get Invoiceitem by given ID or 404 error.
      parameters:
      - description: Invoiceitem ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invoiceItem.Invoiceitem'
      summary: get Invoiceitem by given ID or 404 error.
      tags:
      - Invoiceitem
    post:
      consumes:
      - application/json
      description: Update Invoiceitem.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/invoiceItem.Bind.request'
      - description: Invoiceitem ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invoiceItem.Invoiceitem'
      summary: update Invoiceitem
      tags:
      - Invoiceitem
  /v1/invoices:
    get:
      consumes:
      - application/json
      description: Get all existing Invoices.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/invoice.Invoice'
            type: array
      summary: get all existing Invoices
      tags:
      - Invoice
    post:
      consumes:
      - application/json
      description: Create a new Invoice.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/invoice.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invoice.Invoice'
      summary: create a new Invoice
      tags:
      - Invoice
  /v1/invoices/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Invoice by given ID.
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Invoice by given ID
      tags:
      - Invoice
    get:
      consumes:
      - application/json
      description: Get Invoice by given ID or 404 error.
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invoice.Invoice'
      summary: get Invoice by given ID or 404 error.
      tags:
      - Invoice
    post:
      consumes:
      - application/json
      description: Update Invoice.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/invoice.Bind.request'
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invoice.Invoice'
      summary: update Invoice
      tags:
      - Invoice
  /v1/invoices/{id}/cancel:
    post:
      consumes:
      - application/json
      description: Cancel Invoice.
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invoice.Invoice'
      summary: cancel Invoice
      tags:
      - Invoice
  /v1/invoices/{id}/capture:
    post:
      consumes:
      - application/json
      description: Capture Invoice.
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invoice.Invoice'
      summary: capture Invoice
      tags:
      - Invoice
  /v1/invoices/{id}/finalize:
    post:
      consumes:
      - application/json
      description: Finalize Invoice.
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invoice.Invoice'
      summary: finalize Invoice
      tags:
      - Invoice
  /v1/invoices/{id}/mark_uncollectible:
    post:
      consumes:
      - application/json
      description: Mark Invoice as uncollectible.
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invoice.Invoice'
      summary: mark Invoice as uncollectible
      tags:
      - Invoice
  /v1/invoices/{id}/pay:
    post:
      consumes:
      - application/json
      description: Pay Invoice.
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invoice.Invoice'
      summary: pay Invoice
      tags:
      - Invoice
  /v1/invoices/{id}/send:
    post:
      consumes:
      - application/json
      description: Send Invoice.
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invoice.Invoice'
      summary: send Invoice
      tags:
      - Invoice
  /v1/invoices/{id}/upcoming:
    post:
      consumes:
      - application/json
      description: Upcoming Invoice.
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invoice.Invoice'
      summary: upcoming Invoice
      tags:
      - Invoice
  /v1/invoices/{id}/void:
    post:
      consumes:
      - application/json
      description: Void Invoice.
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invoice.Invoice'
      summary: void Invoice
      tags:
      - Invoice
  /v1/lineItem:
    get:
      consumes:
      - application/json
      description: Get all existing LineItems.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/item.LineItem'
            type: array
      summary: get all existing LineItems
      tags:
      - LineItem
    post:
      consumes:
      - application/json
      description: Create a new LineItem.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/item.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.LineItem'
      summary: create a new LineItem
      tags:
      - LineItem
  /v1/lineItem/{id}:
    delete:
      consumes:
      - application/json
      description: Delete LineItem by given ID.
      parameters:
      - description: LineItem ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete LineItem by given ID
      tags:
      - LineItem
    get:
      consumes:
      - application/json
      description: Get LineItem by given ID or 404 error.
      parameters:
      - description: LineItem ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.LineItem'
      summary: get LineItem by given ID or 404 error.
      tags:
      - LineItem
    post:
      consumes:
      - application/json
      description: Update LineItem.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/item.Bind.request'
      - description: LineItem ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.LineItem'
      summary: update LineItem
      tags:
      - LineItem
  /v1/mandates:
    get:
      consumes:
      - application/json
      description: Get all existing Mandates.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/mandate.Mandate'
            type: array
      summary: get all existing Mandates
      tags:
      - Mandate
    post:
      consumes:
      - application/json
      description: Create a new Mandate.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/mandate.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/mandate.Mandate'
      summary: create a new Mandate
      tags:
      - Mandate
  /v1/mandates/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Mandate by given ID.
      parameters:
      - description: Mandate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Mandate by given ID
      tags:
      - Mandate
    get:
      consumes:
      - application/json
      description: Get Mandate by given ID or 404 error.
      parameters:
      - description: Mandate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/mandate.Mandate'
      summary: get Mandate by given ID or 404 error.
      tags:
      - Mandate
    post:
      consumes:
      - application/json
      description: Update Mandate.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/mandate.Bind.request'
      - description: Mandate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/mandate.Mandate'
      summary: update Mandate
      tags:
      - Mandate
  /v1/payment_intents:
    get:
      consumes:
      - application/json
      description: Get all existing PaymentIntents.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/intent.PaymentIntent'
            type: array
      summary: get all existing PaymentIntents
      tags:
      - PaymentIntent
    post:
      consumes:
      - application/json
      description: Create a new PaymentIntent.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/intent.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/intent.PaymentIntent'
      summary: create a new PaymentIntent
      tags:
      - PaymentIntent
  /v1/payment_intents/{id}:
    delete:
      consumes:
      - application/json
      description: Delete PaymentIntent by given ID.
      parameters:
      - description: PaymentIntent ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete PaymentIntent by given ID
      tags:
      - PaymentIntent
    get:
      consumes:
      - application/json
      description: Get PaymentIntent by given ID or 404 error.
      parameters:
      - description: PaymentIntent ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/intent.PaymentIntent'
      summary: get PaymentIntent by given ID or 404 error.
      tags:
      - PaymentIntent
    post:
      consumes:
      - application/json
      description: Update PaymentIntent.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/intent.Bind.request'
      - description: PaymentIntent ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/intent.PaymentIntent'
      summary: update PaymentIntent
      tags:
      - PaymentIntent
  /v1/payment_intents/{id}/cancel:
    post:
      consumes:
      - application/json
      description: Cancel PaymentIntent.
      parameters:
      - description: PaymentIntent ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/intent.PaymentIntent'
      summary: cancel PaymentIntent
      tags:
      - PaymentIntent
  /v1/payment_intents/{id}/capture:
    post:
      consumes:
      - application/json
      description: Capture PaymentIntent.
      parameters:
      - description: PaymentIntent ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/intent.PaymentIntent'
      summary: capture PaymentIntent
      tags:
      - PaymentIntent
  /v1/payment_intents/{id}/confirm:
    post:
      consumes:
      - application/json
      description: Confirm PaymentIntent.
      parameters:
      - description: PaymentIntent ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/intent.PaymentIntent'
      summary: confirm PaymentIntent
      tags:
      - PaymentIntent
  /v1/payment_links:
    get:
      consumes:
      - application/json
      description: Get all existing PaymentLinks.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/link.PaymentLink'
            type: array
      summary: get all existing PaymentLinks
      tags:
      - PaymentLink
    post:
      consumes:
      - application/json
      description: Create a new PaymentLink.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/link.PaymentLink'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/link.PaymentLink'
      summary: create a new PaymentLink
      tags:
      - PaymentLink
  /v1/payment_links/{id}:
    delete:
      consumes:
      - application/json
      description: Delete PaymentLink by given ID.
      parameters:
      - description: PaymentLink ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete PaymentLink by given ID
      tags:
      - PaymentLink
    get:
      consumes:
      - application/json
      description: Get PaymentLink by given ID or 404 error.
      parameters:
      - description: PaymentLink ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/link.PaymentLink'
      summary: get PaymentLink by given ID or 404 error.
      tags:
      - PaymentLink
    post:
      consumes:
      - application/json
      description: Update PaymentLink.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/link.PaymentLink'
      - description: PaymentLink ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/link.PaymentLink'
      summary: update PaymentLink
      tags:
      - PaymentLink
  /v1/payment_methods:
    get:
      consumes:
      - application/json
      description: Get all existing PaymentMethods.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/method.PaymentMethod'
            type: array
      summary: get all existing PaymentMethods
      tags:
      - PaymentMethod
    post:
      consumes:
      - application/json
      description: Create a new PaymentMethod.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/method.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/method.PaymentMethod'
      summary: create a new PaymentMethod
      tags:
      - PaymentMethod
  /v1/payment_methods/{id}:
    delete:
      consumes:
      - application/json
      description: Delete PaymentMethod by given ID.
      parameters:
      - description: PaymentMethod ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete PaymentMethod by given ID
      tags:
      - PaymentMethod
    get:
      consumes:
      - application/json
      description: Get PaymentMethod by given ID or 404 error.
      parameters:
      - description: PaymentMethod ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/method.PaymentMethod'
      summary: get PaymentMethod by given ID or 404 error.
      tags:
      - PaymentMethod
    post:
      consumes:
      - application/json
      description: Update PaymentMethod.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/method.Bind.request'
      - description: PaymentMethod ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/method.PaymentMethod'
      summary: update PaymentMethod
      tags:
      - PaymentMethod
  /v1/payment_methods/{id}/attach:
    post:
      consumes:
      - application/json
      description: Attaching PaymentMethod to Customer by given ID.
      parameters:
      - description: PaymentMethod ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: attaching PaymentMethod to Customer by given ID
      tags:
      - PaymentMethod
  /v1/payment_methods/{id}/dettach:
    post:
      consumes:
      - application/json
      description: dettaching PaymentMethod from Customer by given ID.
      parameters:
      - description: PaymentMethod ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: dettaching PaymentMethod from Customer by given ID
      tags:
      - PaymentMethod
  /v1/payouts:
    get:
      consumes:
      - application/json
      description: Get all existing Payouts.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/payout.Payout'
            type: array
      summary: get all existing Payouts
      tags:
      - Payout
    post:
      consumes:
      - application/json
      description: Create a new Payout.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/payout.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payout.Payout'
      summary: create a new Payout
      tags:
      - Payout
  /v1/payouts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Payout by given ID.
      parameters:
      - description: Payout ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Payout by given ID
      tags:
      - Payout
    get:
      consumes:
      - application/json
      description: Get Payout by given ID or 404 error.
      parameters:
      - description: Payout ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payout.Payout'
      summary: get Payout by given ID or 404 error.
      tags:
      - Payout
    post:
      consumes:
      - application/json
      description: Update Payout.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/payout.Bind.request'
      - description: Payout ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payout.Payout'
      summary: update Payout
      tags:
      - Payout
  /v1/payouts/{id}/cancele:
    post:
      consumes:
      - application/json
      description: Cancel Payout.
      parameters:
      - description: Payout ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payout.Payout'
      summary: cancel Payout
      tags:
      - Payout
  /v1/payouts/{id}/reverse:
    post:
      consumes:
      - application/json
      description: Reverse Payout.
      parameters:
      - description: Payout ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payout.Payout'
      summary: reverse Payout
      tags:
      - Payout
  /v1/plans:
    get:
      consumes:
      - application/json
      description: Get all existing Plans.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/plan.Plan'
            type: array
      summary: get all existing Plans
      tags:
      - Plan
    post:
      consumes:
      - application/json
      description: Create a new Plan.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/plan.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/plan.Plan'
      summary: create a new Plan
      tags:
      - Plan
  /v1/plans/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Plan by given ID.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Plan by given ID
      tags:
      - Plan
    get:
      consumes:
      - application/json
      description: Get Plan by given ID or 404 error.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/plan.Plan'
      summary: get Plan by given ID or 404 error.
      tags:
      - Plan
    post:
      consumes:
      - application/json
      description: Update Plan.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/plan.Bind.request'
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/plan.Plan'
      summary: update Plan
      tags:
      - Plan
  /v1/prices:
    get:
      consumes:
      - application/json
      description: Get all existing Prices.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/price.Price'
            type: array
      summary: get all existing Prices
      tags:
      - Price
    post:
      consumes:
      - application/json
      description: Create a new Price.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/price.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/price.Price'
      summary: create a new Price
      tags:
      - Price
  /v1/prices/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Price by given ID.
      parameters:
      - description: Price ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Price by given ID
      tags:
      - Price
    get:
      consumes:
      - application/json
      description: Get Price by given ID or 404 error.
      parameters:
      - description: Price ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/price.Price'
      summary: get Price by given ID or 404 error.
      tags:
      - Price
    post:
      consumes:
      - application/json
      description: Update Price.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/price.Bind.request'
      - description: Price ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/price.Price'
      summary: update Price
      tags:
      - Price
  /v1/products:
    get:
      consumes:
      - application/json
      description: Get all existing Products.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/product.Product'
            type: array
      summary: get all existing Products
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Create a new Product.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/product.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.Product'
      summary: create a new Product
      tags:
      - Product
  /v1/products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Product by given ID.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Product by given ID
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: Get Product by given ID or 404 error.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.Product'
      summary: get Product by given ID or 404 error.
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Update Product.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/product.Bind.request'
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.Product'
      summary: update Product
      tags:
      - Product
  /v1/promotion_codes:
    get:
      consumes:
      - application/json
      description: Get all existing PromotionCodes.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/promotion.PromotionCode'
            type: array
      summary: get all existing PromotionCodes
      tags:
      - PromotionCode
    post:
      consumes:
      - application/json
      description: Create a new PromotionCode.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/promotion.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/promotion.PromotionCode'
      summary: create a new PromotionCode
      tags:
      - PromotionCode
  /v1/promotion_codes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete PromotionCode by given ID.
      parameters:
      - description: PromotionCode ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete PromotionCode by given ID
      tags:
      - PromotionCode
    get:
      consumes:
      - application/json
      description: Get PromotionCode by given ID or 404 error.
      parameters:
      - description: PromotionCode ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/promotion.PromotionCode'
      summary: get PromotionCode by given ID or 404 error.
      tags:
      - PromotionCode
    post:
      consumes:
      - application/json
      description: Update PromotionCode.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/promotion.Bind.request'
      - description: PromotionCode ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/promotion.PromotionCode'
      summary: update PromotionCode
      tags:
      - PromotionCode
  /v1/quotes:
    get:
      consumes:
      - application/json
      description: Get all existing Quotes.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/quote.Quote'
            type: array
      summary: get all existing Quotes
      tags:
      - Quote
    post:
      consumes:
      - application/json
      description: Create a new Quote.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/quote.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/quote.Quote'
      summary: create a new Quote
      tags:
      - Quote
  /v1/quotes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Quote by given ID.
      parameters:
      - description: Quote ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Quote by given ID
      tags:
      - Quote
    get:
      consumes:
      - application/json
      description: Get Quote by given ID or 404 error.
      parameters:
      - description: Quote ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/quote.Quote'
      summary: get Quote by given ID or 404 error.
      tags:
      - Quote
    post:
      consumes:
      - application/json
      description: Update Quote.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/quote.Bind.request'
      - description: Quote ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/quote.Quote'
      summary: update Quote
      tags:
      - Quote
  /v1/quotes/{id}/accept:
    post:
      consumes:
      - application/json
      description: Accept Quote.
      parameters:
      - description: Quote ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/quote.Quote'
      summary: accept Quote
      tags:
      - Quote
  /v1/quotes/{id}/cancel:
    post:
      consumes:
      - application/json
      description: Cancel Quote.
      parameters:
      - description: Quote ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/quote.Quote'
      summary: cancel Quote
      tags:
      - Quote
  /v1/quotes/{id}/finalize:
    post:
      consumes:
      - application/json
      description: Finalize Quote.
      parameters:
      - description: Quote ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/quote.Quote'
      summary: finalize Quote
      tags:
      - Quote
  /v1/refunds:
    get:
      consumes:
      - application/json
      description: Get all existing Refunds.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/refund.Refund'
            type: array
      summary: get all existing Refunds
      tags:
      - Refund
    post:
      consumes:
      - application/json
      description: Create a new Refund.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/refund.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/refund.Refund'
      summary: create a new Refund
      tags:
      - Refund
  /v1/refunds/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Refund by given ID.
      parameters:
      - description: Refund ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Refund by given ID
      tags:
      - Refund
    get:
      consumes:
      - application/json
      description: Get Refund by given ID or 404 error.
      parameters:
      - description: Refund ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/refund.Refund'
      summary: get Refund by given ID or 404 error.
      tags:
      - Refund
    post:
      consumes:
      - application/json
      description: Update Refund.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/refund.Bind.request'
      - description: Refund ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/refund.Refund'
      summary: update Refund
      tags:
      - Refund
  /v1/refunds/{id}/cancele:
    post:
      consumes:
      - application/json
      description: Cancel Refund.
      parameters:
      - description: Refund ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/refund.Refund'
      summary: cancel Refund
      tags:
      - Refund
  /v1/setup_attempts:
    get:
      consumes:
      - application/json
      description: Get all existing SetupAttempts.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/attempt.SetupAttempt'
            type: array
      summary: get all existing SetupAttempts
      tags:
      - SetupAttempt
    post:
      consumes:
      - application/json
      description: Create a new SetupAttempt.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/attempt.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/attempt.SetupAttempt'
      summary: create a new SetupAttempt
      tags:
      - SetupAttempt
  /v1/setup_attempts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete SetupAttempt by given ID.
      parameters:
      - description: SetupAttempt ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete SetupAttempt by given ID
      tags:
      - SetupAttempt
    get:
      consumes:
      - application/json
      description: Get SetupAttempt by given ID or 404 error.
      parameters:
      - description: SetupAttempt ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/attempt.SetupAttempt'
      summary: get SetupAttempt by given ID or 404 error.
      tags:
      - SetupAttempt
    post:
      consumes:
      - application/json
      description: Update SetupAttempt.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/attempt.Bind.request'
      - description: SetupAttempt ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/attempt.SetupAttempt'
      summary: update SetupAttempt
      tags:
      - SetupAttempt
  /v1/setup_intents:
    get:
      consumes:
      - application/json
      description: Get all existing SetupIntents.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/setupIntent.SetupIntent'
            type: array
      summary: get all existing SetupIntents
      tags:
      - SetupIntent
    post:
      consumes:
      - application/json
      description: Create a new SetupIntent.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/setupIntent.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/setupIntent.SetupIntent'
      summary: create a new SetupIntent
      tags:
      - SetupIntent
  /v1/setup_intents/{id}:
    delete:
      consumes:
      - application/json
      description: Delete SetupIntent by given ID.
      parameters:
      - description: SetupIntent ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete SetupIntent by given ID
      tags:
      - SetupIntent
    get:
      consumes:
      - application/json
      description: Get SetupIntent by given ID or 404 error.
      parameters:
      - description: SetupIntent ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/setupIntent.SetupIntent'
      summary: get SetupIntent by given ID or 404 error.
      tags:
      - SetupIntent
    post:
      consumes:
      - application/json
      description: Update SetupIntent.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/setupIntent.Bind.request'
      - description: SetupIntent ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/setupIntent.SetupIntent'
      summary: update SetupIntent
      tags:
      - SetupIntent
  /v1/setup_intents/{id}/cancele:
    post:
      consumes:
      - application/json
      description: Cancel SetupIntent.
      parameters:
      - description: SetupIntent ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/setupIntent.SetupIntent'
      summary: cancel SetupIntent
      tags:
      - SetupIntent
  /v1/setup_intents/{id}/confirm:
    post:
      consumes:
      - application/json
      description: Confirm SetupIntent.
      parameters:
      - description: SetupIntent ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/setupIntent.SetupIntent'
      summary: confirm SetupIntent
      tags:
      - SetupIntent
  /v1/sources:
    get:
      consumes:
      - application/json
      description: Get all existing Sources.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/source.Source'
            type: array
      summary: get all existing Sources
      tags:
      - Source
    post:
      consumes:
      - application/json
      description: Create a new Source.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/source.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/source.Source'
      summary: create a new Source
      tags:
      - Source
  /v1/sources/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Source by given ID.
      parameters:
      - description: Source ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Source by given ID
      tags:
      - Source
    get:
      consumes:
      - application/json
      description: Get Source by given ID or 404 error.
      parameters:
      - description: Source ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/source.Source'
      summary: get Source by given ID or 404 error.
      tags:
      - Source
    post:
      consumes:
      - application/json
      description: Update Source.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/source.Bind.request'
      - description: Source ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/source.Source'
      summary: update Source
      tags:
      - Source
  /v1/subscription_items:
    get:
      consumes:
      - application/json
      description: Get all existing SubscriptionItems.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/subscriptionItem.SubscriptionItem'
            type: array
      summary: get all existing SubscriptionItems
      tags:
      - SubscriptionItem
    post:
      consumes:
      - application/json
      description: Create a new SubscriptionItem.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/subscriptionItem.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subscriptionItem.SubscriptionItem'
      summary: create a new SubscriptionItem
      tags:
      - SubscriptionItem
  /v1/subscription_items/{id}:
    delete:
      consumes:
      - application/json
      description: Delete SubscriptionItem by given ID.
      parameters:
      - description: SubscriptionItem ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete SubscriptionItem by given ID
      tags:
      - SubscriptionItem
    get:
      consumes:
      - application/json
      description: Get SubscriptionItem by given ID or 404 error.
      parameters:
      - description: SubscriptionItem ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subscriptionItem.SubscriptionItem'
      summary: get SubscriptionItem by given ID or 404 error.
      tags:
      - SubscriptionItem
    post:
      consumes:
      - application/json
      description: Update SubscriptionItem.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/subscriptionItem.Bind.request'
      - description: SubscriptionItem ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subscriptionItem.SubscriptionItem'
      summary: update SubscriptionItem
      tags:
      - SubscriptionItem
  /v1/subscription_items/{id}/usage_record_summaries:
    get:
      consumes:
      - application/json
      description: Get all existing UsageRecords.
      parameters:
      - description: SubscriptionItem ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/usageRecord.UsageRecord'
            type: array
      summary: get all existing UsageRecords
      tags:
      - UsageRecord
  /v1/subscription_items/{id}/usage_records:
    get:
      consumes:
      - application/json
      description: Get UsageRecord by given ID or 404 error.
      parameters:
      - description: SubscriptionItem ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usageRecord.UsageRecord'
      summary: get UsageRecord by given ID or 404 error.
      tags:
      - UsageRecord
  /v1/subscription_schedules:
    get:
      consumes:
      - application/json
      description: Get all existing SubscriptionSchedules.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/subscriptionSchedule.SubscriptionSchedule'
            type: array
      summary: get all existing SubscriptionSchedules
      tags:
      - SubscriptionSchedule
    post:
      consumes:
      - application/json
      description: Create a new SubscriptionSchedule.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/subscriptionSchedule.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subscriptionSchedule.SubscriptionSchedule'
      summary: create a new SubscriptionSchedule
      tags:
      - SubscriptionSchedule
  /v1/subscription_schedules/{id}:
    delete:
      consumes:
      - application/json
      description: Delete SubscriptionSchedule by given ID.
      parameters:
      - description: SubscriptionSchedule ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete SubscriptionSchedule by given ID
      tags:
      - SubscriptionSchedule
    get:
      consumes:
      - application/json
      description: Get SubscriptionSchedule by given ID or 404 error.
      parameters:
      - description: SubscriptionSchedule ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subscriptionSchedule.SubscriptionSchedule'
      summary: get SubscriptionSchedule by given ID or 404 error.
      tags:
      - SubscriptionSchedule
    post:
      consumes:
      - application/json
      description: Update SubscriptionSchedule.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/subscriptionSchedule.Bind.request'
      - description: SubscriptionSchedule ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subscriptionSchedule.SubscriptionSchedule'
      summary: update SubscriptionSchedule
      tags:
      - SubscriptionSchedule
  /v1/subscription_schedules/{id}/cancele:
    post:
      consumes:
      - application/json
      description: Cancel SubscriptionSchedule.
      parameters:
      - description: SubscriptionSchedule ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subscriptionSchedule.SubscriptionSchedule'
      summary: cancel SubscriptionSchedule
      tags:
      - SubscriptionSchedule
  /v1/subscription_schedules/{id}/release:
    post:
      consumes:
      - application/json
      description: Release SubscriptionSchedule.
      parameters:
      - description: SubscriptionSchedule ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subscriptionSchedule.SubscriptionSchedule'
      summary: release SubscriptionSchedule
      tags:
      - SubscriptionSchedule
  /v1/subscriptions:
    get:
      consumes:
      - application/json
      description: Get all existing Subscriptions.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/subscription.Subscription'
            type: array
      summary: get all existing Subscriptions
      tags:
      - Subscription
    post:
      consumes:
      - application/json
      description: Create a new Subscription.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/subscription.Bind.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subscription.Subscription'
      summary: create a new Subscription
      tags:
      - Subscription
  /v1/subscriptions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Subscription by given ID.
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete Subscription by given ID
      tags:
      - Subscription
    get:
      consumes:
      - application/json
      description: Get Subscription by given ID or 404 error.
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subscription.Subscription'
      summary: get Subscription by given ID or 404 error.
      tags:
      - Subscription
    post:
      consumes:
      - application/json
      description: Update Subscription.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/subscription.Bind.request'
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subscription.Subscription'
      summary: update Subscription
      tags:
      - Subscription
  /v1/usage_record:
    post:
      consumes:
      - application/json
      description: Create a new UsageRecord.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/usageRecord.UsageRecord'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usageRecord.UsageRecord'
      summary: create a new UsageRecord
      tags:
      - UsageRecord
  /v1/usage_record/{id}:
    delete:
      consumes:
      - application/json
      description: Delete UsageRecord by given ID.
      parameters:
      - description: UsageRecord ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      summary: delete UsageRecord by given ID
      tags:
      - UsageRecord
    post:
      consumes:
      - application/json
      description: Update UsageRecord.
      parameters:
      - description: Request Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/usageRecord.UsageRecord'
      - description: SubscriptionItem ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usageRecord.UsageRecord'
      summary: update UsageRecord
      tags:
      - UsageRecord
schemes:
- http
swagger: "2.0"
