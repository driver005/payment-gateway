package subscriptionSchedule

import (
	"github.com/driver005/gateway/billing/invoice/settings"
	"github.com/driver005/gateway/billing/subscriptionItem"
	"github.com/driver005/gateway/core"
	"github.com/driver005/gateway/internal/customer"
	"github.com/driver005/gateway/models"
	"github.com/driver005/gateway/payment/method"
)

// SubscriptionSchedulesResourceDefaultSettingsAutomaticTax
type SubscriptionSchedulesResourceDefaultSettingsAutomaticTax struct {
	// Whether Stripe automatically computes tax on invoices created during this phase.
	Enabled bool `json:"enabled"`
}

type InvoiceSettingSubscriptionScheduleSetting struct {
	// Number of days within which a customer must pay invoices generated by this subscription schedule. This value will be `null` for subscription schedules where `billing=charge_automatically`.
	DaysUntilDue int `json:"days_until_due,omitempty"`
}

// SubscriptionSchedulesResourceDefaultSettings
type SubscriptionSchedulesResourceDefaultSettings struct {
	// A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account during this phase of the schedule.
	ApplicationFeePercent float64 `json:"application_fee_percent,omitempty"`
	AutomaticTax *SubscriptionSchedulesResourceDefaultSettingsAutomaticTax `json:"automatic_tax,omitempty"`
	// Possible values are `phase_start` or `automatic`. If `phase_start` then billing cycle anchor of the subscription is set to the start of the phase when entering the phase. If `automatic` then the billing cycle anchor is automatically modified as needed when entering the phase. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
	BillingCycleAnchor string `json:"billing_cycle_anchor"`
	BillingThresholds subscriptionItem.SubscriptionItemBillingThresholds `json:"billing_thresholds,omitempty"`
	// Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay the underlying subscription at the end of each billing cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`.
	CollectionMethod string `json:"collection_method,omitempty"`
	DefaultPaymentMethod method.PaymentMethod `json:"default_payment_method,omitempty"`
	// Subscription description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription.
	Description string `json:"description,omitempty"`
	InvoiceSettings InvoiceSettingSubscriptionScheduleSetting `json:"invoice_settings,omitempty"`
}

// SubscriptionScheduleAddInvoiceItem An Add Invoice Item describes the prices and quantities that will be added as pending invoice items when entering a phase.
type SubscriptionScheduleAddInvoiceItem struct {
	// Price Price `json:"price"`
	// The quantity of the invoice item.
	Quantity int `json:"quantity,omitempty"`
	// The tax rates which apply to the item. When set, the `default_tax_rates` do not apply to this item.
	TaxRates []models.TaxRate `json:"tax_rates,omitempty"`
}

// SubscriptionScheduleConfigurationItem A phase item describes the price and quantity of a phase.
type SubscriptionScheduleConfigurationItem struct {
	BillingThresholds subscriptionItem.SubscriptionItemBillingThresholds `json:"billing_thresholds,omitempty"`
	// Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an item. Metadata on this item will update the underlying subscription item's `metadata` when the phase is entered.
	Metadata core.JSONB `json:"metadata,omitempty"`
	
	// Price Price `json:"price"`
	
	// Quantity of the plan to which the customer should be subscribed.
	Quantity *int32 `json:"quantity,omitempty"`
	// The tax rates which apply to this `phase_item`. When set, the `default_tax_rates` on the phase do not apply to this `phase_item`.
	TaxRates []models.TaxRate `json:"tax_rates,omitempty"`
}

// SubscriptionScheduleCurrentPhase
type SubscriptionScheduleCurrentPhase struct {
	// The end of this phase of the subscription schedule.
	EndDate int32 `json:"end_date"`
	// The start of this phase of the subscription schedule.
	StartDate int32 `json:"start_date"`
}

// SchedulesPhaseAutomaticTax 
type SchedulesPhaseAutomaticTax struct {
	// Whether Stripe automatically computes tax on invoices created during this phase.
	Enabled bool `json:"enabled"`
}

// SubscriptionSchedulePhaseConfiguration A phase describes the plans, coupon, and trialing status of a subscription for a predefined time period.
type SubscriptionSchedulePhaseConfiguration struct {
	// A list of prices and quantities that will generate invoice items appended to the next invoice for this phase.
	AddInvoiceItems []SubscriptionScheduleAddInvoiceItem `json:"add_invoice_items"`
	// A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account during this phase of the schedule.
	ApplicationFeePercent float64 `json:"application_fee_percent,omitempty"`
	AutomaticTax *SchedulesPhaseAutomaticTax `json:"automatic_tax,omitempty"`
	// Possible values are `phase_start` or `automatic`. If `phase_start` then billing cycle anchor of the subscription is set to the start of the phase when entering the phase. If `automatic` then the billing cycle anchor is automatically modified as needed when entering the phase. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
	BillingCycleAnchor string `json:"billing_cycle_anchor,omitempty"`
	BillingThresholds subscriptionItem.SubscriptionItemBillingThresholds `json:"billing_thresholds,omitempty"`
	// Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay the underlying subscription at the end of each billing cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`.
	CollectionMethod string `json:"collection_method,omitempty"`
	
	// Coupon Coupon `json:"coupon,omitempty"`
	
	// Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
	Currency string `json:"currency"`
	DefaultPaymentMethod method.PaymentMethod `json:"default_payment_method,omitempty"`
	// The default tax rates to apply to the subscription during this phase of the subscription schedule.
	DefaultTaxRates []models.TaxRate `json:"default_tax_rates,omitempty"`
	// Subscription description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription.
	Description string `json:"description,omitempty"`
	// The end of this phase of the subscription schedule.
	EndDate int32 `json:"end_date"`
	InvoiceSettings settings.InvoiceSettingSubscriptionScheduleSetting `json:"invoice_settings,omitempty"`
	// Subscription items to configure the subscription to during this phase of the subscription schedule.
	Items []SubscriptionScheduleConfigurationItem `json:"items"`
	// Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to a phase. Metadata on a schedule's phase will update the underlying subscription's `metadata` when the phase is entered. Updating the underlying subscription's `metadata` directly will not affect the current phase's `metadata`.
	Metadata core.JSONB `json:"metadata,omitempty"`
	// If the subscription schedule will prorate when transitioning to this phase. Possible values are `create_prorations` and `none`.
	ProrationBehavior string `json:"proration_behavior"`
	// The start of this phase of the subscription schedule.
	StartDate int32 `json:"start_date"`
	// When the trial ends within the phase.
	TrialEnd int `json:"trial_end,omitempty"`
}

// SubscriptionSchedule A subscription schedule allows you to create and manage the lifecycle of a subscription by predefining expected changes.  Related guide: [Subscription Schedules](https://stripe.com/docs/billing/subscriptions/subscription-schedules).
type SubscriptionSchedule struct {
	// Time at which the subscription schedule was canceled. Measured in seconds since the Unix epoch.
	CanceledAt int `json:"canceled_at,omitempty"`
	// Time at which the subscription schedule was completed. Measured in seconds since the Unix epoch.
	CompletedAt int `json:"completed_at,omitempty"`
	// Time at which the object was created. Measured in seconds since the Unix epoch.
	Created int32 `json:"created"`
	CurrentPhase SubscriptionScheduleCurrentPhase `json:"current_phase,omitempty"`
	Customer customer.Customer `json:"customer"`
	DefaultSettings SubscriptionSchedulesResourceDefaultSettings `json:"default_settings"`
	// Behavior of the subscription schedule and underlying subscription when it ends. Possible values are `release` or `cancel` with the default being `release`. `release` will end the subscription schedule and keep the underlying subscription running.`cancel` will end the subscription schedule and cancel the underlying subscription.
	EndBehavior string `json:"end_behavior"`
	// Unique identifier for the object.
	Id string `json:"id"`
	// Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
	Livemode bool `json:"livemode"`
	// Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
	Metadata map[string]string `json:"metadata,omitempty"`
	// String representing the object's type. Objects of the same type share the same value.
	Object string `json:"object"`
	// Configuration for the subscription schedule's phases.
	Phases []SubscriptionSchedulePhaseConfiguration `json:"phases"`
	// Time at which the subscription schedule was released. Measured in seconds since the Unix epoch.
	ReleasedAt int `json:"released_at,omitempty"`
	// ID of the subscription once managed by the subscription schedule (if it is released).
	ReleasedSubscription string `json:"released_subscription,omitempty"`
	// The present status of the subscription schedule. Possible values are `not_started`, `active`, `completed`, `released`, and `canceled`. You can read more about the different states in our [behavior guide](https://stripe.com/docs/billing/subscriptions/subscription-schedules).
	Status string `json:"status"`
	// Subscription subscription.Subscription `json:"subscription,omitempty"`
}
